function drawCountryResponseGraphAnimations(){var e;for(var n in countryResponseUpdatedObjects){e=!1;for(a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.data={},t.windowTotal=0,t.visible=!1,countryResponseObjects.push(t)}}for(var a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].data={},n=countryResponseObjects[a].name,void 0==countryResponseUpdatedObjects[n]?(countryResponseObjects[a].data[123]=0,countryResponseObjects[a].data["4xx"]=0,countryResponseObjects[a].data["5xx"]=0,countryResponseObjects[a].uniqueIps=0):(countryResponseObjects[a].data[123]=countryResponseUpdatedObjects[n][123],countryResponseObjects[a].data["4xx"]=countryResponseUpdatedObjects[n]["4xx"],countryResponseObjects[a].data["5xx"]=countryResponseUpdatedObjects[n]["5xx"],countryResponseObjects[a].uniqueIps=Object.keys(countryResponseUpdatedObjects[n].ipList).length),countryResponseObjects[a].series.push(countryResponseObjects[a].data),countryResponseObjects[a].total=countryResponseObjects[a].data[123]+countryResponseObjects[a].data["4xx"]+countryResponseObjects[a].data["5xx"],countryResponseObjects[a].windowTotal+=countryResponseObjects[a].total,countryResponseObjects[a].series.length>countryDataFrames){var i=countryResponseObjects[a].series.shift();countryResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}countryResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<countryResponseObjects.length;r++)n=countryResponseObjects[r].name,o<countryGraphsMax?(countryResponseObjects[r].visible?updateCountryResponseTimelineGraph(n,countryResponseObjects[r].data):(setupCountryGraph(n,countryResponseObjects[r].series),countryResponseObjects[r].visible=!0),document.getElementById("country"+n+"Connections").innerHTML=numberWithCommas(countryResponseObjects[r].total),document.getElementById("country"+n+"IPs").innerHTML=numberWithCommas(countryResponseObjects[r].uniqueIps),updateCountryResponseTypeGraph("countryResponseTypeGraph"+n,countryResponseObjects[r].data),document.getElementById("country"+n+"ParentContainer").style.top=56*r+"px",o++):(null!=document.getElementById("country"+n+"ParentContainer")&&(document.getElementById("country"+n+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[n],countryResponseObjects[r].visible=!1)}function clearCountryGraphs(){for(var e,n=0;n<countryResponseObjects.length;n++)e=countryResponseObjects[n].name,null!=document.getElementById("country"+e+"ParentContainer")&&(document.getElementById("country"+e+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[e],countryResponseObjects[n].visible=!1,countryResponseObjects[n].series=[]}function setupCountryGraph(e,n){document.getElementById("countryGraphs").insertAdjacentHTML("beforeend",'<div id="country'+e+'ParentContainer" class="countryGraphContainersParents" onmousedown="zoomToCountry(\''+decodeCountryName(e)+'\')"><div class="countryGraphContainers"><span id="country'+e+'Name" class="countryName" >'+decodeCountryName(e)+'</span><span id="country'+e+'Connections" class="countryConnections" ></span><span id="country'+e+'IPs" class="countryIPs" ></span><div id="graph-'+e+'"></div><div id="countryResponseTypeGraph'+e+'" class="countryResponseTypeGraphs"></div></div></div>'),setupCountryCircleGraph("countryResponseTypeGraph"+e),setupCountryTimeLineGraph(e,n)}function setupCountryCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+countryResponseGraphWidth/2+","+countryResponseGraphHeight/2+")")}function setupCountryTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:countryDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),countryTimeLineGraphs[e]=t}function updateCountryResponseTimelineGraph(e,n){var t=countryTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateCountryResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=countryResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(countryResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return countryResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(countryResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return countryResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(countryResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return countryResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcInner(n(e))}}),s.exit().remove()}function updateDeviceCircleGraphs(e,n){return n.domain().map(function(n){return"value"==n?{label:n,value:e}:{label:n,value:1-e}})}function drawDeviceCircleGraphAnimations(e,n,t){valueMobile=Math.round(100*e),drawDeviceCircleGraphs(updateDeviceCircleGraphs(e,deviceCircleGraphColorMobile),deviceCircleGraphMobile,deviceCircleGraphColorMobile),document.getElementById("deviceCircleGraphMobilePercent").innerHTML=valueMobile+"%",valueTablet=Math.round(100*n),drawDeviceCircleGraphs(updateDeviceCircleGraphs(n,deviceCircleGraphColorTablet),deviceCircleGraphTablet,deviceCircleGraphColorTablet),document.getElementById("deviceCircleGraphTabletPercent").innerHTML=valueTablet+"%",valueMonitor=Math.round(100*t),drawDeviceCircleGraphs(updateDeviceCircleGraphs(t,deviceCircleGraphColorMonitor),deviceCircleGraphMonitor,deviceCircleGraphColorMonitor),document.getElementById("deviceCircleGraphMonitorPercent").innerHTML=valueMonitor+"%"}function drawDeviceCircleGraphs(e,n,t){var a=n.select(".slices").selectAll("path.slice").data(pie(e),key);a.enter().insert("path").style("fill",function(e){return t(e.data.label)}).attr("class","slice"),a.transition().duration(500).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return arcDevice(n(e))}}),a.exit().remove()}function drawEndPointResponseGraphAnimations(){var e;for(var n in endPointResponseUpdatedObjects){e=!1;for(a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.seriesResponse=[],t.data={},t.region=endPointResponseUpdatedObjects[n].region,t.response={},t.windowTotal=0,t.visible=!1,endPointResponseObjects.push(t)}}for(var a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].data={},n=endPointResponseObjects[a].name,void 0==endPointResponseUpdatedObjects[n]?(endPointResponseObjects[a].data[123]=0,endPointResponseObjects[a].data["4xx"]=0,endPointResponseObjects[a].data["5xx"]=0,endPointResponseObjects[a].response.value=0,endPointResponseObjects[a].response.area=0,endPointResponseObjects[a].uniqueIps=0):(endPointResponseObjects[a].data[123]=endPointResponseUpdatedObjects[n][123],endPointResponseObjects[a].data["4xx"]=endPointResponseUpdatedObjects[n]["4xx"],endPointResponseObjects[a].data["5xx"]=endPointResponseUpdatedObjects[n]["5xx"],endPointResponseObjects[a].response.value=endPointResponseUpdatedObjects[n].response/endPointResponseUpdatedObjects[n].responseCount,endPointResponseObjects[a].response.area=endPointResponseObjects[a].response.value,endPointResponseObjects[a].uniqueIps=Object.keys(endPointResponseUpdatedObjects[n].ipList).length),endPointResponseObjects[a].series.push(endPointResponseObjects[a].data),endPointResponseObjects[a].seriesResponse.push(endPointResponseObjects[a].response),endPointResponseObjects[a].total=endPointResponseObjects[a].data[123]+endPointResponseObjects[a].data["4xx"]+endPointResponseObjects[a].data["5xx"],endPointResponseObjects[a].windowTotal+=endPointResponseObjects[a].total,endPointResponseObjects[a].series.length>endPointDataFrames){var i=endPointResponseObjects[a].series.shift();endPointResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}endPointResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<endPointResponseObjects.length;r++)n=endPointResponseObjects[r].name,o<endPointGraphsMax?(endPointResponseObjects[r].visible?(updateEndPointResponseTimelineGraph(n,endPointResponseObjects[r].data),updateEndPointResponseTimelineResponeTimeGraph(n,endPointResponseObjects[r].response)):(setupEndPointGraph(n,endPointResponseObjects[r].region,endPointResponseObjects[r].series,endPointResponseObjects[r].seriesResponse),endPointResponseObjects[r].visible=!0),document.getElementById("endPoint"+n+"Connections").innerHTML=numberWithCommas(endPointResponseObjects[r].total),document.getElementById("endPoint"+n+"IPs").innerHTML=numberWithCommas(endPointResponseObjects[r].uniqueIps),document.getElementById("endPoint"+n+"ResonseTimes").innerHTML=(Math.round(endPointResponseObjects[r].response.value)/1e3).toFixed(3)+"s",updateEndPointResponseTypeGraph("endPointResponseTypeGraph"+n,endPointResponseObjects[r].data),document.getElementById("endPoint"+n+"ParentContainer").style.top=70*r+"px",o++):(null!=document.getElementById("endPoint"+n+"ParentContainer")&&(document.getElementById("endPoint"+n+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[n],delete endPointTimeLineResponseTimeGraphs[n],endPointResponseObjects[r].visible=!1)}function clearEndPointResponseGraphs(){for(var e,n=0;n<endPointResponseObjects.length;n++)e=endPointResponseObjects[n].name,null!=document.getElementById("endPoint"+e+"ParentContainer")&&(document.getElementById("endPoint"+e+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[e],delete endPointTimeLineResponseTimeGraphs[e],endPointResponseObjects[n].visible=!1,endPointResponseObjects[n].series=[],endPointResponseObjects[n].seriesResponse=[]}function setupEndPointGraph(e,n,t,a){document.getElementById("endPointGraphs").insertAdjacentHTML("beforeend",'<div id="endPoint'+e+'ParentContainer" class="endPointGraphContainersParents" onmousedown="zoomToRegion(\''+n+'\')"><div class="endPointGraphContainers"><span id="endPoint'+e+'Name" class="endPointName" >'+decodeEndPointName(e)+'</span><span id="endPoint'+e+'Connections" class="endPointConnections" ></span><span id="endPoint'+e+'IPs" class="endPointIPs" ></span><div id="graph-'+e+'"></div><div id="endPointResponseTypeGraph'+e+'" class="endPointResponseTypeGraphs"></div><div id="graph-responseTime-'+e+'" class="endPointResponseTimeGraphs"></div><span id="endPoint'+e+'ResonseTimes" class="endPointResponseTimes" ></span></div></div>'),setupEndPointCircleGraph("endPointResponseTypeGraph"+e),setupEndPointTimeLineGraph(e,t),setupEndPointTimeLineResponseTimeGraph(e,a)}function setupEndPointCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+endPointResponseGraphWidth/2+","+endPointResponseGraphHeight/2+")")}function setupEndPointTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineGraphs[e]=t}function setupEndPointTimeLineResponseTimeGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-responseTime-"+e),width:345,height:15,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:"#00adef",renderer:"line",strokeWidth:.75},{name:"area",color:"rgba(0,133,199,0.3)",renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineResponseTimeGraphs[e]=t}function updateEndPointResponseTimelineGraph(e,n){var t=endPointTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTimelineResponeTimeGraph(e,n){var t=endPointTimeLineResponseTimeGraphs[e],a={};a.value=n.value,a.area=n.area,t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=endPointResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(endPointResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(endPointResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(endPointResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcInner(n(e))}}),s.exit().remove()}function createNewEndPointGraph(e,n){document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<span style="color:#00ADEF;float:left;">'+e+'</span><span id="graph-total-'+e+'" style="color:#ffffff;float:right;">0</span>'),document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<div id="graph-'+e+'" style="margin-bottom:5px;"></div>');var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:400,height:60,min:100,interpolation:"basis",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:color4xx},{name:"5xx",color:color5xx},{name:"123",color:color123}],void 0,{timeInterval:250,maxDataPoints:150,timeBase:(new Date).getTime()/1e3})}),a=new Rickshaw.Graph.Smoother({graph:t,element:document.querySelector("#smoother")});new Rickshaw.Graph.Axis.Y({graph:t,pixelsPerTick:30,tickFormat:function(e){return e/1e3+"s"},ticksTreatment:"inverse"}).render(),"steam"==n?(t.setRenderer("stack"),t.offset="wiggle",a.setScale(40)):"line"==n?(t.setRenderer("line"),t.offset="zero",a.setScale(30)):"scatter"==n&&(t.setRenderer("scatterplot",{dotSize:1.2}),t.offset="value"),t.update(),endPointHealthGraphs.push(t);var i={};i["4xx"]=0,i["5xx"]=0,i[123]=0,endPoints[e]=i,graphTotals[e]=0}function startEndPointGraphAnimations(){setInterval(function(){for(var e in endPoints){var n=Math.random();n<.1?(endPoints[e]["4xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["4xx"]=0,n<.3&&n>.2?(endPoints[e]["5xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["5xx"]=0,n>.5?(endPoints[e][123]=Math.floor(1200*Math.random()+200),graphTotals[e]++):endPoints[e][123]=0}for(var t,a=0;a<endPointHealthGraphs.length;a++)t=(t=endPointHealthGraphs[a].element.id).substring("graph-".length,t.length),endPointHealthGraphs[a].series.addData(endPoints[t]),endPointHealthGraphs[a].update(),document.getElementById("graph-total-"+t).innerHTML=numberWithCommas(graphTotals[t])},1e3)}function translateElb(e){var n={};return n.id=e.LoadBalancerName,n.name=e.LoadBalancerName,n.status="pending",void 0!=e.Instances&&e.Instances.length>0&&(n.status="running"),n.AvailabilityZone=e.AvailabilityZones[0],void 0!=n.AvailabilityZone&&(n.Region=n.AvailabilityZone.substring(0,n.AvailabilityZone.length-1)),n.instances=e.Instances,n.tags=e.Tags,n.health=e.health,n.type="elb",n}function translateApiGateway(e){var n={};return n.id=e.id,n.name=e.name,n.Region=e.region,n.Description=e.description,n.stages=e.stages,n.type="apigateway",n.status="running",n}function createNewLineGraph(e,n,t,a,i,o,r){var s=208,l=60;"third"==a&&(s=140,l=50),document.getElementById(n).insertAdjacentHTML("beforeend",'<div id="graph-'+e+'"><span style="color:'+i+'" class="'+n+'Titles">'+e+'</span><span id="graph-total-'+e+'" class="'+n+'Totals">0</span></div>');var c=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:s,height:l,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:i,strokeWidth:r,renderer:"line"},{name:"area",color:o,renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:30,timeBase:(new Date).getTime()/1e3})});c.offset="zero",c.update(),lineGraphs.push(c)}function drawLineGraphAnimations(e,n,t,a,i){for(var o,r,s=t+a+i,l=0;l<lineGraphs.length;l++)r={},"Connections"==(o=(o=lineGraphs[l].element.id).substring("graph-".length,o.length))?(r.value=e,r.area=e):"Unique IPs"==o?(r.value=n,r.area=n):"Success"==o?(r.value=t,r.area=t):"Rejected"==o?(r.value=a,r.area=a):"Error"==o&&(r.value=i,r.area=i),lineGraphs[l].series.addData(r),lineGraphs[l].update(),document.getElementById("graph-total-"+o).innerHTML="Success"==o||"Rejected"==o||"Error"==o?0==s?"0%":Math.round(r.value/s*100)+"%":numberWithCommas(r.value)}function clearLineGraphs(){for(var e,n,t=0;t<150;t++)for(var a=0;a<lineGraphs.length;a++)n={},e=(e=lineGraphs[a].element.id).substring("graph-".length,e.length),n.value=0,lineGraphs[a].series.addData(n),lineGraphs[a].update();for(var i=0;i<lineGraphs.length;i++)e=(e=lineGraphs[i].element.id).substring("graph-".length,e.length),document.getElementById("graph-total-"+e).innerHTML=0,lineGraphs[i].update()}function resetLargeMapZoom(){mapLargeWorld.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)"),mapLargeUSA.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)")}function drawMap(e){var n={},t=e.map(function(e){return e[1]}),a=Math.min.apply(null,t),i=Math.max.apply(null,t);a==i&&(a=0);var o=d3.scale.linear().domain([a,i]).range(["#00212d","#00adef"]);e.forEach(function(e){var t=e[0],a=e[1];n[t]={numberOfThings:a,fillColor:o(a)}}),map.updateChoropleth(n,{reset:!0})}function drawMapLarge(e,n){var t;if(e.forEach(function(e){var t=e[0],a=e[1];"world"==n?(void 0==mapDataSet[t]?mapDataSet[t]={numberOfThings:a,fillColor:null}:mapDataSet[t].numberOfThings+=a,(0==mapMinValue||mapMinValue>mapDataSet[t].numberOfThings)&&(mapMinValue=mapDataSet[t].numberOfThings),mapDataSet[t].numberOfThings>mapMaxValue&&(mapMaxValue=mapDataSet[t].numberOfThings)):(void 0==mapDataSetUSA[t]?mapDataSetUSA[t]={numberOfThings:a,fillColor:null}:mapDataSetUSA[t].numberOfThings+=a,(0==mapMinValueUSA||mapMinValueUSA>mapDataSetUSA[t].numberOfThings)&&(mapMinValueUSA=mapDataSetUSA[t].numberOfThings),mapDataSetUSA[t].numberOfThings>mapMaxValueUSA&&(mapMaxValueUSA=mapDataSetUSA[t].numberOfThings))}),"world"==n){t=d3.scale.linear().domain([mapMinValue,mapMaxValue]).range(["#00212d","#00adef"]);for(var a in mapDataSet)mapDataSet[a].fillColor=t(mapDataSet[a].numberOfThings);mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0})}else{t=d3.scale.linear().domain([mapMinValueUSA,mapMaxValueUSA]).range(["#00212d","#00adef"]);for(var a in mapDataSetUSA)mapDataSetUSA[a].fillColor=t(mapDataSetUSA[a].numberOfThings);mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}}function clearMaps(){mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0}),mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}function drawResponseCodeGraph(e,n,t,a){function i(e){return e.startAngle+(e.endAngle-e.startAngle)/2}var o=n+t+a;0==o?(document.getElementById("responseCodeValue123").innerHTML="0%",document.getElementById("responseCodeValue4xx").innerHTML="0%",document.getElementById("responseCodeValue5xx").innerHTML="0%",document.getElementById("averageResponseTimeValue").innerHTML=(0).toFixed(3)+"s"):(document.getElementById("responseCodeValue123").innerHTML=Math.round(n/o*100)+"%",document.getElementById("responseCodeValue4xx").innerHTML=Math.round(t/o*100)+"%",document.getElementById("responseCodeValue5xx").innerHTML=Math.round(a/o*100)+"%",document.getElementById("averageResponseTimeValue").innerHTML=(Math.round(e)/1e3).toFixed(3)+"s");var r=responseCodeGraphColor.domain().map(function(e){return o>0?"Success"==e?{label:e,value:n/o}:"Rejected"==e?{label:e,value:t/o}:"Error"==e?{label:e,value:a/o}:void 0:{label:e,value:0}}),s=responseCodeGraphSvg.select(".slices").selectAll("path.slice").data(pie(r),key);s.enter().insert("path").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("class","slice"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return responseCodeGraphArc(n(e))}}),s.exit().remove();var l=responseCodeGraphSvg.select(".labels").selectAll("text").data(pie(r),key);l.enter().append("text").attr("dy",".35em").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("id",function(e){return"responseCodeGraphText-"+e.data.label}).text(function(e){return e.data.label}),l.transition().duration(1e3).attrTween("transform",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=responseCodeGraphRadius*(i(t)<Math.PI?1:-1),"translate("+a+")"}}).styleTween("text-anchor",function(e){0==e.data.value?document.getElementById("responseCodeGraphText-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphText-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return i(n(e))<Math.PI?"start":"end"}}),l.exit().remove();var c=responseCodeGraphSvg.select(".lines").selectAll("polyline").data(pie(r),key);c.enter().append("polyline").attr("id",function(e){return"responseCodeGraphLine-"+e.data.label}),c.transition().duration(1e3).attrTween("points",function(e){0==e.data.value?document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=.95*responseCodeGraphRadius*(i(t)<Math.PI?1:-1),[responseCodeGraphArc.centroid(t),responseCodeGraphOuterArc.centroid(t),a]}}),c.exit().remove()}function startScatterGraphAnimations(){for(var e=document.getElementsByClassName("scatterCircleCenter"),n=0;n<e.length;n++)e[n].style.display="block";deviceScatterGraph.layout(scatterCircleGraphInstanceArray,{innerRadius:scatterCircleGraphWidth/2-40,outerRadius:scatterCircleGraphWidth/2-38,ticks:{display:!1},labels:{position:"center",display:!0,size:14,color:"#ffffff",radialOffset:15}}).render()}function pushScatterCircleGraphData(e,n,t,a){deviceScatterData.push({block_id:e,position:98*Math.random()+2,value:n/1e3,code:t}),deviceScatterData.length>2e3&&deviceScatterData.shift()}function drawScatterCircleGraph(){drawCircos(deviceScatterData)}function clearScatterCircleGraph(){drawCircos(deviceScatterData=[],!0)}function drawCircos(e,n){(0!=e.length||void 0!=n&&n)&&deviceScatterGraph.scatter("circleScatterGraph",e,{innerRadius:.2,outerRadius:.98,logScale:!1,fill:!0,size:.75,strokeColor:function(e,n){return 4==e.code?"#ff7b00":5==e.code?"#ff0000":"#ffffff"},axes:[{color:"#00adef",position:.1,opacity:.5,thickness:.5},{color:"#00adef",position:.15,opacity:.5,thickness:.5},{color:"#00adef",position:.2,opacity:.5,thickness:.5},{color:"#00adef",position:.25,opacity:.5,thickness:.5},{color:"#00adef",position:.3,opacity:.5,thickness:.5},{color:"#00adef",position:.35,opacity:.5,thickness:.5},{color:"#00adef",position:.4,opacity:.5,thickness:.5},{color:"#00adef",position:.45,opacity:.5,thickness:.5},{color:"#00adef",position:.5,opacity:.5,thickness:.5},{color:"#00adef",position:.55,opacity:.5,thickness:.5},{color:"#00adef",position:.6,opacity:.5,thickness:.5},{color:"#00adef",position:.65,opacity:.5,thickness:.5},{color:"#00adef",position:.7,opacity:.5,thickness:.5},{color:"#00adef",position:.75,opacity:.5,thickness:.5},{color:"#00adef",position:.8,opacity:.5,thickness:.5},{color:"#00adef",position:.85,opacity:.5,thickness:.5},{color:"#00adef",position:.9,opacity:.5,thickness:.5},{color:"#00adef",position:.95,opacity:.5,thickness:.5},{color:"#00adef",position:1,opacity:.5,thickness:1},{color:"#1F4B64",position:1.2,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.25,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.3,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.35,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.4,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.45,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.5,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.55,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.6,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.65,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.7,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.75,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.8,opacity:.7,thickness:.5},{color:"#182B38",position:2,opacity:1,thickness:.5},{color:"#182B38",position:3,opacity:1,thickness:.5},{color:"#182B38",position:4,opacity:1,thickness:.5},{color:"#182B38",position:5,opacity:1,thickness:.5},{color:"#182B38",position:6,opacity:1,thickness:.5},{color:"#182B38",position:7,opacity:1,thickness:.5},{color:"#182B38",position:8,opacity:1,thickness:.5},{color:"#182B38",position:9,opacity:1,thickness:.5},{color:"#182B38",position:10,opacity:1,thickness:.5},{color:"#182B38",position:30,opacity:1,thickness:.5},{color:"#182B38",position:60,opacity:1,thickness:.5},{color:"#182B38",position:300,opacity:1,thickness:.5}]}).render()}function drawTimeLineGraph(){if(4==timeLineCallBackCount){if(timeLineFirstRun){timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes();for(var e=0;e<287;e++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]-(timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]+timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]),(o={})["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"],o["4xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"],o["5xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o),55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5}else{var n=new Date;n.setMinutes(n.getMinutes()-5);var t=n.getDate(),a=n.getHours(),i=n.getMinutes();timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]-(timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"]+timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"]);var o={};o["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"],o["4xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"],o["5xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+t+" h:"+a+" m:"+i].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o)}timeLineGraph.update(),timeLineGraphLatency.update(),timeLineFirstRun=!1,timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0}}function getInitialTimeLineData(){getTimeLineDataForMetric("Count","Sum","123xx",timeLineBase.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",timeLineBase.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",timeLineBase.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",timeLineBase.toISOString())}function getTimeLineData(){var e=new Date;e.setMinutes(e.getMinutes()-5),e.setSeconds(0),e.setMilliseconds(0),timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]={},timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()].Latency=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["4xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["5xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["123xx"]=0,getTimeLineDataForMetric("Count","Sum","123xx",e.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",e.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",e.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",e.toISOString())}function getTimeLineDataForMetric(e,n,t,a){if(!simulatorOn)for(var i in inventory.apigateway){var o={};o.Name="ApiName",o.Value=inventory.apigateway[i].name;for(var r={MetricName:e,Namespace:"AWS/ApiGateway",Dimensions:[o],Period:300,StartTime:a,EndTime:(new Date).toISOString(),Statistics:[n]},s=0;s<cloudWatchObjects.length;s++)"123xx"==t?timeLineInitialDataCountCalls++:"4xx"==t?timeLineInitialData4xxCalls++:"5xx"==t?timeLineInitialData5xxCalls++:"Latency"==t&&timeLineInitialDataLatencyCalls++,function(e,n,t){cloudWatchObjects[s].getMetricStatistics(r,function(e,a){var i,o,r;if("123xx"==t?(i=++timeLineInitialDataCountResponses,o=timeLineInitialDataCountCalls,r=timeLineInitialDataCount):"4xx"==t?(i=++timeLineInitialData4xxResponses,o=timeLineInitialData4xxCalls,r=timeLineInitialData4xx):"5xx"==t?(i=++timeLineInitialData5xxResponses,o=timeLineInitialData5xxCalls,r=timeLineInitialData5xx):"Latency"==t&&(i=++timeLineInitialDataLatencyResponses,o=timeLineInitialDataLatencyCalls,r=timeLineInitialDataLatency),e)console.log(e,e.stack);else if(a.Datapoints.length>0&&("123xx"==t?r=timeLineInitialDataCount=timeLineInitialDataCount.concat(a.Datapoints):"4xx"==t?r=timeLineInitialData4xx=timeLineInitialData4xx.concat(a.Datapoints):"5xx"==t?r=timeLineInitialData5xx=timeLineInitialData5xx.concat(a.Datapoints):"Latency"==t&&(r=timeLineInitialDataLatency=timeLineInitialDataLatency.concat(a.Datapoints))),i==o){for(var s,l=0;l<r.length;l++)void 0!=(s=r[l].Timestamp)&&(s.setMinutes(s.getMinutes()-(s.getMinutes()-5*Math.ceil(s.getMinutes()/5))),void 0!=timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()]&&(timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()][t]+=r[l][n]));timeLineCallBackCount++,drawTimeLineGraph()}})}(0,n,t)}}function convertDateToUTC(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}function addTrafficEvent(e,n){var t=round(n.lat,.5),a=round(n.lon,.5);void 0==newConnectionQueue[t+"|"+a]&&(newConnectionQueue[t+"|"+a]={},newConnectionQueue[t+"|"+a].lat=n.lat,newConnectionQueue[t+"|"+a].lon=n.lon,newConnectionQueue[t+"|"+a]["4xx"]=0,newConnectionQueue[t+"|"+a]["5xx"]=0,newConnectionQueue[t+"|"+a][123]=0,newConnectionQueue[t+"|"+a].total=0,newConnectionQueue[t+"|"+a].devices={}),void 0==newConnectionQueue[t+"|"+a].devices[e]&&(newConnectionQueue[t+"|"+a].devices[e]={},newConnectionQueue[t+"|"+a].devices[e]["4xx"]=0,newConnectionQueue[t+"|"+a].devices[e]["5xx"]=0,newConnectionQueue[t+"|"+a].devices[e][123]=0,newConnectionQueue[t+"|"+a].devices[e].total=0);for(var i=0;i<n.details.length;i++)newConnectionQueue[t+"|"+a].total++,newConnectionQueue[t+"|"+a].devices[e].total++,"4"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["4xx"]++,newConnectionQueue[t+"|"+a].devices[e]["4xx"]++):"5"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["5xx"]++,newConnectionQueue[t+"|"+a].devices[e]["5xx"]++):(newConnectionQueue[t+"|"+a][123]++,newConnectionQueue[t+"|"+a].devices[e][123]++);newConnectionQueue[t+"|"+a].total>trafficCountHigh&&(trafficCountHigh=newConnectionQueue[t+"|"+a].total),trafficPointCount++,trafficConnectionCount+=n.details.length}function showTraffic(){var e,n,t,a,i,o,r,s,l,c,d=new THREE.Geometry,u=new THREE.Mesh,p=new THREE.Geometry,m=new THREE.Geometry,h=new THREE.Geometry,g=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.9}),y=new THREE.MeshLambertMaterial({color:"rgb(255, 20, 0)",transparent:!0,opacity:.9}),f=new THREE.MeshLambertMaterial({color:"rgb(255, 60, 0)",transparent:!0,opacity:.9}),v=new THREE.LineDashedMaterial({color:16777215,scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),M=new THREE.LineDashedMaterial({color:"rgb(255, 100, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),T=new THREE.LineDashedMaterial({color:"rgb(255, 30, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7});void 0!=globe.scene.getObjectByName("trafficPointsMesh")&&globe.scene.remove(globe.scene.getObjectByName("trafficPointsMesh")),void 0!=globe.scene.getObjectByName("trafficLineSegments123")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments123")),void 0!=globe.scene.getObjectByName("trafficLineSegments4xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments4xx")),void 0!=globe.scene.getObjectByName("trafficLineSegments5xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments5xx"));var C=!1;for(var R in newConnectionQueue){r=(90-newConnectionQueue[R].lat)*Math.PI/180,s=(180-newConnectionQueue[R].lon)*Math.PI/180,e=globe.globeRadius*Math.sin(r)*Math.cos(s),n=globe.globeRadius*Math.cos(r),t=globe.globeRadius*Math.sin(r)*Math.sin(s),i=new THREE.Vector3(e,n,t),c=(c=newConnectionQueue[R].total-trafficConnectionCount/trafficPointCount)<=1?1:Math.floor(scaleBetween(c,1,10,1,trafficCountHigh)),u.geometry=new THREE.SphereGeometry(c,10,10),u.position.x=e,u.position.y=n,u.position.z=t,u.lookAt(globe.globeMesh.position),u.updateMatrix(),l=0,newConnectionQueue[R]["4xx"]/newConnectionQueue[R].total>=.25&&(l=2),newConnectionQueue[R]["5xx"]/newConnectionQueue[R].total>=.25&&newConnectionQueue[R]["5xx"]>newConnectionQueue[R]["4xx"]&&(l=1);for(var S=0;S<u.geometry.faces.length;S++)u.geometry.faces[S].materialIndex=l;d.merge(u.geometry,u.matrix),i.x<0?i.x-=globe.regionOffset/1.5:i.x+=globe.regionOffset/1.5,i.y<0?i.y-=globe.regionOffset/1.5:i.y+=globe.regionOffset/1.5,i.z<0?i.z-=globe.regionOffset/1.5:i.z+=globe.regionOffset/1.5;for(var G in newConnectionQueue[R].devices){C=!1,(a=globe.scene.getObjectByName(G)).geometry.computeBoundingBox();var b=a.geometry.boundingBox;(o=new THREE.Vector3).subVectors(b.max,b.min),o.multiplyScalar(.5),o.add(b.min),o.applyMatrix4(a.matrixWorld),o=new THREE.Vector3(o.x,o.y,o.z),newConnectionQueue[R].devices[G]["4xx"]/newConnectionQueue[R].devices[G].total>=.25&&(m=getArc(i,o,50,m),C=!0),newConnectionQueue[R].devices[G]["5xx"]/newConnectionQueue[R].devices[G].total>=.25&&newConnectionQueue[R].devices[G]["5xx"]>newConnectionQueue[R].devices[G]["4xx"]&&(h=getArc(i,o,50,h),C=!0),C||(p=getArc(i,o,50,p))}}var L=new THREE.Mesh(d,new THREE.MultiMaterial([g,y,f]));L.name="trafficPointsMesh",globe.scene.add(L);var A=new THREE.LineSegments(p,v);A.updateMatrix(),A.name="trafficLineSegments123",globe.scene.add(A);var E=new THREE.LineSegments(m,M);E.updateMatrix(),E.name="trafficLineSegments4xx",globe.scene.add(E);var I=new THREE.LineSegments(h,T);I.updateMatrix(),I.name="trafficLineSegments5xx",globe.scene.add(I),trafficPointCount=0,trafficConnectionCount=0,trafficCountHigh=0,newConnectionQueue={}}function getArc(e,n,t,a){var i=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3;i.subVectors(new THREE.Vector3,n),o.subVectors(e,n),i.cross(o),r.copy(i).normalize();var s=e.angleTo(n)/(t-1),l=e.clone();l.x>0?l.x-=globe.regionOffset/2:l.x+=globe.regionOffset/2,l.y>0?l.y-=globe.regionOffset/2:l.y+=globe.regionOffset/2,l.z>0?l.z-=globe.regionOffset/2:l.z+=globe.regionOffset/2,a.vertices.push(l);for(var c=1;c<t;c++)a.vertices.push(e.clone().applyAxisAngle(r,s*c));return a}function scaleBetween(e,n,t,a,i){return(t-n)*(e-a)/(i-a)+n}function showTrafficDetails(e){globe.scene.getObjectByName(e);var n=(90-parseInt(traffic[e].lat))*Math.PI/180,t=(180-parseInt(traffic[e].lon))*Math.PI/180,a=700/1.55*Math.sin(n)*Math.cos(t),i=700/1.55*Math.cos(n),o=700/1.55*Math.sin(n)*Math.sin(t);globe.setCameraPosition(a,i,o);var r="successText",s="";document.getElementById("trafficBlockedCount").innerHTML="",document.getElementById("trafficPorts").innerHTML="",document.getElementById("trafficMap").src=googleMapsBaseUrl+"&q="+traffic[e].lat+","+traffic[e].lon+"&zoom=6&maptype=satellite",void 0!=traffic[e].blockedCount&&traffic[e].blockedCount>0&&(r="alertText",s="(This IP has been blocked by other users!)",document.getElementById("trafficBlockedCount").innerHTML='<span class="'+r+'">Total Times Blocked: '+traffic[e].blockedCount+"</span>");for(var l in traffic[e])isNaN(l)||("22"==l?(r="severeWarnText",s="(Privledged Access Port 22 In Use)",document.getElementById("trafficPorts").innerHTML+="<div class='"+r+"'>Port "+l+" Count: "+traffic[e][l]+"</div>"):document.getElementById("trafficPorts").innerHTML+="<div>Port "+l+" Count: "+traffic[e][l]+"</div>");document.getElementById("trafficIp").innerHTML='<span class="'+r+'">'+e+" "+s+"</span>",document.getElementById("trafficCountry").innerHTML="Country: "+traffic[e].country,document.getElementById("trafficStateProv").innerHTML="State/Province: "+traffic[e].state,document.getElementById("trafficCity").innerHTML="City: "+traffic[e].city,document.getElementById("trafficCoordinates").innerHTML="Coordinates: "+traffic[e].lat+","+traffic[e].lon,document.getElementById("trafficLocalTime").innerHTML="Local Time: "+new Date,document.getElementById("detailsBodyMetrics").style.display="none",document.getElementById("detailsBodyTraffic").style.display="block",document.getElementById("paneMiddle").className+=" openPane"}function getApiGatewayLogs(e){function n(e,n,a){if(void 0==a)for(var i=0;i<e.items.length;i++)!function(e,n){var a={};a.id=e.id,a.name=e.name,a.description=e.description,a.region=n.config.region,a.type="apigateway",a.cloud="aws",a.stages=[],apiGatewayInventoryQueue[e.id]=a,apiGatewayStagesTarget++;var i={restApiId:e.id};n.getStages(i,function(n,a){n?t(null,null,n):t(a,e.id)})}(e.items[i],n);else console.log(a,a.stack);apiGatewayObjectActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function t(e,n,t){if(void 0==t)for(var i=0;i<e.item.length;i++)apiGatewayInventoryQueue[n].stages.push(e.item[i].stageName),isDeviceFilteredOut(n+"/"+e.item[i].stageName)||a(n,e.item[i].stageName);else console.log(t,t.stack);apiGatewayStagesActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function a(e,n,t){var a=apiGatewayCloudWatchLogsPrefix+e+"/"+n;apiGatewayConnectionTarget++;var r={logGroupName:a,endTime:o.getTime(),filterPattern:"Method - Starting - HTTP - path - query - body - Endpoint - Execution - response",interleaved:!0,limit:1e4,startTime:i.getTime()};cloudWatchLogs.filterLogEvents(r,function(e,n){e?console.log(e,e.stack):getConnections(a,n)})}if(!simulatorOn){ipGatewayLogRetrivalInProgress=!0,apiGatewayObjectTarget=APIGatewayObjects.length,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0;var i=new Date(e.getTime());i.setSeconds(i.getSeconds()-trafficWindowSeconds);for(var o=e,r={},s=0;s<APIGatewayObjects.length;s++)!function(e){e.getRestApis(r,function(t,a){t?n(null,null,t):n(a,e)})}(APIGatewayObjects[s])}}function getConnections(e,n){console.log("getting connections"),console.log(n);var t={};t.type="apiGateway",t.id=e.substring(apiGatewayCloudWatchLogsPrefix.length,e.length);for(var a=0;a<trafficQueue.length;a++)if(trafficQueue[a].id==t.id){t=trafficQueue[a];break}void 0==t.connections&&(t.connections=[],t.responses=[],trafficQueue.push(t));for(var i,o,r,s,l,c="",d="",u={},p=0;p<n.events.length;p++)if(c=n.events[p].message,d=c.substring(1,c.indexOf(")")),-1!=c.indexOf("Method request headers:")){u[d]={},u[d].id=d,u[d].start=n.events[p].timestamp;var m=testOnly[Math.round(23*Math.random())];console.log(m),u[d].ip=m,i=(i=c.substring(c.indexOf("X-Forwarded-Port=")+"X-Forwarded-Port=".length,c.length)).substring(0,i.indexOf(",")),u[d].port=i,o=(o=c.substring(c.indexOf("CloudFront-Is-Tablet-Viewer=")+"CloudFront-Is-Tablet-Viewer=".length,c.length)).substring(0,o.indexOf(",")),u[d].tablet=o,r=(r=c.substring(c.indexOf("CloudFront-Is-Mobile-Viewer=")+"CloudFront-Is-Mobile-Viewer=".length,c.length)).substring(0,r.indexOf(",")),u[d].mobile=r,s=(s=c.substring(c.indexOf("CloudFront-Is-SmartTV-Viewer=")+"CloudFront-Is-SmartTV-Viewer=".length,c.length)).substring(0,s.indexOf(",")),u[d].smartTV=s,l=(l=c.substring(c.indexOf("Accept-Language=")+"Accept-Language=".length,c.length)).substring(0,l.indexOf(",")),u[d].language=l,u[d].desktop=c.substring(c.indexOf("CloudFront-Is-Desktop-Viewer=")+"CloudFront-Is-Desktop-Viewer=".length,c.length-1),u[d].userAgent=c.substring(c.indexOf("User-Agent=")+"User-Agent=".length,c.indexOf(", X-Forwarded-Proto"))}else-1!=c.indexOf("Method completed with status:")&&(void 0==u[d]&&(u[d]={},u[d].id=d),u[d].responseCode=c.substring(c.indexOf("Method completed with status:")+"Method completed with status:".length+1,c.length),u[d].end=n.events[p].timestamp);var h=null;for(var g in u)if(void 0!=u[g].ip&&void 0!=u[g].responseCode&&void 0!=u[g].start&&void 0!=u[g].end){for(var y=0;y<t.connections.length;y++)if(t.connections[y].ip==u[g].ip){h=t.connections[y];break}if(null==h){(h={}).ip=m,h.details=[];var f=getDataFromIpMappingByIp(m);void 0==f?ipLookUpQueue.push(m):(h.lat=f.lat,h.lon=f.lon,h.country=f.country,h.stateRegion=f.stateRegion,h.city=f.city),t.connections.push(h)}void 0!=connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]&&(u[g].processed=!0),h.details.push(u[g]),connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]={}}apiGatewayConnectionActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function areApiGatewayLogsRetrieved(){return apiGatewayObjectTarget==apiGatewayObjectActual&&apiGatewayStagesTarget==apiGatewayStagesActual&&apiGatewayConnectionTarget==apiGatewayConnectionActual}function loadApiGatewayInventory(){var e=[];for(var n in apiGatewayInventoryQueue)for(var t=0;t<apiGatewayInventoryQueue[n].stages.length;t++)if(void 0==inventory.apigateway||void 0==inventory.apigateway[n+"/"+apiGatewayInventoryQueue[n].stages[t]]){var a=JSON.parse(JSON.stringify(apiGatewayInventoryQueue[n]));a.id=n+"/"+apiGatewayInventoryQueue[n].stages[t],e.push(a);var i={};i.len=100,i.color="#00adef",i.id=a.id,i.label=a.name+" ("+apiGatewayInventoryQueue[n].stages[t]+")",scatterCircleGraphInstanceArray.push(i)}apiGatewayInventoryQueue=[],e.length>0&&(globe.load("inventory",e),startScatterGraphAnimations())}function authenticate(e,n){$.ajax({url:baseUrl,type:"POST",contentType:"application/json",data:JSON.stringify({u:e,p:n}),dataType:"json",success:function(e){var n=JSON.parse(e);AWS.config.update({accessKeyId:n.userAccount.AccessKeyId,secretAccessKey:n.userAccount.SecretAccessKey,sessionToken:n.userAccount.SessionToken,region:loginRegion}),s3=new AWS.S3({apiVersion:"2006-03-01"}),cloudWatchLogs=new AWS.CloudWatchLogs({apiVersion:"2014-03-28"}),APIGatewayObjects=[new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ca-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-south-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"sa-east-1"})],cloudWatchObjects=[new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ca-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-south-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"sa-east-1"})],appAccountConf=n.appAccount,appAccountS3=new AWS.S3({apiVersion:"2006-03-01",credentials:new AWS.Credentials(appAccountConf.AccessKeyId,appAccountConf.SecretAccessKey,appAccountConf.SessionToken)});var t=new Date;if(t.setHours(t.getHours()-24),null==localStorage.getItem("dataRefreshDate")||forceIpKeyRefresh||new Date(localStorage.getItem("dataRefreshDate"))>t){var a={Bucket:"central-sky-ips",Key:"list.json"};appAccountS3.getObject(a,function(e,n){e?console.log(e,e.stack):cacheIpFileKeys(JSON.parse(n.Body))})}null==localStorage.getItem("blocksCached")&&localStorage.setItem("blocksCached","{}"),loginAndLoadInventory()},error:function(e){alert("error="+e)}})}function cacheIpFileKeys(e){console.log("loading keys");for(var n=0;n<e.length;n++)localStorage.setItem(e[n],e[n]);localStorage.setItem("dataRefreshDate",(new Date).getTime())}function lookUpIpsInQueue(){for(var e,n=0;n<ipLookUpQueue.length;n++)e=localStorage.getItem(ipLookUpQueue[n].substring(0,ipLookUpQueue[n].indexOf("."))),console.log("key="+e),void 0!=e&&void 0==ipKeysCached[e]&&void 0==ipKeyCallsQueued[e]&&(ipKeyCallsQueued[e]={},getIpFiles(e));drawUpdates(),lastTrafficRefreshTime=new Date((new Date).getTime()-timeOffset),ipGatewayLogRetrivalInProgress=!1}function addIpsFromDBtoMap(e,n,t){var a;if(null!=e){for(var i=e.split("\r\n"),o=[],r=0;r<i.length;r++)if((o=i[r].split(",")).length>2){a=o[0].replace(/"/gi,"")+"-"+o[1].replace(/"/gi,""),ipMappings[a]={},ipMappings[a].country=o[2].replace(/"/gi,""),ipMappings[a].stateRegion=o[3].replace(/"/gi,""),ipMappings[a].city=o[4].replace(/"/gi,""),ipMappings[a].lat=o[5].replace(/"/gi,""),ipMappings[a].lon=o[6].replace(/"/gi,"");var s=JSON.parse(localStorage.getItem("blocksCached"));null==s&&(s={}),s[a]={},localStorage.setItem(a,JSON.stringify(ipMappings[a])),localStorage.setItem("blocksCached",JSON.stringify(s))}ipKeysCached[n]={},ipKeyCallsQueued[n]=void 0}else console.log(t,t.stack);ipKeysReturned++;var l;if(ipKeysCalled==ipKeysReturned){for(var c=0;c<trafficQueue.length;c++){console.log(trafficQueue[c]);for(var d=0;d<trafficQueue[c].connections.length;d++)console.log(trafficQueue[c].connections),void 0==trafficQueue[c].connections[d].lat&&(l=getDataFromIpMappingByIp(trafficQueue[c].connections[d].ip),trafficQueue[c].connections[d].lat=l.lat,trafficQueue[c].connections[d].lon=l.lon,trafficQueue[c].connections[d].country=l.country,trafficQueue[c].connections[d].stateRegion=l.stateRegion,trafficQueue[c].connections[d].city=l.city)}console.log("Ip lookup queue emptied"),ipLookUpQueue=[]}}function getIpFiles(e){ipKeysCalled++;var n={Bucket:"central-sky-ips",Key:e+".txt"};appAccountS3.getObject(n,function(n,t){n?addIpsFromDBtoMap(null,null,n):addIpsFromDBtoMap(new TextDecoder("utf-8").decode(t.Body),e)})}function loginAndLoadInventory(){document.getElementById("mainOverlays").style.visibility="visible",document.getElementById("loginOverlay").style.display="none",globe.runLoginAnimation(),slidePanes("in"),setTimeout(function(){setTimeout(function(){setTimeout(function(){startClock(),getLogs(),drawUpdates()},500)},500)},1e3),getBilling()}function getAWSInvetory(){var e={FunctionName:"CentralSky_GetInventory",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),initialLoad&&(getAWSMetrics(),getAWSLoggedMetrics(),getAWSEC2Traffic(),initialLoad=!1),globe.load("inventory",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSInvetory()},getAWSInventoryInterval)})}function getAWSMetrics(){var e={FunctionName:"CentralSky_GetMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSMetrics()},getAWSMetricsInterval)})}function getAWSLoggedMetrics(){var e={FunctionName:"CentralSky_GetLoggedMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSLoggedMetrics()},getAWSLoggedMetricsInterval)})}function getAWSBilling(){var e={FunctionName:"CentralSky_GetBilling",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){globe.load("billing",[JSON.parse(n.Payload)]),setTimeout(function(){1==lambdaEnable&&getAWSBilling()},getAWSBillingInterval)})}function getAWSEC2Traffic(){var e={FunctionName:"CentralSky_GetConnections",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload));for(t=0;t<trafficObjectIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficObjectIds[t]));trafficObjectIds=[];for(var t=0;t<trafficPointIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficPointIds[t]));trafficPointIds=[],globe.load("traffic",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSEC2Traffic()},getAWSEC2TrafficInterval)})}function blockIp(){var e=document.getElementById("trafficIp").innerHTML;e=e.substring(e.indexOf(">")+1,e.indexOf("</")).trim();var n={FunctionName:"CentralSky_BlockConnection",InvocationType:"RequestResponse",Payload:JSON.stringify({ip:e,token:AWS.config.credentials.sessionToken})};lambda.invoke(n,function(n,t){console.log(JSON.parse(t.Payload)),null==JSON.parse(t.Payload)&&console.log(e+" blocked!")})}function getBilling(){if(simulatorOn)globe.load("billing",["2.50"]);else{var e=new Date;e.setTime(e.getTime()-288e5);var n={MetricName:"EstimatedCharges",Namespace:"AWS/Billing",Dimensions:[{Name:"Currency",Value:"USD"}],Period:60,StartTime:e.toISOString(),EndTime:(new Date).toISOString(),Statistics:["Average"]};cloudWatchObjects[0].getMetricStatistics(n,function(e,n){e?console.log(e,e.stack):globe.load("billing",[n.Datapoints[0].Average])})}}function startClock(){var e=new Date;currentTime=new Date(e.getTime()-timeOffset),document.getElementById("clock").innerHTML=currentTime.toUTCString()+" <span style='font-size:14px;'>("+formatAMPM(currentTime)+")</span>",(currentTime.getTime()-lastTrafficQueueClearTime)/1e3>=trafficWindowSeconds&&(lastTrafficQueueClearTime=currentTime.getTime()),!ipGatewayLogRetrivalInProgress&&(currentTime.getTime()-lastTrafficRefreshTime)/1e3>=trafficVisibilitySeconds&&(simulatorOn?lookUpIpsInQueue():getLogs()),timeLineFirstRun||e.getMinutes()%5!=0?timeLineGraphUpdated&&(timeLineGraphUpdated=!1):timeLineGraphUpdated||(getTimeLineData(),timeLineGraphUpdated=!0);setTimeout(startClock,1e3)}function padTimeWithZeros(e){return e<10&&(e="0"+e),e}function startClock(){var e=new Date;currentTime=new Date(e.getTime()-timeOffset),document.getElementById("clock").innerHTML=currentTime.toUTCString()+" <span style='font-size:14px;'>("+formatAMPM(currentTime)+")</span>",(currentTime.getTime()-lastTrafficQueueClearTime)/1e3>=trafficWindowSeconds&&(lastTrafficQueueClearTime=currentTime.getTime()),!ipGatewayLogRetrivalInProgress&&(currentTime.getTime()-lastTrafficRefreshTime)/1e3>=trafficVisibilitySeconds&&(simulatorOn?lookUpIpsInQueue():getLogs()),timeLineFirstRun||e.getMinutes()%5!=0?timeLineGraphUpdated&&(timeLineGraphUpdated=!1):timeLineGraphUpdated||(getTimeLineData(),timeLineGraphUpdated=!0),setTimeout(startClock,1e3)}function padTimeWithZeros(e){return e<10&&(e="0"+e),e}function drawCountryResponseGraphAnimations(){var e;for(var n in countryResponseUpdatedObjects){for(e=!1,a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.data={},t.windowTotal=0,t.visible=!1,countryResponseObjects.push(t)}}for(var a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].data={},n=countryResponseObjects[a].name,void 0==countryResponseUpdatedObjects[n]?(countryResponseObjects[a].data[123]=0,countryResponseObjects[a].data["4xx"]=0,countryResponseObjects[a].data["5xx"]=0,countryResponseObjects[a].uniqueIps=0):(countryResponseObjects[a].data[123]=countryResponseUpdatedObjects[n][123],countryResponseObjects[a].data["4xx"]=countryResponseUpdatedObjects[n]["4xx"],countryResponseObjects[a].data["5xx"]=countryResponseUpdatedObjects[n]["5xx"],countryResponseObjects[a].uniqueIps=Object.keys(countryResponseUpdatedObjects[n].ipList).length),countryResponseObjects[a].series.push(countryResponseObjects[a].data),countryResponseObjects[a].total=countryResponseObjects[a].data[123]+countryResponseObjects[a].data["4xx"]+countryResponseObjects[a].data["5xx"],countryResponseObjects[a].windowTotal+=countryResponseObjects[a].total,countryResponseObjects[a].series.length>countryDataFrames){var i=countryResponseObjects[a].series.shift();countryResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}countryResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<countryResponseObjects.length;r++)n=countryResponseObjects[r].name,o<countryGraphsMax?(countryResponseObjects[r].visible?updateCountryResponseTimelineGraph(n,countryResponseObjects[r].data):(setupCountryGraph(n,countryResponseObjects[r].series),countryResponseObjects[r].visible=!0),document.getElementById("country"+n+"Connections").innerHTML=numberWithCommas(countryResponseObjects[r].total),document.getElementById("country"+n+"IPs").innerHTML=numberWithCommas(countryResponseObjects[r].uniqueIps),updateCountryResponseTypeGraph("countryResponseTypeGraph"+n,countryResponseObjects[r].data),document.getElementById("country"+n+"ParentContainer").style.top=56*r+"px",o++):(null!=document.getElementById("country"+n+"ParentContainer")&&(document.getElementById("country"+n+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[n],countryResponseObjects[r].visible=!1)}function clearCountryGraphs(){for(var e,n=0;n<countryResponseObjects.length;n++)e=countryResponseObjects[n].name,null!=document.getElementById("country"+e+"ParentContainer")&&(document.getElementById("country"+e+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[e],countryResponseObjects[n].visible=!1,countryResponseObjects[n].series=[]}function setupCountryGraph(e,n){document.getElementById("countryGraphs").insertAdjacentHTML("beforeend",'<div id="country'+e+'ParentContainer" class="countryGraphContainersParents" onmousedown="zoomToCountry(\''+decodeCountryName(e)+'\')"><div class="countryGraphContainers"><span id="country'+e+'Name" class="countryName" >'+decodeCountryName(e)+'</span><span id="country'+e+'Connections" class="countryConnections" ></span><span id="country'+e+'IPs" class="countryIPs" ></span><div id="graph-'+e+'"></div><div id="countryResponseTypeGraph'+e+'" class="countryResponseTypeGraphs"></div></div></div>'),setupCountryCircleGraph("countryResponseTypeGraph"+e),setupCountryTimeLineGraph(e,n)}function setupCountryCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+countryResponseGraphWidth/2+","+countryResponseGraphHeight/2+")")}function setupCountryTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:countryDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),countryTimeLineGraphs[e]=t}function updateCountryResponseTimelineGraph(e,n){var t=countryTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateCountryResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=countryResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(countryResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return countryResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(countryResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return countryResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(countryResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return countryResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcInner(n(e))}}),s.exit().remove()}function updateDeviceCircleGraphs(e,n){return n.domain().map(function(n){return"value"==n?{label:n,value:e}:{label:n,value:1-e}})}function drawDeviceCircleGraphAnimations(e,n,t){valueMobile=Math.round(100*e),drawDeviceCircleGraphs(updateDeviceCircleGraphs(e,deviceCircleGraphColorMobile),deviceCircleGraphMobile,deviceCircleGraphColorMobile),document.getElementById("deviceCircleGraphMobilePercent").innerHTML=valueMobile+"%",valueTablet=Math.round(100*n),drawDeviceCircleGraphs(updateDeviceCircleGraphs(n,deviceCircleGraphColorTablet),deviceCircleGraphTablet,deviceCircleGraphColorTablet),document.getElementById("deviceCircleGraphTabletPercent").innerHTML=valueTablet+"%",valueMonitor=Math.round(100*t),drawDeviceCircleGraphs(updateDeviceCircleGraphs(t,deviceCircleGraphColorMonitor),deviceCircleGraphMonitor,deviceCircleGraphColorMonitor),document.getElementById("deviceCircleGraphMonitorPercent").innerHTML=valueMonitor+"%"}function drawDeviceCircleGraphs(e,n,t){var a=n.select(".slices").selectAll("path.slice").data(pie(e),key);a.enter().insert("path").style("fill",function(e){return t(e.data.label)}).attr("class","slice"),a.transition().duration(500).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return arcDevice(n(e))}}),a.exit().remove()}function drawEndPointResponseGraphAnimations(){var e;for(var n in endPointResponseUpdatedObjects){for(e=!1,a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.seriesResponse=[],t.data={},t.region=endPointResponseUpdatedObjects[n].region,t.response={},t.windowTotal=0,t.visible=!1,endPointResponseObjects.push(t)}}for(var a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].data={},n=endPointResponseObjects[a].name,void 0==endPointResponseUpdatedObjects[n]?(endPointResponseObjects[a].data[123]=0,endPointResponseObjects[a].data["4xx"]=0,endPointResponseObjects[a].data["5xx"]=0,endPointResponseObjects[a].response.value=0,endPointResponseObjects[a].response.area=0,endPointResponseObjects[a].uniqueIps=0):(endPointResponseObjects[a].data[123]=endPointResponseUpdatedObjects[n][123],endPointResponseObjects[a].data["4xx"]=endPointResponseUpdatedObjects[n]["4xx"],endPointResponseObjects[a].data["5xx"]=endPointResponseUpdatedObjects[n]["5xx"],endPointResponseObjects[a].response.value=endPointResponseUpdatedObjects[n].response/endPointResponseUpdatedObjects[n].responseCount,endPointResponseObjects[a].response.area=endPointResponseObjects[a].response.value,endPointResponseObjects[a].uniqueIps=Object.keys(endPointResponseUpdatedObjects[n].ipList).length),endPointResponseObjects[a].series.push(endPointResponseObjects[a].data),endPointResponseObjects[a].seriesResponse.push(endPointResponseObjects[a].response),endPointResponseObjects[a].total=endPointResponseObjects[a].data[123]+endPointResponseObjects[a].data["4xx"]+endPointResponseObjects[a].data["5xx"],endPointResponseObjects[a].windowTotal+=endPointResponseObjects[a].total,endPointResponseObjects[a].series.length>endPointDataFrames){var i=endPointResponseObjects[a].series.shift();endPointResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}endPointResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<endPointResponseObjects.length;r++)n=endPointResponseObjects[r].name,o<endPointGraphsMax?(endPointResponseObjects[r].visible?(updateEndPointResponseTimelineGraph(n,endPointResponseObjects[r].data),updateEndPointResponseTimelineResponeTimeGraph(n,endPointResponseObjects[r].response)):(setupEndPointGraph(n,endPointResponseObjects[r].region,endPointResponseObjects[r].series,endPointResponseObjects[r].seriesResponse),endPointResponseObjects[r].visible=!0),document.getElementById("endPoint"+n+"Connections").innerHTML=numberWithCommas(endPointResponseObjects[r].total),document.getElementById("endPoint"+n+"IPs").innerHTML=numberWithCommas(endPointResponseObjects[r].uniqueIps),document.getElementById("endPoint"+n+"ResonseTimes").innerHTML=(Math.round(endPointResponseObjects[r].response.value)/1e3).toFixed(3)+"s",updateEndPointResponseTypeGraph("endPointResponseTypeGraph"+n,endPointResponseObjects[r].data),document.getElementById("endPoint"+n+"ParentContainer").style.top=70*r+"px",o++):(null!=document.getElementById("endPoint"+n+"ParentContainer")&&(document.getElementById("endPoint"+n+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[n],delete endPointTimeLineResponseTimeGraphs[n],endPointResponseObjects[r].visible=!1)}function clearEndPointResponseGraphs(){for(var e,n=0;n<endPointResponseObjects.length;n++)e=endPointResponseObjects[n].name,null!=document.getElementById("endPoint"+e+"ParentContainer")&&(document.getElementById("endPoint"+e+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[e],delete endPointTimeLineResponseTimeGraphs[e],endPointResponseObjects[n].visible=!1,endPointResponseObjects[n].series=[],endPointResponseObjects[n].seriesResponse=[]}function setupEndPointGraph(e,n,t,a){document.getElementById("endPointGraphs").insertAdjacentHTML("beforeend",'<div id="endPoint'+e+'ParentContainer" class="endPointGraphContainersParents" onmousedown="zoomToRegion(\''+n+'\')"><div class="endPointGraphContainers"><span id="endPoint'+e+'Name" class="endPointName" >'+decodeEndPointName(e)+'</span><span id="endPoint'+e+'Connections" class="endPointConnections" ></span><span id="endPoint'+e+'IPs" class="endPointIPs" ></span><div id="graph-'+e+'"></div><div id="endPointResponseTypeGraph'+e+'" class="endPointResponseTypeGraphs"></div><div id="graph-responseTime-'+e+'" class="endPointResponseTimeGraphs"></div><span id="endPoint'+e+'ResonseTimes" class="endPointResponseTimes" ></span></div></div>'),setupEndPointCircleGraph("endPointResponseTypeGraph"+e),setupEndPointTimeLineGraph(e,t),setupEndPointTimeLineResponseTimeGraph(e,a)}function setupEndPointCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+endPointResponseGraphWidth/2+","+endPointResponseGraphHeight/2+")")}function setupEndPointTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineGraphs[e]=t}function setupEndPointTimeLineResponseTimeGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-responseTime-"+e),width:345,height:15,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:"#00adef",renderer:"line",strokeWidth:.75},{name:"area",color:"rgba(0,133,199,0.3)",renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineResponseTimeGraphs[e]=t}function updateEndPointResponseTimelineGraph(e,n){var t=endPointTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTimelineResponeTimeGraph(e,n){var t=endPointTimeLineResponseTimeGraphs[e],a={};a.value=n.value,a.area=n.area,t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=endPointResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(endPointResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(endPointResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(endPointResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcInner(n(e))}}),s.exit().remove()}function createNewEndPointGraph(e,n){document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<span style="color:#00ADEF;float:left;">'+e+'</span><span id="graph-total-'+e+'" style="color:#ffffff;float:right;">0</span>'),document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<div id="graph-'+e+'" style="margin-bottom:5px;"></div>');var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:400,height:60,min:100,interpolation:"basis",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:color4xx},{name:"5xx",color:color5xx},{name:"123",color:color123}],void 0,{timeInterval:250,maxDataPoints:150,timeBase:(new Date).getTime()/1e3})}),a=new Rickshaw.Graph.Smoother({graph:t,element:document.querySelector("#smoother")});new Rickshaw.Graph.Axis.Y({graph:t,pixelsPerTick:30,tickFormat:function(e){return e/1e3+"s"},ticksTreatment:"inverse"}).render(),"steam"==n?(t.setRenderer("stack"),t.offset="wiggle",a.setScale(40)):"line"==n?(t.setRenderer("line"),t.offset="zero",a.setScale(30)):"scatter"==n&&(t.setRenderer("scatterplot",{dotSize:1.2}),t.offset="value"),t.update(),endPointHealthGraphs.push(t);var i={};i["4xx"]=0,i["5xx"]=0,i[123]=0,endPoints[e]=i,graphTotals[e]=0}function startEndPointGraphAnimations(){setInterval(function(){for(var e in endPoints){var n=Math.random();n<.1?(endPoints[e]["4xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["4xx"]=0,n<.3&&n>.2?(endPoints[e]["5xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["5xx"]=0,n>.5?(endPoints[e][123]=Math.floor(1200*Math.random()+200),graphTotals[e]++):endPoints[e][123]=0}for(var t,a=0;a<endPointHealthGraphs.length;a++)t=(t=endPointHealthGraphs[a].element.id).substring("graph-".length,t.length),endPointHealthGraphs[a].series.addData(endPoints[t]),endPointHealthGraphs[a].update(),document.getElementById("graph-total-"+t).innerHTML=numberWithCommas(graphTotals[t])},1e3)}function translateElb(e){var n={};return n.id=e.LoadBalancerName,n.name=e.LoadBalancerName,n.status="pending",void 0!=e.Instances&&e.Instances.length>0&&(n.status="running"),n.AvailabilityZone=e.AvailabilityZones[0],void 0!=n.AvailabilityZone&&(n.Region=n.AvailabilityZone.substring(0,n.AvailabilityZone.length-1)),n.instances=e.Instances,n.tags=e.Tags,n.health=e.health,n.type="elb",n}function translateApiGateway(e){var n={};return n.id=e.id,n.name=e.name,n.Region=e.region,n.Description=e.description,n.stages=e.stages,n.type="apigateway",n.status="running",n}function createNewLineGraph(e,n,t,a,i,o,r){var s=208,l=60;"third"==a&&(s=140,l=50),document.getElementById(n).insertAdjacentHTML("beforeend",'<div id="graph-'+e+'"><span style="color:'+i+'" class="'+n+'Titles">'+e+'</span><span id="graph-total-'+e+'" class="'+n+'Totals">0</span></div>');var c=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:s,height:l,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:i,strokeWidth:r,renderer:"line"},{name:"area",color:o,renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:30,timeBase:(new Date).getTime()/1e3})});c.offset="zero",c.update(),lineGraphs.push(c)}function drawLineGraphAnimations(e,n,t,a,i){for(var o,r,s=t+a+i,l=0;l<lineGraphs.length;l++)r={},"Connections"==(o=(o=lineGraphs[l].element.id).substring("graph-".length,o.length))?(r.value=e,r.area=e):"Unique IPs"==o?(r.value=n,r.area=n):"Success"==o?(r.value=t,r.area=t):"Rejected"==o?(r.value=a,r.area=a):"Error"==o&&(r.value=i,r.area=i),lineGraphs[l].series.addData(r),lineGraphs[l].update(),document.getElementById("graph-total-"+o).innerHTML="Success"==o||"Rejected"==o||"Error"==o?0==s?"0%":Math.round(r.value/s*100)+"%":numberWithCommas(r.value)}function clearLineGraphs(){for(var e,n,t=0;t<150;t++)for(var a=0;a<lineGraphs.length;a++)n={},e=(e=lineGraphs[a].element.id).substring("graph-".length,e.length),n.value=0,lineGraphs[a].series.addData(n),lineGraphs[a].update();for(var i=0;i<lineGraphs.length;i++)e=(e=lineGraphs[i].element.id).substring("graph-".length,e.length),document.getElementById("graph-total-"+e).innerHTML=0,lineGraphs[i].update()}function resetLargeMapZoom(){mapLargeWorld.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)"),mapLargeUSA.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)")}function drawMap(e){var n={},t=e.map(function(e){return e[1]}),a=Math.min.apply(null,t),i=Math.max.apply(null,t);a==i&&(a=0);var o=d3.scale.linear().domain([a,i]).range(["#00212d","#00adef"]);e.forEach(function(e){var t=e[0],a=e[1];n[t]={numberOfThings:a,fillColor:o(a)}}),map.updateChoropleth(n,{reset:!0})}function drawMapLarge(e,n){var t;if(e.forEach(function(e){var t=e[0],a=e[1];"world"==n?(void 0==mapDataSet[t]?mapDataSet[t]={numberOfThings:a,fillColor:null}:mapDataSet[t].numberOfThings+=a,(0==mapMinValue||mapMinValue>mapDataSet[t].numberOfThings)&&(mapMinValue=mapDataSet[t].numberOfThings),mapDataSet[t].numberOfThings>mapMaxValue&&(mapMaxValue=mapDataSet[t].numberOfThings)):(void 0==mapDataSetUSA[t]?mapDataSetUSA[t]={numberOfThings:a,fillColor:null}:mapDataSetUSA[t].numberOfThings+=a,(0==mapMinValueUSA||mapMinValueUSA>mapDataSetUSA[t].numberOfThings)&&(mapMinValueUSA=mapDataSetUSA[t].numberOfThings),mapDataSetUSA[t].numberOfThings>mapMaxValueUSA&&(mapMaxValueUSA=mapDataSetUSA[t].numberOfThings))}),"world"==n){t=d3.scale.linear().domain([mapMinValue,mapMaxValue]).range(["#00212d","#00adef"]);for(var a in mapDataSet)mapDataSet[a].fillColor=t(mapDataSet[a].numberOfThings);mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0})}else{t=d3.scale.linear().domain([mapMinValueUSA,mapMaxValueUSA]).range(["#00212d","#00adef"]);for(var a in mapDataSetUSA)mapDataSetUSA[a].fillColor=t(mapDataSetUSA[a].numberOfThings);mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}}function clearMaps(){mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0}),mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}function drawResponseCodeGraph(e,n,t,a){function i(e){return e.startAngle+(e.endAngle-e.startAngle)/2}var o=n+t+a;0==o?(document.getElementById("responseCodeValue123").innerHTML="0%",document.getElementById("responseCodeValue4xx").innerHTML="0%",document.getElementById("responseCodeValue5xx").innerHTML="0%",document.getElementById("averageResponseTimeValue").innerHTML=(0).toFixed(3)+"s"):(document.getElementById("responseCodeValue123").innerHTML=Math.round(n/o*100)+"%",document.getElementById("responseCodeValue4xx").innerHTML=Math.round(t/o*100)+"%",document.getElementById("responseCodeValue5xx").innerHTML=Math.round(a/o*100)+"%",document.getElementById("averageResponseTimeValue").innerHTML=(Math.round(e)/1e3).toFixed(3)+"s");var r=responseCodeGraphColor.domain().map(function(e){return o>0?"Success"==e?{label:e,value:n/o}:"Rejected"==e?{label:e,value:t/o}:"Error"==e?{label:e,value:a/o}:void 0:{label:e,value:0}}),s=responseCodeGraphSvg.select(".slices").selectAll("path.slice").data(pie(r),key);s.enter().insert("path").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("class","slice"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return responseCodeGraphArc(n(e))}}),s.exit().remove();var l=responseCodeGraphSvg.select(".labels").selectAll("text").data(pie(r),key);l.enter().append("text").attr("dy",".35em").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("id",function(e){return"responseCodeGraphText-"+e.data.label}).text(function(e){return e.data.label}),l.transition().duration(1e3).attrTween("transform",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=responseCodeGraphRadius*(i(t)<Math.PI?1:-1),"translate("+a+")"}}).styleTween("text-anchor",function(e){0==e.data.value?document.getElementById("responseCodeGraphText-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphText-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return i(n(e))<Math.PI?"start":"end"}}),l.exit().remove();var c=responseCodeGraphSvg.select(".lines").selectAll("polyline").data(pie(r),key);c.enter().append("polyline").attr("id",function(e){return"responseCodeGraphLine-"+e.data.label}),c.transition().duration(1e3).attrTween("points",function(e){0==e.data.value?document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=.95*responseCodeGraphRadius*(i(t)<Math.PI?1:-1),[responseCodeGraphArc.centroid(t),responseCodeGraphOuterArc.centroid(t),a]}}),c.exit().remove()}function startScatterGraphAnimations(){for(var e=document.getElementsByClassName("scatterCircleCenter"),n=0;n<e.length;n++)e[n].style.display="block";deviceScatterGraph.layout(scatterCircleGraphInstanceArray,{innerRadius:scatterCircleGraphWidth/2-40,outerRadius:scatterCircleGraphWidth/2-38,ticks:{display:!1},labels:{position:"center",display:!0,size:14,color:"#ffffff",radialOffset:15}}).render()}function pushScatterCircleGraphData(e,n,t,a){deviceScatterData.push({block_id:e,position:98*Math.random()+2,value:n/1e3,code:t}),deviceScatterData.length>2e3&&deviceScatterData.shift()}function drawScatterCircleGraph(){drawCircos(deviceScatterData)}function clearScatterCircleGraph(){drawCircos(deviceScatterData=[],!0)}function drawCircos(e,n){(0!=e.length||void 0!=n&&n)&&deviceScatterGraph.scatter("circleScatterGraph",e,{innerRadius:.2,outerRadius:.98,logScale:!1,fill:!0,size:.75,strokeColor:function(e,n){return 4==e.code?"#ff7b00":5==e.code?"#ff0000":"#ffffff"},axes:[{color:"#00adef",position:.1,opacity:.5,thickness:.5},{color:"#00adef",position:.15,opacity:.5,thickness:.5},{color:"#00adef",position:.2,opacity:.5,thickness:.5},{color:"#00adef",position:.25,opacity:.5,thickness:.5},{color:"#00adef",position:.3,opacity:.5,thickness:.5},{color:"#00adef",position:.35,opacity:.5,thickness:.5},{color:"#00adef",position:.4,opacity:.5,thickness:.5},{color:"#00adef",position:.45,opacity:.5,thickness:.5},{color:"#00adef",position:.5,opacity:.5,thickness:.5},{color:"#00adef",position:.55,opacity:.5,thickness:.5},{color:"#00adef",position:.6,opacity:.5,thickness:.5},{color:"#00adef",position:.65,opacity:.5,thickness:.5},{color:"#00adef",position:.7,opacity:.5,thickness:.5},{color:"#00adef",position:.75,opacity:.5,thickness:.5},{color:"#00adef",position:.8,opacity:.5,thickness:.5},{color:"#00adef",position:.85,opacity:.5,thickness:.5},{color:"#00adef",position:.9,opacity:.5,thickness:.5},{color:"#00adef",position:.95,opacity:.5,thickness:.5},{color:"#00adef",position:1,opacity:.5,thickness:1},{color:"#1F4B64",position:1.2,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.25,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.3,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.35,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.4,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.45,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.5,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.55,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.6,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.65,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.7,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.75,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.8,opacity:.7,thickness:.5},{color:"#182B38",position:2,opacity:1,thickness:.5},{color:"#182B38",position:3,opacity:1,thickness:.5},{color:"#182B38",position:4,opacity:1,thickness:.5},{color:"#182B38",position:5,opacity:1,thickness:.5},{color:"#182B38",position:6,opacity:1,thickness:.5},{color:"#182B38",position:7,opacity:1,thickness:.5},{color:"#182B38",position:8,opacity:1,thickness:.5},{color:"#182B38",position:9,opacity:1,thickness:.5},{color:"#182B38",position:10,opacity:1,thickness:.5},{color:"#182B38",position:30,opacity:1,thickness:.5},{color:"#182B38",position:60,opacity:1,thickness:.5},{color:"#182B38",position:300,opacity:1,thickness:.5}]}).render()}function drawTimeLineGraph(){if(4==timeLineCallBackCount){if(timeLineFirstRun){timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes();for(var e=0;e<287;e++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]-(timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]+timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]),(o={})["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"],o["4xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"],o["5xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o),55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5}else{var n=new Date;n.setMinutes(n.getMinutes()-5);var t=n.getDate(),a=n.getHours(),i=n.getMinutes();timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]-(timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"]+timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"]);var o={};o["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"],o["4xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"],o["5xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+t+" h:"+a+" m:"+i].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o)}timeLineGraph.update(),timeLineGraphLatency.update(),timeLineFirstRun=!1,timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0}}function getInitialTimeLineData(){getTimeLineDataForMetric("Count","Sum","123xx",timeLineBase.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",timeLineBase.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",timeLineBase.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",timeLineBase.toISOString())}function getTimeLineData(){var e=new Date;e.setMinutes(e.getMinutes()-5),e.setSeconds(0),e.setMilliseconds(0),timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]={},timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()].Latency=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["4xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["5xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["123xx"]=0,getTimeLineDataForMetric("Count","Sum","123xx",e.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",e.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",e.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",e.toISOString())}function getTimeLineDataForMetric(e,n,t,a){if(!simulatorOn)for(var i in inventory.apigateway){var o={};o.Name="ApiName",o.Value=inventory.apigateway[i].name;for(var r={MetricName:e,Namespace:"AWS/ApiGateway",Dimensions:[o],Period:300,StartTime:a,EndTime:(new Date).toISOString(),Statistics:[n]},s=0;s<cloudWatchObjects.length;s++)"123xx"==t?timeLineInitialDataCountCalls++:"4xx"==t?timeLineInitialData4xxCalls++:"5xx"==t?timeLineInitialData5xxCalls++:"Latency"==t&&timeLineInitialDataLatencyCalls++,function(e,n,t){cloudWatchObjects[s].getMetricStatistics(r,function(e,a){var i,o,r;if("123xx"==t?(i=++timeLineInitialDataCountResponses,o=timeLineInitialDataCountCalls,r=timeLineInitialDataCount):"4xx"==t?(i=++timeLineInitialData4xxResponses,o=timeLineInitialData4xxCalls,r=timeLineInitialData4xx):"5xx"==t?(i=++timeLineInitialData5xxResponses,o=timeLineInitialData5xxCalls,r=timeLineInitialData5xx):"Latency"==t&&(i=++timeLineInitialDataLatencyResponses,o=timeLineInitialDataLatencyCalls,r=timeLineInitialDataLatency),e)console.log(e,e.stack);else if(a.Datapoints.length>0&&("123xx"==t?r=timeLineInitialDataCount=timeLineInitialDataCount.concat(a.Datapoints):"4xx"==t?r=timeLineInitialData4xx=timeLineInitialData4xx.concat(a.Datapoints):"5xx"==t?r=timeLineInitialData5xx=timeLineInitialData5xx.concat(a.Datapoints):"Latency"==t&&(r=timeLineInitialDataLatency=timeLineInitialDataLatency.concat(a.Datapoints))),i==o){for(var s,l=0;l<r.length;l++)void 0!=(s=r[l].Timestamp)&&(s.setMinutes(s.getMinutes()-(s.getMinutes()-5*Math.ceil(s.getMinutes()/5))),void 0!=timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()]&&(timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()][t]+=r[l][n]));timeLineCallBackCount++,drawTimeLineGraph()}})}(0,n,t)}}function convertDateToUTC(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}function addTrafficEvent(e,n){var t=round(n.lat,.5),a=round(n.lon,.5);void 0==newConnectionQueue[t+"|"+a]&&(newConnectionQueue[t+"|"+a]={},newConnectionQueue[t+"|"+a].lat=n.lat,newConnectionQueue[t+"|"+a].lon=n.lon,newConnectionQueue[t+"|"+a]["4xx"]=0,newConnectionQueue[t+"|"+a]["5xx"]=0,newConnectionQueue[t+"|"+a][123]=0,newConnectionQueue[t+"|"+a].total=0,newConnectionQueue[t+"|"+a].devices={}),void 0==newConnectionQueue[t+"|"+a].devices[e]&&(newConnectionQueue[t+"|"+a].devices[e]={},newConnectionQueue[t+"|"+a].devices[e]["4xx"]=0,newConnectionQueue[t+"|"+a].devices[e]["5xx"]=0,newConnectionQueue[t+"|"+a].devices[e][123]=0,newConnectionQueue[t+"|"+a].devices[e].total=0);for(var i=0;i<n.details.length;i++)newConnectionQueue[t+"|"+a].total++,newConnectionQueue[t+"|"+a].devices[e].total++,"4"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["4xx"]++,newConnectionQueue[t+"|"+a].devices[e]["4xx"]++):"5"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["5xx"]++,newConnectionQueue[t+"|"+a].devices[e]["5xx"]++):(newConnectionQueue[t+"|"+a][123]++,newConnectionQueue[t+"|"+a].devices[e][123]++);newConnectionQueue[t+"|"+a].total>trafficCountHigh&&(trafficCountHigh=newConnectionQueue[t+"|"+a].total),trafficPointCount++,trafficConnectionCount+=n.details.length}function showTraffic(){var e,n,t,a,i,o,r,s,l,c,d=new THREE.Geometry,u=new THREE.Mesh,p=new THREE.Geometry,m=new THREE.Geometry,h=new THREE.Geometry,g=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.9}),y=new THREE.MeshLambertMaterial({color:"rgb(255, 20, 0)",transparent:!0,opacity:.9}),f=new THREE.MeshLambertMaterial({color:"rgb(255, 60, 0)",transparent:!0,opacity:.9}),v=new THREE.LineDashedMaterial({color:16777215,scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),M=new THREE.LineDashedMaterial({color:"rgb(255, 100, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),T=new THREE.LineDashedMaterial({color:"rgb(255, 30, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7});void 0!=globe.scene.getObjectByName("trafficPointsMesh")&&globe.scene.remove(globe.scene.getObjectByName("trafficPointsMesh")),void 0!=globe.scene.getObjectByName("trafficLineSegments123")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments123")),void 0!=globe.scene.getObjectByName("trafficLineSegments4xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments4xx")),void 0!=globe.scene.getObjectByName("trafficLineSegments5xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments5xx"));var C=!1;for(var R in newConnectionQueue){r=(90-newConnectionQueue[R].lat)*Math.PI/180,s=(180-newConnectionQueue[R].lon)*Math.PI/180,e=globe.globeRadius*Math.sin(r)*Math.cos(s),n=globe.globeRadius*Math.cos(r),t=globe.globeRadius*Math.sin(r)*Math.sin(s),i=new THREE.Vector3(e,n,t),c=(c=newConnectionQueue[R].total-trafficConnectionCount/trafficPointCount)<=1?1:Math.floor(scaleBetween(c,1,10,1,trafficCountHigh)),u.geometry=new THREE.SphereGeometry(c,10,10),u.position.x=e,u.position.y=n,u.position.z=t,u.lookAt(globe.globeMesh.position),u.updateMatrix(),l=0,newConnectionQueue[R]["4xx"]/newConnectionQueue[R].total>=.25&&(l=2),newConnectionQueue[R]["5xx"]/newConnectionQueue[R].total>=.25&&newConnectionQueue[R]["5xx"]>newConnectionQueue[R]["4xx"]&&(l=1);for(var S=0;S<u.geometry.faces.length;S++)u.geometry.faces[S].materialIndex=l;d.merge(u.geometry,u.matrix),i.x<0?i.x-=globe.regionOffset/1.5:i.x+=globe.regionOffset/1.5,i.y<0?i.y-=globe.regionOffset/1.5:i.y+=globe.regionOffset/1.5,i.z<0?i.z-=globe.regionOffset/1.5:i.z+=globe.regionOffset/1.5;for(var G in newConnectionQueue[R].devices){C=!1,(a=globe.scene.getObjectByName(G)).geometry.computeBoundingBox();var b=a.geometry.boundingBox;(o=new THREE.Vector3).subVectors(b.max,b.min),o.multiplyScalar(.5),o.add(b.min),o.applyMatrix4(a.matrixWorld),o=new THREE.Vector3(o.x,o.y,o.z),newConnectionQueue[R].devices[G]["4xx"]/newConnectionQueue[R].devices[G].total>=.25&&(m=getArc(i,o,50,m),C=!0),newConnectionQueue[R].devices[G]["5xx"]/newConnectionQueue[R].devices[G].total>=.25&&newConnectionQueue[R].devices[G]["5xx"]>newConnectionQueue[R].devices[G]["4xx"]&&(h=getArc(i,o,50,h),C=!0),C||(p=getArc(i,o,50,p))}}var L=new THREE.Mesh(d,new THREE.MultiMaterial([g,y,f]));L.name="trafficPointsMesh",globe.scene.add(L);var A=new THREE.LineSegments(p,v);A.updateMatrix(),A.name="trafficLineSegments123",globe.scene.add(A);var E=new THREE.LineSegments(m,M);E.updateMatrix(),E.name="trafficLineSegments4xx",globe.scene.add(E);var I=new THREE.LineSegments(h,T);I.updateMatrix(),I.name="trafficLineSegments5xx",globe.scene.add(I),trafficPointCount=0,trafficConnectionCount=0,trafficCountHigh=0,newConnectionQueue={}}function getArc(e,n,t,a){var i=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3;i.subVectors(new THREE.Vector3,n),o.subVectors(e,n),i.cross(o),r.copy(i).normalize();var s=e.angleTo(n)/(t-1),l=e.clone();l.x>0?l.x-=globe.regionOffset/2:l.x+=globe.regionOffset/2,l.y>0?l.y-=globe.regionOffset/2:l.y+=globe.regionOffset/2,l.z>0?l.z-=globe.regionOffset/2:l.z+=globe.regionOffset/2,a.vertices.push(l);for(var c=1;c<t;c++)a.vertices.push(e.clone().applyAxisAngle(r,s*c));return a}function scaleBetween(e,n,t,a,i){return(t-n)*(e-a)/(i-a)+n}function showTrafficDetails(e){globe.scene.getObjectByName(e);var n=(90-parseInt(traffic[e].lat))*Math.PI/180,t=(180-parseInt(traffic[e].lon))*Math.PI/180,a=700/1.55*Math.sin(n)*Math.cos(t),i=700/1.55*Math.cos(n),o=700/1.55*Math.sin(n)*Math.sin(t);globe.setCameraPosition(a,i,o);var r="successText",s="";document.getElementById("trafficBlockedCount").innerHTML="",document.getElementById("trafficPorts").innerHTML="",document.getElementById("trafficMap").src=googleMapsBaseUrl+"&q="+traffic[e].lat+","+traffic[e].lon+"&zoom=6&maptype=satellite",void 0!=traffic[e].blockedCount&&traffic[e].blockedCount>0&&(r="alertText",s="(This IP has been blocked by other users!)",document.getElementById("trafficBlockedCount").innerHTML='<span class="'+r+'">Total Times Blocked: '+traffic[e].blockedCount+"</span>");for(var l in traffic[e])isNaN(l)||("22"==l?(r="severeWarnText",s="(Privledged Access Port 22 In Use)",document.getElementById("trafficPorts").innerHTML+="<div class='"+r+"'>Port "+l+" Count: "+traffic[e][l]+"</div>"):document.getElementById("trafficPorts").innerHTML+="<div>Port "+l+" Count: "+traffic[e][l]+"</div>");document.getElementById("trafficIp").innerHTML='<span class="'+r+'">'+e+" "+s+"</span>",document.getElementById("trafficCountry").innerHTML="Country: "+traffic[e].country,document.getElementById("trafficStateProv").innerHTML="State/Province: "+traffic[e].state,document.getElementById("trafficCity").innerHTML="City: "+traffic[e].city,document.getElementById("trafficCoordinates").innerHTML="Coordinates: "+traffic[e].lat+","+traffic[e].lon,document.getElementById("trafficLocalTime").innerHTML="Local Time: "+new Date,document.getElementById("detailsBodyMetrics").style.display="none",document.getElementById("detailsBodyTraffic").style.display="block",document.getElementById("paneMiddle").className+=" openPane"}function getApiGatewayLogs(e){function n(e,n,a){if(void 0==a)for(var i=0;i<e.items.length;i++)!function(e,n){var a={};a.id=e.id,a.name=e.name,a.description=e.description,a.region=n.config.region,a.type="apigateway",a.cloud="aws",a.stages=[],apiGatewayInventoryQueue[e.id]=a,apiGatewayStagesTarget++;var i={restApiId:e.id};n.getStages(i,function(n,a){n?t(null,null,n):t(a,e.id)})}(e.items[i],n);else console.log(a,a.stack);apiGatewayObjectActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function t(e,n,t){if(void 0==t)for(var i=0;i<e.item.length;i++)apiGatewayInventoryQueue[n].stages.push(e.item[i].stageName),isDeviceFilteredOut(n+"/"+e.item[i].stageName)||a(n,e.item[i].stageName);else console.log(t,t.stack);apiGatewayStagesActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function a(e,n,t){var a=apiGatewayCloudWatchLogsPrefix+e+"/"+n;apiGatewayConnectionTarget++;var r={logGroupName:a,endTime:o.getTime(),filterPattern:"Method - Starting - HTTP - path - query - body - Endpoint - Execution - response",interleaved:!0,limit:1e4,startTime:i.getTime()};cloudWatchLogs.filterLogEvents(r,function(e,n){e?console.log(e,e.stack):getConnections(a,n)})}if(!simulatorOn){ipGatewayLogRetrivalInProgress=!0,apiGatewayObjectTarget=APIGatewayObjects.length,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0;var i=new Date(e.getTime());i.setSeconds(i.getSeconds()-trafficWindowSeconds);for(var o=e,r={},s=0;s<APIGatewayObjects.length;s++)!function(e){e.getRestApis(r,function(t,a){t?n(null,null,t):n(a,e)})}(APIGatewayObjects[s])}}function getConnections(e,n){console.log("getting connections"),console.log(n);var t={};t.type="apiGateway",t.id=e.substring(apiGatewayCloudWatchLogsPrefix.length,e.length);for(var a=0;a<trafficQueue.length;a++)if(trafficQueue[a].id==t.id){t=trafficQueue[a];break}void 0==t.connections&&(t.connections=[],t.responses=[],trafficQueue.push(t));for(var i,o,r,s,l,c="",d="",u={},p=0;p<n.events.length;p++)if(c=n.events[p].message,d=c.substring(1,c.indexOf(")")),-1!=c.indexOf("Method request headers:")){u[d]={},u[d].id=d,u[d].start=n.events[p].timestamp;var m=testOnly[Math.round(23*Math.random())];console.log(m),u[d].ip=m,i=(i=c.substring(c.indexOf("X-Forwarded-Port=")+"X-Forwarded-Port=".length,c.length)).substring(0,i.indexOf(",")),u[d].port=i,o=(o=c.substring(c.indexOf("CloudFront-Is-Tablet-Viewer=")+"CloudFront-Is-Tablet-Viewer=".length,c.length)).substring(0,o.indexOf(",")),u[d].tablet=o,r=(r=c.substring(c.indexOf("CloudFront-Is-Mobile-Viewer=")+"CloudFront-Is-Mobile-Viewer=".length,c.length)).substring(0,r.indexOf(",")),u[d].mobile=r,s=(s=c.substring(c.indexOf("CloudFront-Is-SmartTV-Viewer=")+"CloudFront-Is-SmartTV-Viewer=".length,c.length)).substring(0,s.indexOf(",")),u[d].smartTV=s,l=(l=c.substring(c.indexOf("Accept-Language=")+"Accept-Language=".length,c.length)).substring(0,l.indexOf(",")),u[d].language=l,u[d].desktop=c.substring(c.indexOf("CloudFront-Is-Desktop-Viewer=")+"CloudFront-Is-Desktop-Viewer=".length,c.length-1),u[d].userAgent=c.substring(c.indexOf("User-Agent=")+"User-Agent=".length,c.indexOf(", X-Forwarded-Proto"))}else-1!=c.indexOf("Method completed with status:")&&(void 0==u[d]&&(u[d]={},u[d].id=d),u[d].responseCode=c.substring(c.indexOf("Method completed with status:")+"Method completed with status:".length+1,c.length),u[d].end=n.events[p].timestamp);var h=null;for(var g in u)if(void 0!=u[g].ip&&void 0!=u[g].responseCode&&void 0!=u[g].start&&void 0!=u[g].end){for(var y=0;y<t.connections.length;y++)if(t.connections[y].ip==u[g].ip){h=t.connections[y];break}if(null==h){(h={}).ip=m,h.details=[];var f=getDataFromIpMappingByIp(m);void 0==f?ipLookUpQueue.push(m):(h.lat=f.lat,h.lon=f.lon,h.country=f.country,h.stateRegion=f.stateRegion,h.city=f.city),t.connections.push(h)}void 0!=connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]&&(u[g].processed=!0),h.details.push(u[g]),connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]={}}apiGatewayConnectionActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function areApiGatewayLogsRetrieved(){return apiGatewayObjectTarget==apiGatewayObjectActual&&apiGatewayStagesTarget==apiGatewayStagesActual&&apiGatewayConnectionTarget==apiGatewayConnectionActual}function loadApiGatewayInventory(){var e=[];for(var n in apiGatewayInventoryQueue)for(var t=0;t<apiGatewayInventoryQueue[n].stages.length;t++)if(void 0==inventory.apigateway||void 0==inventory.apigateway[n+"/"+apiGatewayInventoryQueue[n].stages[t]]){var a=JSON.parse(JSON.stringify(apiGatewayInventoryQueue[n]));a.id=n+"/"+apiGatewayInventoryQueue[n].stages[t],e.push(a);var i={};i.len=100,i.color="#00adef",i.id=a.id,i.label=a.name+" ("+apiGatewayInventoryQueue[n].stages[t]+")",scatterCircleGraphInstanceArray.push(i)}apiGatewayInventoryQueue=[],e.length>0&&(globe.load("inventory",e),startScatterGraphAnimations())}function authenticate(e,n){$.ajax({url:baseUrl,type:"POST",contentType:"application/json",data:JSON.stringify({u:e,p:n}),dataType:"json",success:function(e){var n=JSON.parse(e);AWS.config.update({accessKeyId:n.userAccount.AccessKeyId,secretAccessKey:n.userAccount.SecretAccessKey,sessionToken:n.userAccount.SessionToken,region:loginRegion}),s3=new AWS.S3({apiVersion:"2006-03-01"}),cloudWatchLogs=new AWS.CloudWatchLogs({apiVersion:"2014-03-28"}),APIGatewayObjects=[new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ca-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-south-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"sa-east-1"})],cloudWatchObjects=[new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ca-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-south-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"sa-east-1"})],appAccountConf=n.appAccount,appAccountS3=new AWS.S3({apiVersion:"2006-03-01",credentials:new AWS.Credentials(appAccountConf.AccessKeyId,appAccountConf.SecretAccessKey,appAccountConf.SessionToken)});var t=new Date;if(t.setHours(t.getHours()-24),null==localStorage.getItem("dataRefreshDate")||forceIpKeyRefresh||new Date(localStorage.getItem("dataRefreshDate"))>t){var a={Bucket:"central-sky-ips",Key:"list.json"};appAccountS3.getObject(a,function(e,n){e?console.log(e,e.stack):cacheIpFileKeys(JSON.parse(n.Body))})}null==localStorage.getItem("blocksCached")&&localStorage.setItem("blocksCached","{}"),loginAndLoadInventory()},error:function(e){alert("error="+e)}})}function cacheIpFileKeys(e){console.log("loading keys");for(var n=0;n<e.length;n++)localStorage.setItem(e[n],e[n]);localStorage.setItem("dataRefreshDate",(new Date).getTime())}function lookUpIpsInQueue(){for(var e,n=0;n<ipLookUpQueue.length;n++)e=localStorage.getItem(ipLookUpQueue[n].substring(0,ipLookUpQueue[n].indexOf("."))),console.log("key="+e),void 0!=e&&void 0==ipKeysCached[e]&&void 0==ipKeyCallsQueued[e]&&(ipKeyCallsQueued[e]={},getIpFiles(e));drawUpdates(),lastTrafficRefreshTime=new Date((new Date).getTime()-timeOffset),ipGatewayLogRetrivalInProgress=!1}function addIpsFromDBtoMap(e,n,t){var a;if(null!=e){for(var i=e.split("\r\n"),o=[],r=0;r<i.length;r++)if((o=i[r].split(",")).length>2){a=o[0].replace(/"/gi,"")+"-"+o[1].replace(/"/gi,""),ipMappings[a]={},ipMappings[a].country=o[2].replace(/"/gi,""),ipMappings[a].stateRegion=o[3].replace(/"/gi,""),ipMappings[a].city=o[4].replace(/"/gi,""),ipMappings[a].lat=o[5].replace(/"/gi,""),ipMappings[a].lon=o[6].replace(/"/gi,"");var s=JSON.parse(localStorage.getItem("blocksCached"));null==s&&(s={}),s[a]={},localStorage.setItem(a,JSON.stringify(ipMappings[a])),localStorage.setItem("blocksCached",JSON.stringify(s))}ipKeysCached[n]={},ipKeyCallsQueued[n]=void 0}else console.log(t,t.stack);ipKeysReturned++;var l;if(ipKeysCalled==ipKeysReturned){for(var c=0;c<trafficQueue.length;c++){console.log(trafficQueue[c]);for(var d=0;d<trafficQueue[c].connections.length;d++)console.log(trafficQueue[c].connections),void 0==trafficQueue[c].connections[d].lat&&(l=getDataFromIpMappingByIp(trafficQueue[c].connections[d].ip),trafficQueue[c].connections[d].lat=l.lat,trafficQueue[c].connections[d].lon=l.lon,trafficQueue[c].connections[d].country=l.country,trafficQueue[c].connections[d].stateRegion=l.stateRegion,trafficQueue[c].connections[d].city=l.city)}console.log("Ip lookup queue emptied"),ipLookUpQueue=[]}}function getIpFiles(e){ipKeysCalled++;var n={Bucket:"central-sky-ips",Key:e+".txt"};appAccountS3.getObject(n,function(n,t){n?addIpsFromDBtoMap(null,null,n):addIpsFromDBtoMap(new TextDecoder("utf-8").decode(t.Body),e)})}function loginAndLoadInventory(){document.getElementById("mainOverlays").style.visibility="visible",document.getElementById("loginOverlay").style.display="none",globe.runLoginAnimation(),slidePanes("in"),setTimeout(function(){setTimeout(function(){setTimeout(function(){startClock(),getLogs(),drawUpdates()},500)},500)},1e3),getBilling()}function getAWSInvetory(){var e={FunctionName:"CentralSky_GetInventory",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),initialLoad&&(getAWSMetrics(),getAWSLoggedMetrics(),getAWSEC2Traffic(),initialLoad=!1),globe.load("inventory",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSInvetory()},getAWSInventoryInterval)})}function getAWSMetrics(){var e={FunctionName:"CentralSky_GetMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSMetrics()},getAWSMetricsInterval)})}function getAWSLoggedMetrics(){var e={FunctionName:"CentralSky_GetLoggedMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSLoggedMetrics()},getAWSLoggedMetricsInterval)})}function getAWSBilling(){var e={FunctionName:"CentralSky_GetBilling",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){globe.load("billing",[JSON.parse(n.Payload)]),setTimeout(function(){1==lambdaEnable&&getAWSBilling()},getAWSBillingInterval)})}function getAWSEC2Traffic(){var e={FunctionName:"CentralSky_GetConnections",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){for(console.log(JSON.parse(n.Payload)),t=0;t<trafficObjectIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficObjectIds[t]));trafficObjectIds=[];for(var t=0;t<trafficPointIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficPointIds[t]));trafficPointIds=[],globe.load("traffic",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSEC2Traffic()},getAWSEC2TrafficInterval)})}function blockIp(){var e=document.getElementById("trafficIp").innerHTML;e=e.substring(e.indexOf(">")+1,e.indexOf("</")).trim();var n={FunctionName:"CentralSky_BlockConnection",InvocationType:"RequestResponse",Payload:JSON.stringify({ip:e,token:AWS.config.credentials.sessionToken})};lambda.invoke(n,function(n,t){console.log(JSON.parse(t.Payload)),null==JSON.parse(t.Payload)&&console.log(e+" blocked!")})}function getBilling(){if(simulatorOn)globe.load("billing",["2.50"]);else{var e=new Date;e.setTime(e.getTime()-288e5);var n={MetricName:"EstimatedCharges",Namespace:"AWS/Billing",Dimensions:[{Name:"Currency",Value:"USD"}],Period:60,StartTime:e.toISOString(),EndTime:(new Date).toISOString(),Statistics:["Average"]};cloudWatchObjects[0].getMetricStatistics(n,function(e,n){e?console.log(e,e.stack):globe.load("billing",[n.Datapoints[0].Average])})}}function startClock(){var e=new Date;currentTime=new Date(e.getTime()-timeOffset),document.getElementById("clock").innerHTML=currentTime.toUTCString()+" <span style='font-size:14px;'>("+formatAMPM(currentTime)+")</span>",(currentTime.getTime()-lastTrafficQueueClearTime)/1e3>=trafficWindowSeconds&&(lastTrafficQueueClearTime=currentTime.getTime()),!ipGatewayLogRetrivalInProgress&&(currentTime.getTime()-lastTrafficRefreshTime)/1e3>=trafficVisibilitySeconds&&(simulatorOn?lookUpIpsInQueue():getLogs()),timeLineFirstRun||e.getMinutes()%5!=0?timeLineGraphUpdated&&(timeLineGraphUpdated=!1):timeLineGraphUpdated||(getTimeLineData(),timeLineGraphUpdated=!0),setTimeout(startClock,1e3)}function padTimeWithZeros(e){return e<10&&(e="0"+e),e}function drawEndPointResponseGraphAnimations(){var e;for(var n in endPointResponseUpdatedObjects){for(e=!1,a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.seriesResponse=[],t.data={},t.region=endPointResponseUpdatedObjects[n].region,t.response={},t.windowTotal=0,t.visible=!1,endPointResponseObjects.push(t)}}for(var a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].data={},n=endPointResponseObjects[a].name,void 0==endPointResponseUpdatedObjects[n]?(endPointResponseObjects[a].data[123]=0,endPointResponseObjects[a].data["4xx"]=0,endPointResponseObjects[a].data["5xx"]=0,endPointResponseObjects[a].response.value=0,endPointResponseObjects[a].response.area=0,endPointResponseObjects[a].uniqueIps=0):(endPointResponseObjects[a].data[123]=endPointResponseUpdatedObjects[n][123],endPointResponseObjects[a].data["4xx"]=endPointResponseUpdatedObjects[n]["4xx"],endPointResponseObjects[a].data["5xx"]=endPointResponseUpdatedObjects[n]["5xx"],endPointResponseObjects[a].response.value=endPointResponseUpdatedObjects[n].response/endPointResponseUpdatedObjects[n].responseCount,endPointResponseObjects[a].response.area=endPointResponseObjects[a].response.value,endPointResponseObjects[a].uniqueIps=Object.keys(endPointResponseUpdatedObjects[n].ipList).length),endPointResponseObjects[a].series.push(endPointResponseObjects[a].data),endPointResponseObjects[a].seriesResponse.push(endPointResponseObjects[a].response),endPointResponseObjects[a].total=endPointResponseObjects[a].data[123]+endPointResponseObjects[a].data["4xx"]+endPointResponseObjects[a].data["5xx"],endPointResponseObjects[a].windowTotal+=endPointResponseObjects[a].total,endPointResponseObjects[a].series.length>endPointDataFrames){var i=endPointResponseObjects[a].series.shift();endPointResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}endPointResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<endPointResponseObjects.length;r++)n=endPointResponseObjects[r].name,o<endPointGraphsMax?(endPointResponseObjects[r].visible?(updateEndPointResponseTimelineGraph(n,endPointResponseObjects[r].data),updateEndPointResponseTimelineResponeTimeGraph(n,endPointResponseObjects[r].response)):(setupEndPointGraph(n,endPointResponseObjects[r].region,endPointResponseObjects[r].series,endPointResponseObjects[r].seriesResponse),endPointResponseObjects[r].visible=!0),document.getElementById("endPoint"+n+"Connections").innerHTML=numberWithCommas(endPointResponseObjects[r].total),document.getElementById("endPoint"+n+"IPs").innerHTML=numberWithCommas(endPointResponseObjects[r].uniqueIps),document.getElementById("endPoint"+n+"ResonseTimes").innerHTML=(Math.round(endPointResponseObjects[r].response.value)/1e3).toFixed(3)+"s",updateEndPointResponseTypeGraph("endPointResponseTypeGraph"+n,endPointResponseObjects[r].data),document.getElementById("endPoint"+n+"ParentContainer").style.top=70*r+"px",o++):(null!=document.getElementById("endPoint"+n+"ParentContainer")&&(document.getElementById("endPoint"+n+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[n],delete endPointTimeLineResponseTimeGraphs[n],endPointResponseObjects[r].visible=!1)}function clearEndPointResponseGraphs(){for(var e,n=0;n<endPointResponseObjects.length;n++)e=endPointResponseObjects[n].name,null!=document.getElementById("endPoint"+e+"ParentContainer")&&(document.getElementById("endPoint"+e+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[e],delete endPointTimeLineResponseTimeGraphs[e],endPointResponseObjects[n].visible=!1,endPointResponseObjects[n].series=[],endPointResponseObjects[n].seriesResponse=[]}function setupEndPointGraph(e,n,t,a){document.getElementById("endPointGraphs").insertAdjacentHTML("beforeend",'<div id="endPoint'+e+'ParentContainer" class="endPointGraphContainersParents" onmousedown="zoomToRegion(\''+n+'\')"><div class="endPointGraphContainers"><span id="endPoint'+e+'Name" class="endPointName" >'+decodeEndPointName(e)+'</span><span id="endPoint'+e+'Connections" class="endPointConnections" ></span><span id="endPoint'+e+'IPs" class="endPointIPs" ></span><div id="graph-'+e+'"></div><div id="endPointResponseTypeGraph'+e+'" class="endPointResponseTypeGraphs"></div><div id="graph-responseTime-'+e+'" class="endPointResponseTimeGraphs"></div><span id="endPoint'+e+'ResonseTimes" class="endPointResponseTimes" ></span></div></div>'),setupEndPointCircleGraph("endPointResponseTypeGraph"+e),setupEndPointTimeLineGraph(e,t),setupEndPointTimeLineResponseTimeGraph(e,a)}function setupEndPointCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+endPointResponseGraphWidth/2+","+endPointResponseGraphHeight/2+")")}function setupEndPointTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineGraphs[e]=t}function setupEndPointTimeLineResponseTimeGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-responseTime-"+e),width:345,height:15,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:"#00adef",renderer:"line",strokeWidth:.75},{name:"area",color:"rgba(0,133,199,0.3)",renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineResponseTimeGraphs[e]=t}function updateEndPointResponseTimelineGraph(e,n){var t=endPointTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTimelineResponeTimeGraph(e,n){var t=endPointTimeLineResponseTimeGraphs[e],a={};a.value=n.value,a.area=n.area,t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=endPointResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(endPointResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(endPointResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(endPointResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcInner(n(e))}}),s.exit().remove()}function createNewEndPointGraph(e,n){document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<span style="color:#00ADEF;float:left;">'+e+'</span><span id="graph-total-'+e+'" style="color:#ffffff;float:right;">0</span>'),document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<div id="graph-'+e+'" style="margin-bottom:5px;"></div>');var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:400,height:60,min:100,interpolation:"basis",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:color4xx},{name:"5xx",color:color5xx},{name:"123",color:color123}],void 0,{timeInterval:250,maxDataPoints:150,timeBase:(new Date).getTime()/1e3})}),a=new Rickshaw.Graph.Smoother({graph:t,element:document.querySelector("#smoother")});new Rickshaw.Graph.Axis.Y({graph:t,pixelsPerTick:30,tickFormat:function(e){return e/1e3+"s"},ticksTreatment:"inverse"}).render(),"steam"==n?(t.setRenderer("stack"),t.offset="wiggle",a.setScale(40)):"line"==n?(t.setRenderer("line"),t.offset="zero",a.setScale(30)):"scatter"==n&&(t.setRenderer("scatterplot",{dotSize:1.2}),t.offset="value"),t.update(),endPointHealthGraphs.push(t);var i={};i["4xx"]=0,i["5xx"]=0,i[123]=0,endPoints[e]=i,graphTotals[e]=0}function startEndPointGraphAnimations(){setInterval(function(){for(var e in endPoints){var n=Math.random();n<.1?(endPoints[e]["4xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["4xx"]=0,n<.3&&n>.2?(endPoints[e]["5xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["5xx"]=0,n>.5?(endPoints[e][123]=Math.floor(1200*Math.random()+200),graphTotals[e]++):endPoints[e][123]=0}for(var t,a=0;a<endPointHealthGraphs.length;a++)t=(t=endPointHealthGraphs[a].element.id).substring("graph-".length,t.length),endPointHealthGraphs[a].series.addData(endPoints[t]),endPointHealthGraphs[a].update(),document.getElementById("graph-total-"+t).innerHTML=numberWithCommas(graphTotals[t])},1e3)}function translateElb(e){var n={};return n.id=e.LoadBalancerName,n.name=e.LoadBalancerName,n.status="pending",void 0!=e.Instances&&e.Instances.length>0&&(n.status="running"),n.AvailabilityZone=e.AvailabilityZones[0],void 0!=n.AvailabilityZone&&(n.Region=n.AvailabilityZone.substring(0,n.AvailabilityZone.length-1)),n.instances=e.Instances,n.tags=e.Tags,n.health=e.health,n.type="elb",n}function translateApiGateway(e){var n={};return n.id=e.id,n.name=e.name,n.Region=e.region,n.Description=e.description,n.stages=e.stages,n.type="apigateway",n.status="running",n}function createNewLineGraph(e,n,t,a,i,o,r){var s=208,l=60;"third"==a&&(s=140,l=50),document.getElementById(n).insertAdjacentHTML("beforeend",'<div id="graph-'+e+'"><span style="color:'+i+'" class="'+n+'Titles">'+e+'</span><span id="graph-total-'+e+'" class="'+n+'Totals">0</span></div>');var c=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:s,height:l,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:i,strokeWidth:r,renderer:"line"},{name:"area",color:o,renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:30,timeBase:(new Date).getTime()/1e3})});c.offset="zero",c.update(),lineGraphs.push(c)}function drawLineGraphAnimations(e,n,t,a,i){for(var o,r,s=t+a+i,l=0;l<lineGraphs.length;l++)r={},"Connections"==(o=(o=lineGraphs[l].element.id).substring("graph-".length,o.length))?(r.value=e,r.area=e):"Unique IPs"==o?(r.value=n,r.area=n):"Success"==o?(r.value=t,r.area=t):"Rejected"==o?(r.value=a,r.area=a):"Error"==o&&(r.value=i,r.area=i),lineGraphs[l].series.addData(r),lineGraphs[l].update(),document.getElementById("graph-total-"+o).innerHTML="Success"==o||"Rejected"==o||"Error"==o?0==s?"0%":Math.round(r.value/s*100)+"%":numberWithCommas(r.value)}function clearLineGraphs(){for(var e,n,t=0;t<150;t++)for(var a=0;a<lineGraphs.length;a++)n={},e=(e=lineGraphs[a].element.id).substring("graph-".length,e.length),n.value=0,lineGraphs[a].series.addData(n),lineGraphs[a].update();for(var i=0;i<lineGraphs.length;i++)e=(e=lineGraphs[i].element.id).substring("graph-".length,e.length),document.getElementById("graph-total-"+e).innerHTML=0,lineGraphs[i].update()}function resetLargeMapZoom(){mapLargeWorld.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)"),mapLargeUSA.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)")}function drawMap(e){var n={},t=e.map(function(e){return e[1]}),a=Math.min.apply(null,t),i=Math.max.apply(null,t);a==i&&(a=0);var o=d3.scale.linear().domain([a,i]).range(["#00212d","#00adef"]);e.forEach(function(e){var t=e[0],a=e[1];n[t]={numberOfThings:a,fillColor:o(a)}}),map.updateChoropleth(n,{reset:!0})}function drawMapLarge(e,n){var t;if(e.forEach(function(e){var t=e[0],a=e[1];"world"==n?(void 0==mapDataSet[t]?mapDataSet[t]={numberOfThings:a,fillColor:null}:mapDataSet[t].numberOfThings+=a,(0==mapMinValue||mapMinValue>mapDataSet[t].numberOfThings)&&(mapMinValue=mapDataSet[t].numberOfThings),mapDataSet[t].numberOfThings>mapMaxValue&&(mapMaxValue=mapDataSet[t].numberOfThings)):(void 0==mapDataSetUSA[t]?mapDataSetUSA[t]={numberOfThings:a,fillColor:null}:mapDataSetUSA[t].numberOfThings+=a,(0==mapMinValueUSA||mapMinValueUSA>mapDataSetUSA[t].numberOfThings)&&(mapMinValueUSA=mapDataSetUSA[t].numberOfThings),mapDataSetUSA[t].numberOfThings>mapMaxValueUSA&&(mapMaxValueUSA=mapDataSetUSA[t].numberOfThings))}),"world"==n){t=d3.scale.linear().domain([mapMinValue,mapMaxValue]).range(["#00212d","#00adef"]);for(var a in mapDataSet)mapDataSet[a].fillColor=t(mapDataSet[a].numberOfThings);mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0})}else{t=d3.scale.linear().domain([mapMinValueUSA,mapMaxValueUSA]).range(["#00212d","#00adef"]);for(var a in mapDataSetUSA)mapDataSetUSA[a].fillColor=t(mapDataSetUSA[a].numberOfThings);mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}}function clearMaps(){mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0}),mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}function drawResponseCodeGraph(e,n,t,a){function i(e){return e.startAngle+(e.endAngle-e.startAngle)/2}var o=n+t+a;0==o?(document.getElementById("responseCodeValue123").innerHTML="0%",document.getElementById("responseCodeValue4xx").innerHTML="0%",document.getElementById("responseCodeValue5xx").innerHTML="0%",document.getElementById("averageResponseTimeValue").innerHTML=(0).toFixed(3)+"s"):(document.getElementById("responseCodeValue123").innerHTML=Math.round(n/o*100)+"%",document.getElementById("responseCodeValue4xx").innerHTML=Math.round(t/o*100)+"%",document.getElementById("responseCodeValue5xx").innerHTML=Math.round(a/o*100)+"%",document.getElementById("averageResponseTimeValue").innerHTML=(Math.round(e)/1e3).toFixed(3)+"s");var r=responseCodeGraphColor.domain().map(function(e){return o>0?"Success"==e?{label:e,value:n/o}:"Rejected"==e?{label:e,value:t/o}:"Error"==e?{label:e,value:a/o}:void 0:{label:e,value:0}}),s=responseCodeGraphSvg.select(".slices").selectAll("path.slice").data(pie(r),key);s.enter().insert("path").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("class","slice"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return responseCodeGraphArc(n(e))}}),s.exit().remove();var l=responseCodeGraphSvg.select(".labels").selectAll("text").data(pie(r),key);l.enter().append("text").attr("dy",".35em").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("id",function(e){return"responseCodeGraphText-"+e.data.label}).text(function(e){return e.data.label}),l.transition().duration(1e3).attrTween("transform",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=responseCodeGraphRadius*(i(t)<Math.PI?1:-1),"translate("+a+")"}}).styleTween("text-anchor",function(e){0==e.data.value?document.getElementById("responseCodeGraphText-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphText-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return i(n(e))<Math.PI?"start":"end"}}),l.exit().remove();var c=responseCodeGraphSvg.select(".lines").selectAll("polyline").data(pie(r),key);c.enter().append("polyline").attr("id",function(e){return"responseCodeGraphLine-"+e.data.label}),c.transition().duration(1e3).attrTween("points",function(e){0==e.data.value?document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=.95*responseCodeGraphRadius*(i(t)<Math.PI?1:-1),[responseCodeGraphArc.centroid(t),responseCodeGraphOuterArc.centroid(t),a]}}),c.exit().remove()}function startScatterGraphAnimations(){for(var e=document.getElementsByClassName("scatterCircleCenter"),n=0;n<e.length;n++)e[n].style.display="block";deviceScatterGraph.layout(scatterCircleGraphInstanceArray,{innerRadius:scatterCircleGraphWidth/2-40,outerRadius:scatterCircleGraphWidth/2-38,ticks:{display:!1},labels:{position:"center",display:!0,size:14,color:"#ffffff",radialOffset:15}}).render()}function pushScatterCircleGraphData(e,n,t,a){deviceScatterData.push({block_id:e,position:98*Math.random()+2,value:n/1e3,code:t}),deviceScatterData.length>2e3&&deviceScatterData.shift()}function drawScatterCircleGraph(){drawCircos(deviceScatterData)}function clearScatterCircleGraph(){drawCircos(deviceScatterData=[],!0)}function drawCircos(e,n){(0!=e.length||void 0!=n&&n)&&deviceScatterGraph.scatter("circleScatterGraph",e,{innerRadius:.2,outerRadius:.98,logScale:!1,fill:!0,size:.75,strokeColor:function(e,n){return 4==e.code?"#ff7b00":5==e.code?"#ff0000":"#ffffff"},axes:[{color:"#00adef",position:.1,opacity:.5,thickness:.5},{color:"#00adef",position:.15,opacity:.5,thickness:.5},{color:"#00adef",position:.2,opacity:.5,thickness:.5},{color:"#00adef",position:.25,opacity:.5,thickness:.5},{color:"#00adef",position:.3,opacity:.5,thickness:.5},{color:"#00adef",position:.35,opacity:.5,thickness:.5},{color:"#00adef",position:.4,opacity:.5,thickness:.5},{color:"#00adef",position:.45,opacity:.5,thickness:.5},{color:"#00adef",position:.5,opacity:.5,thickness:.5},{color:"#00adef",position:.55,opacity:.5,thickness:.5},{color:"#00adef",position:.6,opacity:.5,thickness:.5},{color:"#00adef",position:.65,opacity:.5,thickness:.5},{color:"#00adef",position:.7,opacity:.5,thickness:.5},{color:"#00adef",position:.75,opacity:.5,thickness:.5},{color:"#00adef",position:.8,opacity:.5,thickness:.5},{color:"#00adef",position:.85,opacity:.5,thickness:.5},{color:"#00adef",position:.9,opacity:.5,thickness:.5},{color:"#00adef",position:.95,opacity:.5,thickness:.5},{color:"#00adef",position:1,opacity:.5,thickness:1},{color:"#1F4B64",position:1.2,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.25,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.3,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.35,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.4,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.45,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.5,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.55,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.6,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.65,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.7,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.75,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.8,opacity:.7,thickness:.5},{color:"#182B38",position:2,opacity:1,thickness:.5},{color:"#182B38",position:3,opacity:1,thickness:.5},{color:"#182B38",position:4,opacity:1,thickness:.5},{color:"#182B38",position:5,opacity:1,thickness:.5},{color:"#182B38",position:6,opacity:1,thickness:.5},{color:"#182B38",position:7,opacity:1,thickness:.5},{color:"#182B38",position:8,opacity:1,thickness:.5},{color:"#182B38",position:9,opacity:1,thickness:.5},{color:"#182B38",position:10,opacity:1,thickness:.5},{color:"#182B38",position:30,opacity:1,thickness:.5},{color:"#182B38",position:60,opacity:1,thickness:.5},{color:"#182B38",position:300,opacity:1,thickness:.5}]}).render()}function drawTimeLineGraph(){if(4==timeLineCallBackCount){if(timeLineFirstRun){timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes();for(var e=0;e<287;e++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]-(timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]+timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]),(o={})["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"],o["4xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"],o["5xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o),55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5}else{var n=new Date;n.setMinutes(n.getMinutes()-5);var t=n.getDate(),a=n.getHours(),i=n.getMinutes();timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]-(timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"]+timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"]);var o={};o["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"],o["4xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"],o["5xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+t+" h:"+a+" m:"+i].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o)}timeLineGraph.update(),timeLineGraphLatency.update(),timeLineFirstRun=!1,timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0}}function getInitialTimeLineData(){getTimeLineDataForMetric("Count","Sum","123xx",timeLineBase.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",timeLineBase.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",timeLineBase.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",timeLineBase.toISOString())}function getTimeLineData(){var e=new Date;e.setMinutes(e.getMinutes()-5),e.setSeconds(0),e.setMilliseconds(0),timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]={},timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()].Latency=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["4xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["5xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["123xx"]=0,getTimeLineDataForMetric("Count","Sum","123xx",e.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",e.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",e.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",e.toISOString())}function getTimeLineDataForMetric(e,n,t,a){if(!simulatorOn)for(var i in inventory.apigateway){var o={};o.Name="ApiName",o.Value=inventory.apigateway[i].name;for(var r={MetricName:e,Namespace:"AWS/ApiGateway",Dimensions:[o],Period:300,StartTime:a,EndTime:(new Date).toISOString(),Statistics:[n]},s=0;s<cloudWatchObjects.length;s++)"123xx"==t?timeLineInitialDataCountCalls++:"4xx"==t?timeLineInitialData4xxCalls++:"5xx"==t?timeLineInitialData5xxCalls++:"Latency"==t&&timeLineInitialDataLatencyCalls++,function(e,n,t){cloudWatchObjects[s].getMetricStatistics(r,function(e,a){var i,o,r;if("123xx"==t?(i=++timeLineInitialDataCountResponses,o=timeLineInitialDataCountCalls,r=timeLineInitialDataCount):"4xx"==t?(i=++timeLineInitialData4xxResponses,o=timeLineInitialData4xxCalls,r=timeLineInitialData4xx):"5xx"==t?(i=++timeLineInitialData5xxResponses,o=timeLineInitialData5xxCalls,r=timeLineInitialData5xx):"Latency"==t&&(i=++timeLineInitialDataLatencyResponses,o=timeLineInitialDataLatencyCalls,r=timeLineInitialDataLatency),e)console.log(e,e.stack);else if(a.Datapoints.length>0&&("123xx"==t?r=timeLineInitialDataCount=timeLineInitialDataCount.concat(a.Datapoints):"4xx"==t?r=timeLineInitialData4xx=timeLineInitialData4xx.concat(a.Datapoints):"5xx"==t?r=timeLineInitialData5xx=timeLineInitialData5xx.concat(a.Datapoints):"Latency"==t&&(r=timeLineInitialDataLatency=timeLineInitialDataLatency.concat(a.Datapoints))),i==o){for(var s,l=0;l<r.length;l++)void 0!=(s=r[l].Timestamp)&&(s.setMinutes(s.getMinutes()-(s.getMinutes()-5*Math.ceil(s.getMinutes()/5))),void 0!=timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()]&&(timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()][t]+=r[l][n]));timeLineCallBackCount++,drawTimeLineGraph()}})}(0,n,t)}}function convertDateToUTC(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}function addTrafficEvent(e,n){var t=round(n.lat,.5),a=round(n.lon,.5);void 0==newConnectionQueue[t+"|"+a]&&(newConnectionQueue[t+"|"+a]={},newConnectionQueue[t+"|"+a].lat=n.lat,newConnectionQueue[t+"|"+a].lon=n.lon,newConnectionQueue[t+"|"+a]["4xx"]=0,newConnectionQueue[t+"|"+a]["5xx"]=0,newConnectionQueue[t+"|"+a][123]=0,newConnectionQueue[t+"|"+a].total=0,newConnectionQueue[t+"|"+a].devices={}),void 0==newConnectionQueue[t+"|"+a].devices[e]&&(newConnectionQueue[t+"|"+a].devices[e]={},newConnectionQueue[t+"|"+a].devices[e]["4xx"]=0,newConnectionQueue[t+"|"+a].devices[e]["5xx"]=0,newConnectionQueue[t+"|"+a].devices[e][123]=0,newConnectionQueue[t+"|"+a].devices[e].total=0);for(var i=0;i<n.details.length;i++)newConnectionQueue[t+"|"+a].total++,newConnectionQueue[t+"|"+a].devices[e].total++,"4"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["4xx"]++,newConnectionQueue[t+"|"+a].devices[e]["4xx"]++):"5"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["5xx"]++,newConnectionQueue[t+"|"+a].devices[e]["5xx"]++):(newConnectionQueue[t+"|"+a][123]++,newConnectionQueue[t+"|"+a].devices[e][123]++);newConnectionQueue[t+"|"+a].total>trafficCountHigh&&(trafficCountHigh=newConnectionQueue[t+"|"+a].total),trafficPointCount++,trafficConnectionCount+=n.details.length}function showTraffic(){var e,n,t,a,i,o,r,s,l,c,d=new THREE.Geometry,u=new THREE.Mesh,p=new THREE.Geometry,m=new THREE.Geometry,h=new THREE.Geometry,g=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.9}),y=new THREE.MeshLambertMaterial({color:"rgb(255, 20, 0)",transparent:!0,opacity:.9}),f=new THREE.MeshLambertMaterial({color:"rgb(255, 60, 0)",transparent:!0,opacity:.9}),v=new THREE.LineDashedMaterial({color:16777215,scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),M=new THREE.LineDashedMaterial({color:"rgb(255, 100, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),T=new THREE.LineDashedMaterial({color:"rgb(255, 30, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7});void 0!=globe.scene.getObjectByName("trafficPointsMesh")&&globe.scene.remove(globe.scene.getObjectByName("trafficPointsMesh")),void 0!=globe.scene.getObjectByName("trafficLineSegments123")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments123")),void 0!=globe.scene.getObjectByName("trafficLineSegments4xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments4xx")),void 0!=globe.scene.getObjectByName("trafficLineSegments5xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments5xx"));var C=!1;for(var R in newConnectionQueue){r=(90-newConnectionQueue[R].lat)*Math.PI/180,s=(180-newConnectionQueue[R].lon)*Math.PI/180,e=globe.globeRadius*Math.sin(r)*Math.cos(s),n=globe.globeRadius*Math.cos(r),t=globe.globeRadius*Math.sin(r)*Math.sin(s),i=new THREE.Vector3(e,n,t),c=(c=newConnectionQueue[R].total-trafficConnectionCount/trafficPointCount)<=1?1:Math.floor(scaleBetween(c,1,10,1,trafficCountHigh)),u.geometry=new THREE.SphereGeometry(c,10,10),u.position.x=e,u.position.y=n,u.position.z=t,u.lookAt(globe.globeMesh.position),u.updateMatrix(),l=0,newConnectionQueue[R]["4xx"]/newConnectionQueue[R].total>=.25&&(l=2),newConnectionQueue[R]["5xx"]/newConnectionQueue[R].total>=.25&&newConnectionQueue[R]["5xx"]>newConnectionQueue[R]["4xx"]&&(l=1);for(var S=0;S<u.geometry.faces.length;S++)u.geometry.faces[S].materialIndex=l;d.merge(u.geometry,u.matrix),i.x<0?i.x-=globe.regionOffset/1.5:i.x+=globe.regionOffset/1.5,i.y<0?i.y-=globe.regionOffset/1.5:i.y+=globe.regionOffset/1.5,i.z<0?i.z-=globe.regionOffset/1.5:i.z+=globe.regionOffset/1.5;for(var G in newConnectionQueue[R].devices){C=!1,(a=globe.scene.getObjectByName(G)).geometry.computeBoundingBox();var b=a.geometry.boundingBox;(o=new THREE.Vector3).subVectors(b.max,b.min),o.multiplyScalar(.5),o.add(b.min),o.applyMatrix4(a.matrixWorld),o=new THREE.Vector3(o.x,o.y,o.z),newConnectionQueue[R].devices[G]["4xx"]/newConnectionQueue[R].devices[G].total>=.25&&(m=getArc(i,o,50,m),C=!0),newConnectionQueue[R].devices[G]["5xx"]/newConnectionQueue[R].devices[G].total>=.25&&newConnectionQueue[R].devices[G]["5xx"]>newConnectionQueue[R].devices[G]["4xx"]&&(h=getArc(i,o,50,h),C=!0),C||(p=getArc(i,o,50,p))}}var L=new THREE.Mesh(d,new THREE.MultiMaterial([g,y,f]));L.name="trafficPointsMesh",globe.scene.add(L);var A=new THREE.LineSegments(p,v);A.updateMatrix(),A.name="trafficLineSegments123",globe.scene.add(A);var E=new THREE.LineSegments(m,M);E.updateMatrix(),E.name="trafficLineSegments4xx",globe.scene.add(E);var I=new THREE.LineSegments(h,T);I.updateMatrix(),I.name="trafficLineSegments5xx",globe.scene.add(I),trafficPointCount=0,trafficConnectionCount=0,trafficCountHigh=0,newConnectionQueue={}}function getArc(e,n,t,a){var i=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3;i.subVectors(new THREE.Vector3,n),o.subVectors(e,n),i.cross(o),r.copy(i).normalize();var s=e.angleTo(n)/(t-1),l=e.clone();l.x>0?l.x-=globe.regionOffset/2:l.x+=globe.regionOffset/2,l.y>0?l.y-=globe.regionOffset/2:l.y+=globe.regionOffset/2,l.z>0?l.z-=globe.regionOffset/2:l.z+=globe.regionOffset/2,a.vertices.push(l);for(var c=1;c<t;c++)a.vertices.push(e.clone().applyAxisAngle(r,s*c));return a}function scaleBetween(e,n,t,a,i){return(t-n)*(e-a)/(i-a)+n}function showTrafficDetails(e){globe.scene.getObjectByName(e);var n=(90-parseInt(traffic[e].lat))*Math.PI/180,t=(180-parseInt(traffic[e].lon))*Math.PI/180,a=700/1.55*Math.sin(n)*Math.cos(t),i=700/1.55*Math.cos(n),o=700/1.55*Math.sin(n)*Math.sin(t);globe.setCameraPosition(a,i,o);var r="successText",s="";document.getElementById("trafficBlockedCount").innerHTML="",document.getElementById("trafficPorts").innerHTML="",document.getElementById("trafficMap").src=googleMapsBaseUrl+"&q="+traffic[e].lat+","+traffic[e].lon+"&zoom=6&maptype=satellite",void 0!=traffic[e].blockedCount&&traffic[e].blockedCount>0&&(r="alertText",s="(This IP has been blocked by other users!)",document.getElementById("trafficBlockedCount").innerHTML='<span class="'+r+'">Total Times Blocked: '+traffic[e].blockedCount+"</span>");for(var l in traffic[e])isNaN(l)||("22"==l?(r="severeWarnText",s="(Privledged Access Port 22 In Use)",document.getElementById("trafficPorts").innerHTML+="<div class='"+r+"'>Port "+l+" Count: "+traffic[e][l]+"</div>"):document.getElementById("trafficPorts").innerHTML+="<div>Port "+l+" Count: "+traffic[e][l]+"</div>");document.getElementById("trafficIp").innerHTML='<span class="'+r+'">'+e+" "+s+"</span>",document.getElementById("trafficCountry").innerHTML="Country: "+traffic[e].country,document.getElementById("trafficStateProv").innerHTML="State/Province: "+traffic[e].state,document.getElementById("trafficCity").innerHTML="City: "+traffic[e].city,document.getElementById("trafficCoordinates").innerHTML="Coordinates: "+traffic[e].lat+","+traffic[e].lon,document.getElementById("trafficLocalTime").innerHTML="Local Time: "+new Date,document.getElementById("detailsBodyMetrics").style.display="none",document.getElementById("detailsBodyTraffic").style.display="block",document.getElementById("paneMiddle").className+=" openPane"}function getApiGatewayLogs(e){function n(e,n,a){if(void 0==a)for(var i=0;i<e.items.length;i++)!function(e,n){var a={};a.id=e.id,a.name=e.name,a.description=e.description,a.region=n.config.region,a.type="apigateway",a.cloud="aws",a.stages=[],apiGatewayInventoryQueue[e.id]=a,apiGatewayStagesTarget++;var i={restApiId:e.id};n.getStages(i,function(n,a){n?t(null,null,n):t(a,e.id)})}(e.items[i],n);else console.log(a,a.stack);apiGatewayObjectActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function t(e,n,t){if(void 0==t)for(var i=0;i<e.item.length;i++)apiGatewayInventoryQueue[n].stages.push(e.item[i].stageName),isDeviceFilteredOut(n+"/"+e.item[i].stageName)||a(n,e.item[i].stageName);else console.log(t,t.stack);apiGatewayStagesActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function a(e,n,t){var a=apiGatewayCloudWatchLogsPrefix+e+"/"+n;apiGatewayConnectionTarget++;var r={logGroupName:a,endTime:o.getTime(),filterPattern:"Method - Starting - HTTP - path - query - body - Endpoint - Execution - response",interleaved:!0,limit:1e4,startTime:i.getTime()};cloudWatchLogs.filterLogEvents(r,function(e,n){e?console.log(e,e.stack):getConnections(a,n)})}if(!simulatorOn){ipGatewayLogRetrivalInProgress=!0,apiGatewayObjectTarget=APIGatewayObjects.length,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0;var i=new Date(e.getTime());i.setSeconds(i.getSeconds()-trafficWindowSeconds);for(var o=e,r={},s=0;s<APIGatewayObjects.length;s++)!function(e){e.getRestApis(r,function(t,a){t?n(null,null,t):n(a,e)})}(APIGatewayObjects[s])}}function getConnections(e,n){console.log("getting connections"),console.log(n);var t={};t.type="apiGateway",t.id=e.substring(apiGatewayCloudWatchLogsPrefix.length,e.length);for(var a=0;a<trafficQueue.length;a++)if(trafficQueue[a].id==t.id){t=trafficQueue[a];break}void 0==t.connections&&(t.connections=[],t.responses=[],trafficQueue.push(t));for(var i,o,r,s,l,c="",d="",u={},p=0;p<n.events.length;p++)if(c=n.events[p].message,d=c.substring(1,c.indexOf(")")),-1!=c.indexOf("Method request headers:")){u[d]={},u[d].id=d,u[d].start=n.events[p].timestamp;var m=testOnly[Math.round(23*Math.random())];console.log(m),u[d].ip=m,i=(i=c.substring(c.indexOf("X-Forwarded-Port=")+"X-Forwarded-Port=".length,c.length)).substring(0,i.indexOf(",")),u[d].port=i,o=(o=c.substring(c.indexOf("CloudFront-Is-Tablet-Viewer=")+"CloudFront-Is-Tablet-Viewer=".length,c.length)).substring(0,o.indexOf(",")),u[d].tablet=o,r=(r=c.substring(c.indexOf("CloudFront-Is-Mobile-Viewer=")+"CloudFront-Is-Mobile-Viewer=".length,c.length)).substring(0,r.indexOf(",")),u[d].mobile=r,s=(s=c.substring(c.indexOf("CloudFront-Is-SmartTV-Viewer=")+"CloudFront-Is-SmartTV-Viewer=".length,c.length)).substring(0,s.indexOf(",")),u[d].smartTV=s,l=(l=c.substring(c.indexOf("Accept-Language=")+"Accept-Language=".length,c.length)).substring(0,l.indexOf(",")),u[d].language=l,u[d].desktop=c.substring(c.indexOf("CloudFront-Is-Desktop-Viewer=")+"CloudFront-Is-Desktop-Viewer=".length,c.length-1),u[d].userAgent=c.substring(c.indexOf("User-Agent=")+"User-Agent=".length,c.indexOf(", X-Forwarded-Proto"))}else-1!=c.indexOf("Method completed with status:")&&(void 0==u[d]&&(u[d]={},u[d].id=d),u[d].responseCode=c.substring(c.indexOf("Method completed with status:")+"Method completed with status:".length+1,c.length),u[d].end=n.events[p].timestamp);var h=null;for(var g in u)if(void 0!=u[g].ip&&void 0!=u[g].responseCode&&void 0!=u[g].start&&void 0!=u[g].end){for(var y=0;y<t.connections.length;y++)if(t.connections[y].ip==u[g].ip){h=t.connections[y];break}if(null==h){(h={}).ip=m,h.details=[];var f=getDataFromIpMappingByIp(m);void 0==f?ipLookUpQueue.push(m):(h.lat=f.lat,h.lon=f.lon,h.country=f.country,h.stateRegion=f.stateRegion,h.city=f.city),t.connections.push(h)}void 0!=connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]&&(u[g].processed=!0),h.details.push(u[g]),connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]={}}apiGatewayConnectionActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function areApiGatewayLogsRetrieved(){return apiGatewayObjectTarget==apiGatewayObjectActual&&apiGatewayStagesTarget==apiGatewayStagesActual&&apiGatewayConnectionTarget==apiGatewayConnectionActual}function loadApiGatewayInventory(){var e=[];for(var n in apiGatewayInventoryQueue)for(var t=0;t<apiGatewayInventoryQueue[n].stages.length;t++)if(void 0==inventory.apigateway||void 0==inventory.apigateway[n+"/"+apiGatewayInventoryQueue[n].stages[t]]){var a=JSON.parse(JSON.stringify(apiGatewayInventoryQueue[n]));a.id=n+"/"+apiGatewayInventoryQueue[n].stages[t],e.push(a);var i={};i.len=100,i.color="#00adef",i.id=a.id,i.label=a.name+" ("+apiGatewayInventoryQueue[n].stages[t]+")",scatterCircleGraphInstanceArray.push(i)}apiGatewayInventoryQueue=[],e.length>0&&(globe.load("inventory",e),startScatterGraphAnimations())}function authenticate(e,n){$.ajax({url:baseUrl,type:"POST",contentType:"application/json",data:JSON.stringify({u:e,p:n}),dataType:"json",success:function(e){var n=JSON.parse(e);AWS.config.update({accessKeyId:n.userAccount.AccessKeyId,secretAccessKey:n.userAccount.SecretAccessKey,sessionToken:n.userAccount.SessionToken,region:loginRegion}),s3=new AWS.S3({apiVersion:"2006-03-01"}),cloudWatchLogs=new AWS.CloudWatchLogs({apiVersion:"2014-03-28"}),APIGatewayObjects=[new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ca-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-south-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"sa-east-1"})],cloudWatchObjects=[new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ca-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-south-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"sa-east-1"})],appAccountConf=n.appAccount,appAccountS3=new AWS.S3({apiVersion:"2006-03-01",credentials:new AWS.Credentials(appAccountConf.AccessKeyId,appAccountConf.SecretAccessKey,appAccountConf.SessionToken)});var t=new Date;if(t.setHours(t.getHours()-24),null==localStorage.getItem("dataRefreshDate")||forceIpKeyRefresh||new Date(localStorage.getItem("dataRefreshDate"))>t){var a={Bucket:"central-sky-ips",Key:"list.json"};appAccountS3.getObject(a,function(e,n){e?console.log(e,e.stack):cacheIpFileKeys(JSON.parse(n.Body))})}null==localStorage.getItem("blocksCached")&&localStorage.setItem("blocksCached","{}"),loginAndLoadInventory()},error:function(e){alert("error="+e)}})}function cacheIpFileKeys(e){console.log("loading keys");for(var n=0;n<e.length;n++)localStorage.setItem(e[n],e[n]);localStorage.setItem("dataRefreshDate",(new Date).getTime())}function lookUpIpsInQueue(){for(var e,n=0;n<ipLookUpQueue.length;n++)e=localStorage.getItem(ipLookUpQueue[n].substring(0,ipLookUpQueue[n].indexOf("."))),console.log("key="+e),void 0!=e&&void 0==ipKeysCached[e]&&void 0==ipKeyCallsQueued[e]&&(ipKeyCallsQueued[e]={},getIpFiles(e));drawUpdates(),lastTrafficRefreshTime=new Date((new Date).getTime()-timeOffset),ipGatewayLogRetrivalInProgress=!1}function addIpsFromDBtoMap(e,n,t){var a;if(null!=e){for(var i=e.split("\r\n"),o=[],r=0;r<i.length;r++)if((o=i[r].split(",")).length>2){a=o[0].replace(/"/gi,"")+"-"+o[1].replace(/"/gi,""),ipMappings[a]={},ipMappings[a].country=o[2].replace(/"/gi,""),ipMappings[a].stateRegion=o[3].replace(/"/gi,""),ipMappings[a].city=o[4].replace(/"/gi,""),ipMappings[a].lat=o[5].replace(/"/gi,""),ipMappings[a].lon=o[6].replace(/"/gi,"");var s=JSON.parse(localStorage.getItem("blocksCached"));null==s&&(s={}),s[a]={},localStorage.setItem(a,JSON.stringify(ipMappings[a])),localStorage.setItem("blocksCached",JSON.stringify(s))}ipKeysCached[n]={},ipKeyCallsQueued[n]=void 0}else console.log(t,t.stack);ipKeysReturned++;var l;if(ipKeysCalled==ipKeysReturned){for(var c=0;c<trafficQueue.length;c++){console.log(trafficQueue[c]);for(var d=0;d<trafficQueue[c].connections.length;d++)console.log(trafficQueue[c].connections),void 0==trafficQueue[c].connections[d].lat&&(l=getDataFromIpMappingByIp(trafficQueue[c].connections[d].ip),trafficQueue[c].connections[d].lat=l.lat,trafficQueue[c].connections[d].lon=l.lon,trafficQueue[c].connections[d].country=l.country,trafficQueue[c].connections[d].stateRegion=l.stateRegion,trafficQueue[c].connections[d].city=l.city)}console.log("Ip lookup queue emptied"),ipLookUpQueue=[]}}function getIpFiles(e){ipKeysCalled++;var n={Bucket:"central-sky-ips",Key:e+".txt"};appAccountS3.getObject(n,function(n,t){n?addIpsFromDBtoMap(null,null,n):addIpsFromDBtoMap(new TextDecoder("utf-8").decode(t.Body),e)})}function loginAndLoadInventory(){document.getElementById("mainOverlays").style.visibility="visible",document.getElementById("loginOverlay").style.display="none",globe.runLoginAnimation(),slidePanes("in"),setTimeout(function(){setTimeout(function(){setTimeout(function(){startClock(),getLogs(),drawUpdates()},500)},500)},1e3),getBilling()}function getAWSInvetory(){var e={FunctionName:"CentralSky_GetInventory",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),initialLoad&&(getAWSMetrics(),getAWSLoggedMetrics(),getAWSEC2Traffic(),initialLoad=!1),globe.load("inventory",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSInvetory()},getAWSInventoryInterval)})}function getAWSMetrics(){var e={FunctionName:"CentralSky_GetMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSMetrics()},getAWSMetricsInterval)})}function getAWSLoggedMetrics(){var e={FunctionName:"CentralSky_GetLoggedMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSLoggedMetrics()},getAWSLoggedMetricsInterval)})}function getAWSBilling(){var e={FunctionName:"CentralSky_GetBilling",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){globe.load("billing",[JSON.parse(n.Payload)]),setTimeout(function(){1==lambdaEnable&&getAWSBilling()},getAWSBillingInterval)})}function getAWSEC2Traffic(){var e={FunctionName:"CentralSky_GetConnections",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){for(console.log(JSON.parse(n.Payload)),t=0;t<trafficObjectIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficObjectIds[t]));trafficObjectIds=[];for(var t=0;t<trafficPointIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficPointIds[t]));trafficPointIds=[],globe.load("traffic",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSEC2Traffic()},getAWSEC2TrafficInterval)})}function blockIp(){var e=document.getElementById("trafficIp").innerHTML;e=e.substring(e.indexOf(">")+1,e.indexOf("</")).trim();var n={FunctionName:"CentralSky_BlockConnection",InvocationType:"RequestResponse",Payload:JSON.stringify({ip:e,token:AWS.config.credentials.sessionToken})};lambda.invoke(n,function(n,t){console.log(JSON.parse(t.Payload)),null==JSON.parse(t.Payload)&&console.log(e+" blocked!")})}function getBilling(){if(simulatorOn)globe.load("billing",["2.50"]);else{var e=new Date;e.setTime(e.getTime()-288e5);var n={MetricName:"EstimatedCharges",Namespace:"AWS/Billing",Dimensions:[{Name:"Currency",Value:"USD"}],Period:60,StartTime:e.toISOString(),EndTime:(new Date).toISOString(),Statistics:["Average"]};cloudWatchObjects[0].getMetricStatistics(n,function(e,n){e?console.log(e,e.stack):globe.load("billing",[n.Datapoints[0].Average])})}}function startClock(){var e=new Date;currentTime=new Date(e.getTime()-timeOffset),document.getElementById("clock").innerHTML=currentTime.toUTCString()+" <span style='font-size:14px;'>("+formatAMPM(currentTime)+")</span>",(currentTime.getTime()-lastTrafficQueueClearTime)/1e3>=trafficWindowSeconds&&(lastTrafficQueueClearTime=currentTime.getTime()),!ipGatewayLogRetrivalInProgress&&(currentTime.getTime()-lastTrafficRefreshTime)/1e3>=trafficVisibilitySeconds&&(simulatorOn?lookUpIpsInQueue():getLogs()),timeLineFirstRun||e.getMinutes()%5!=0?timeLineGraphUpdated&&(timeLineGraphUpdated=!1):timeLineGraphUpdated||(getTimeLineData(),timeLineGraphUpdated=!0),setTimeout(startClock,1e3)}function padTimeWithZeros(e){return e<10&&(e="0"+e),e}function getElbLogs(e,n,t,a,i){var o=new Date(i.getTime());o.setSeconds(o.getSeconds()-60);var r=i,s=t+"AWSLogs/"+n+"/elasticloadbalancing";s=(s=(s=s+"/"+a+"/"+o.getUTCFullYear())+"/"+("0"+(o.getUTCMonth()+1)).slice(-2))+"/"+("0"+o.getUTCDate()).slice(-2);var l={Bucket:e,Prefix:s};s3.listObjectsV2(l,function(n,t){n?findNewElbRecords(null,n):findNewElbRecords(t,null,o,r,e)})}function parseElbContents(e,n){for(var t=e.split("\r\n"),a=null,i=null,o=null,r=null,s=0;s<t.length;s++)if(o=null,r=null,t[s].substring(0,4)==n.getFullYear().toString()){for(var i=(a=convertLogToArray(t[s]))[1],l=0;l<trafficQueue.length;l++)if(trafficQueue[l].id==i){o=trafficQueue[l];break}null==o&&((o={}).type="elb",o.id=i,o.connections=[],trafficQueue.push(o));for(var c=a[2].split(":")[0],d=0;d<o.connections.length;d++)if(o.connections[d].ip==c){r=o.connections[d];break}null==r&&((r={}).ip=c,r.lat=30,r.lon=30,r.details=[],o.connections.push(r),void 0==ipMappings[c]&&(ipMappings[c]={},ipLookUpQueue.push(c))),(u={}).time=a[0],u.targetIp=a[3].split(":")[0],u.requestTime=a[4],u.backendTime=a[5],u.responseTime=a[6],u.responseCode=a[7],u.targetResponse=a[8],u.url=a[11],u.userAgent=a[12],u.port=u.url.split(" ")[1],p=getPosition(u.port,":",2),u.port=u.port.substring(p+1,u.port.indexOf("/",p)),r.details.push(u)}else{if("http"!=t[s].substring(0,4)&&"h2"!=t[s].substring(0,2)&&"ws"!=t[s].substring(0,2))break;for(var i=(a=convertLogToArray(t[s]))[2],l=0;l<trafficQueue.length;l++)if(trafficQueue[l].id==i){o=trafficQueue[l];break}null==o&&((o={}).type="elb",o.id=i,o.connections=[],trafficQueue.push(o));for(var c=a[3].split(":")[0],d=0;d<o.connections.length;d++)if(o.connections[d].ip==c){r=o.connections[d];break}null==r&&((r={}).ip=c,r.lat=30,r.lon=30,r.details=[],o.connections.push(r),void 0==ipMappings[c]&&(ipMappings[c]={},ipLookUpQueue.push(c)));var u={};u.time=a[1],u.targetIp=a[4].split(":")[0],u.requestTime=a[5],u.backendTime=a[6],u.responseTime=a[7],u.responseCode=a[8],u.targetResponse=a[9],u.url=a[12],u.userAgent=a[13],u.port=u.url.split(" ")[1];var p=getPosition(u.port,":",2);u.port=u.port.substring(p+1,u.port.indexOf("/",p)),r.details.push(u)}}function convertLogToArray(e){var n=/[^\s"]+|"([^"]*)"/gi,t=e,a=[];do{var i=n.exec(t);null!=i&&a.push(i[1]?i[1]:i[0])}while(null!=i);return a}function getPosition(e,n,t){return e.split(n,t).join(n).length}function getElbLogEvents(e,n,t,a){void 0==t?parseElbContents(n?new TextDecoder("utf-8").decode(new Zlib.Gunzip(e.Body).decompress()):e.Body.toString("utf8"),a):console.log(t,t.stack)}function findNewElbRecords(e,n,t,a,i){if(void 0==n)for(var o=!1,r=t.getUTCFullYear()+("0"+(t.getUTCMonth()+1)).slice(-2)+("0"+t.getUTCDate()).slice(-2),s="",l=0,c=null,d=0;d<e.Contents.length;d++)e.Contents[d].Size>0&&(o=!1,l=e.Contents[d].Key.indexOf(r+"T"),s=e.Contents[d].Key.substring(l,e.Contents[d].Key.indexOf("Z",l)),(c=new Date(t.getUTCFullYear()+"-"+("0"+(t.getUTCMonth()+1)).slice(-2)+"-"+("0"+t.getUTCDate()).slice(-2)+"T"+s.substring(9,11)+":"+s.substring(11,13)+":00Z")).getTime()>t.getTime()&&c.getTime()<a.getTime()&&(".gz"==e.Contents[d].Key.substring(e.Contents[d].Key.length-3,e.Contents[d].Key.length)&&(o=!0),function(e,n,a){var i={Bucket:a,Key:e};s3.getObject(i,function(e,a){e?getElbLogEvents(null,null,e):getElbLogEvents(a,n,null,t)})}(e.Contents[d].Key,o,i)));else console.log(n,n.stack)}function drawEndPointResponseGraphAnimations(){var e;for(var n in endPointResponseUpdatedObjects){for(e=!1,a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.seriesResponse=[],t.data={},t.region=endPointResponseUpdatedObjects[n].region,t.response={},t.windowTotal=0,t.visible=!1,endPointResponseObjects.push(t)}}for(var a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].data={},n=endPointResponseObjects[a].name,void 0==endPointResponseUpdatedObjects[n]?(endPointResponseObjects[a].data[123]=0,endPointResponseObjects[a].data["4xx"]=0,endPointResponseObjects[a].data["5xx"]=0,endPointResponseObjects[a].response.value=0,endPointResponseObjects[a].response.area=0,endPointResponseObjects[a].uniqueIps=0):(endPointResponseObjects[a].data[123]=endPointResponseUpdatedObjects[n][123],endPointResponseObjects[a].data["4xx"]=endPointResponseUpdatedObjects[n]["4xx"],endPointResponseObjects[a].data["5xx"]=endPointResponseUpdatedObjects[n]["5xx"],endPointResponseObjects[a].response.value=endPointResponseUpdatedObjects[n].response/endPointResponseUpdatedObjects[n].responseCount,endPointResponseObjects[a].response.area=endPointResponseObjects[a].response.value,endPointResponseObjects[a].uniqueIps=Object.keys(endPointResponseUpdatedObjects[n].ipList).length),endPointResponseObjects[a].series.push(endPointResponseObjects[a].data),endPointResponseObjects[a].seriesResponse.push(endPointResponseObjects[a].response),endPointResponseObjects[a].total=endPointResponseObjects[a].data[123]+endPointResponseObjects[a].data["4xx"]+endPointResponseObjects[a].data["5xx"],endPointResponseObjects[a].windowTotal+=endPointResponseObjects[a].total,endPointResponseObjects[a].series.length>endPointDataFrames){var i=endPointResponseObjects[a].series.shift();endPointResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}endPointResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<endPointResponseObjects.length;r++)n=endPointResponseObjects[r].name,o<endPointGraphsMax?(endPointResponseObjects[r].visible?(updateEndPointResponseTimelineGraph(n,endPointResponseObjects[r].data),updateEndPointResponseTimelineResponeTimeGraph(n,endPointResponseObjects[r].response)):(setupEndPointGraph(n,endPointResponseObjects[r].region,endPointResponseObjects[r].series,endPointResponseObjects[r].seriesResponse),endPointResponseObjects[r].visible=!0),document.getElementById("endPoint"+n+"Connections").innerHTML=numberWithCommas(endPointResponseObjects[r].total),document.getElementById("endPoint"+n+"IPs").innerHTML=numberWithCommas(endPointResponseObjects[r].uniqueIps),document.getElementById("endPoint"+n+"ResonseTimes").innerHTML=(Math.round(endPointResponseObjects[r].response.value)/1e3).toFixed(3)+"s",updateEndPointResponseTypeGraph("endPointResponseTypeGraph"+n,endPointResponseObjects[r].data),document.getElementById("endPoint"+n+"ParentContainer").style.top=70*r+"px",o++):(null!=document.getElementById("endPoint"+n+"ParentContainer")&&(document.getElementById("endPoint"+n+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[n],delete endPointTimeLineResponseTimeGraphs[n],endPointResponseObjects[r].visible=!1)}function clearEndPointResponseGraphs(){for(var e,n=0;n<endPointResponseObjects.length;n++)e=endPointResponseObjects[n].name,null!=document.getElementById("endPoint"+e+"ParentContainer")&&(document.getElementById("endPoint"+e+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[e],delete endPointTimeLineResponseTimeGraphs[e],endPointResponseObjects[n].visible=!1,endPointResponseObjects[n].series=[],endPointResponseObjects[n].seriesResponse=[]}function setupEndPointGraph(e,n,t,a){document.getElementById("endPointGraphs").insertAdjacentHTML("beforeend",'<div id="endPoint'+e+'ParentContainer" class="endPointGraphContainersParents" onmousedown="zoomToRegion(\''+n+'\')"><div class="endPointGraphContainers"><span id="endPoint'+e+'Name" class="endPointName" >'+decodeEndPointName(e)+'</span><span id="endPoint'+e+'Connections" class="endPointConnections" ></span><span id="endPoint'+e+'IPs" class="endPointIPs" ></span><div id="graph-'+e+'"></div><div id="endPointResponseTypeGraph'+e+'" class="endPointResponseTypeGraphs"></div><div id="graph-responseTime-'+e+'" class="endPointResponseTimeGraphs"></div><span id="endPoint'+e+'ResonseTimes" class="endPointResponseTimes" ></span></div></div>'),setupEndPointCircleGraph("endPointResponseTypeGraph"+e),setupEndPointTimeLineGraph(e,t),setupEndPointTimeLineResponseTimeGraph(e,a)}function setupEndPointCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+endPointResponseGraphWidth/2+","+endPointResponseGraphHeight/2+")")}function setupEndPointTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineGraphs[e]=t}function setupEndPointTimeLineResponseTimeGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-responseTime-"+e),width:345,height:15,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:"#00adef",renderer:"line",strokeWidth:.75},{name:"area",color:"rgba(0,133,199,0.3)",renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineResponseTimeGraphs[e]=t}function updateEndPointResponseTimelineGraph(e,n){var t=endPointTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTimelineResponeTimeGraph(e,n){var t=endPointTimeLineResponseTimeGraphs[e],a={};a.value=n.value,a.area=n.area,t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=endPointResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(endPointResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(endPointResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(endPointResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcInner(n(e))}}),s.exit().remove()}function createNewEndPointGraph(e,n){document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<span style="color:#00ADEF;float:left;">'+e+'</span><span id="graph-total-'+e+'" style="color:#ffffff;float:right;">0</span>'),document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<div id="graph-'+e+'" style="margin-bottom:5px;"></div>');var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:400,height:60,min:100,interpolation:"basis",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:color4xx},{name:"5xx",color:color5xx},{name:"123",color:color123}],void 0,{timeInterval:250,maxDataPoints:150,timeBase:(new Date).getTime()/1e3})}),a=new Rickshaw.Graph.Smoother({graph:t,element:document.querySelector("#smoother")});new Rickshaw.Graph.Axis.Y({graph:t,pixelsPerTick:30,tickFormat:function(e){return e/1e3+"s"},ticksTreatment:"inverse"}).render(),"steam"==n?(t.setRenderer("stack"),t.offset="wiggle",a.setScale(40)):"line"==n?(t.setRenderer("line"),t.offset="zero",a.setScale(30)):"scatter"==n&&(t.setRenderer("scatterplot",{dotSize:1.2}),t.offset="value"),t.update(),endPointHealthGraphs.push(t);var i={};i["4xx"]=0,i["5xx"]=0,i[123]=0,endPoints[e]=i,graphTotals[e]=0}function startEndPointGraphAnimations(){setInterval(function(){for(var e in endPoints){var n=Math.random();n<.1?(endPoints[e]["4xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["4xx"]=0,n<.3&&n>.2?(endPoints[e]["5xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["5xx"]=0,n>.5?(endPoints[e][123]=Math.floor(1200*Math.random()+200),graphTotals[e]++):endPoints[e][123]=0}for(var t,a=0;a<endPointHealthGraphs.length;a++)t=(t=endPointHealthGraphs[a].element.id).substring("graph-".length,t.length),endPointHealthGraphs[a].series.addData(endPoints[t]),endPointHealthGraphs[a].update(),document.getElementById("graph-total-"+t).innerHTML=numberWithCommas(graphTotals[t])},1e3)}function translateElb(e){var n={};return n.id=e.LoadBalancerName,n.name=e.LoadBalancerName,n.status="pending",void 0!=e.Instances&&e.Instances.length>0&&(n.status="running"),n.AvailabilityZone=e.AvailabilityZones[0],void 0!=n.AvailabilityZone&&(n.Region=n.AvailabilityZone.substring(0,n.AvailabilityZone.length-1)),n.instances=e.Instances,n.tags=e.Tags,n.health=e.health,n.type="elb",n}function translateApiGateway(e){var n={};return n.id=e.id,n.name=e.name,n.Region=e.region,n.Description=e.description,n.stages=e.stages,n.type="apigateway",n.status="running",n}function createNewLineGraph(e,n,t,a,i,o,r){var s=208,l=60;"third"==a&&(s=140,l=50),document.getElementById(n).insertAdjacentHTML("beforeend",'<div id="graph-'+e+'"><span style="color:'+i+'" class="'+n+'Titles">'+e+'</span><span id="graph-total-'+e+'" class="'+n+'Totals">0</span></div>');var c=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:s,height:l,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:i,strokeWidth:r,renderer:"line"},{name:"area",color:o,renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:30,timeBase:(new Date).getTime()/1e3})});c.offset="zero",c.update(),lineGraphs.push(c)}function drawLineGraphAnimations(e,n,t,a,i){for(var o,r,s=t+a+i,l=0;l<lineGraphs.length;l++)r={},"Connections"==(o=(o=lineGraphs[l].element.id).substring("graph-".length,o.length))?(r.value=e,r.area=e):"Unique IPs"==o?(r.value=n,r.area=n):"Success"==o?(r.value=t,r.area=t):"Rejected"==o?(r.value=a,r.area=a):"Error"==o&&(r.value=i,r.area=i),lineGraphs[l].series.addData(r),lineGraphs[l].update(),document.getElementById("graph-total-"+o).innerHTML="Success"==o||"Rejected"==o||"Error"==o?0==s?"0%":Math.round(r.value/s*100)+"%":numberWithCommas(r.value)}function clearLineGraphs(){for(var e,n,t=0;t<150;t++)for(var a=0;a<lineGraphs.length;a++)n={},e=(e=lineGraphs[a].element.id).substring("graph-".length,e.length),n.value=0,lineGraphs[a].series.addData(n),lineGraphs[a].update();for(var i=0;i<lineGraphs.length;i++)e=(e=lineGraphs[i].element.id).substring("graph-".length,e.length),document.getElementById("graph-total-"+e).innerHTML=0,lineGraphs[i].update()}function resetLargeMapZoom(){mapLargeWorld.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)"),mapLargeUSA.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)")}function drawMap(e){var n={},t=e.map(function(e){return e[1]}),a=Math.min.apply(null,t),i=Math.max.apply(null,t);a==i&&(a=0);var o=d3.scale.linear().domain([a,i]).range(["#00212d","#00adef"]);e.forEach(function(e){var t=e[0],a=e[1];n[t]={numberOfThings:a,fillColor:o(a)}}),map.updateChoropleth(n,{reset:!0})}function drawMapLarge(e,n){var t;if(e.forEach(function(e){var t=e[0],a=e[1];"world"==n?(void 0==mapDataSet[t]?mapDataSet[t]={numberOfThings:a,fillColor:null}:mapDataSet[t].numberOfThings+=a,(0==mapMinValue||mapMinValue>mapDataSet[t].numberOfThings)&&(mapMinValue=mapDataSet[t].numberOfThings),mapDataSet[t].numberOfThings>mapMaxValue&&(mapMaxValue=mapDataSet[t].numberOfThings)):(void 0==mapDataSetUSA[t]?mapDataSetUSA[t]={numberOfThings:a,fillColor:null}:mapDataSetUSA[t].numberOfThings+=a,(0==mapMinValueUSA||mapMinValueUSA>mapDataSetUSA[t].numberOfThings)&&(mapMinValueUSA=mapDataSetUSA[t].numberOfThings),mapDataSetUSA[t].numberOfThings>mapMaxValueUSA&&(mapMaxValueUSA=mapDataSetUSA[t].numberOfThings))}),"world"==n){t=d3.scale.linear().domain([mapMinValue,mapMaxValue]).range(["#00212d","#00adef"]);for(var a in mapDataSet)mapDataSet[a].fillColor=t(mapDataSet[a].numberOfThings);mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0})}else{t=d3.scale.linear().domain([mapMinValueUSA,mapMaxValueUSA]).range(["#00212d","#00adef"]);for(var a in mapDataSetUSA)mapDataSetUSA[a].fillColor=t(mapDataSetUSA[a].numberOfThings);mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}}function clearMaps(){mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0}),mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}function drawResponseCodeGraph(e,n,t,a){function i(e){return e.startAngle+(e.endAngle-e.startAngle)/2}var o=n+t+a;0==o?(document.getElementById("responseCodeValue123").innerHTML="0%",document.getElementById("responseCodeValue4xx").innerHTML="0%",document.getElementById("responseCodeValue5xx").innerHTML="0%",document.getElementById("averageResponseTimeValue").innerHTML=(0).toFixed(3)+"s"):(document.getElementById("responseCodeValue123").innerHTML=Math.round(n/o*100)+"%",document.getElementById("responseCodeValue4xx").innerHTML=Math.round(t/o*100)+"%",document.getElementById("responseCodeValue5xx").innerHTML=Math.round(a/o*100)+"%",document.getElementById("averageResponseTimeValue").innerHTML=(Math.round(e)/1e3).toFixed(3)+"s");var r=responseCodeGraphColor.domain().map(function(e){return o>0?"Success"==e?{label:e,value:n/o}:"Rejected"==e?{label:e,value:t/o}:"Error"==e?{label:e,value:a/o}:void 0:{label:e,value:0}}),s=responseCodeGraphSvg.select(".slices").selectAll("path.slice").data(pie(r),key);s.enter().insert("path").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("class","slice"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return responseCodeGraphArc(n(e))}}),s.exit().remove();var l=responseCodeGraphSvg.select(".labels").selectAll("text").data(pie(r),key);l.enter().append("text").attr("dy",".35em").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("id",function(e){return"responseCodeGraphText-"+e.data.label}).text(function(e){return e.data.label}),l.transition().duration(1e3).attrTween("transform",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=responseCodeGraphRadius*(i(t)<Math.PI?1:-1),"translate("+a+")"}}).styleTween("text-anchor",function(e){0==e.data.value?document.getElementById("responseCodeGraphText-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphText-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return i(n(e))<Math.PI?"start":"end"}}),l.exit().remove();var c=responseCodeGraphSvg.select(".lines").selectAll("polyline").data(pie(r),key);c.enter().append("polyline").attr("id",function(e){return"responseCodeGraphLine-"+e.data.label}),c.transition().duration(1e3).attrTween("points",function(e){0==e.data.value?document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=.95*responseCodeGraphRadius*(i(t)<Math.PI?1:-1),[responseCodeGraphArc.centroid(t),responseCodeGraphOuterArc.centroid(t),a]}}),c.exit().remove()}function startScatterGraphAnimations(){for(var e=document.getElementsByClassName("scatterCircleCenter"),n=0;n<e.length;n++)e[n].style.display="block";deviceScatterGraph.layout(scatterCircleGraphInstanceArray,{innerRadius:scatterCircleGraphWidth/2-40,outerRadius:scatterCircleGraphWidth/2-38,ticks:{display:!1},labels:{position:"center",display:!0,size:14,color:"#ffffff",radialOffset:15}}).render()}function pushScatterCircleGraphData(e,n,t,a){deviceScatterData.push({block_id:e,position:98*Math.random()+2,value:n/1e3,code:t}),deviceScatterData.length>2e3&&deviceScatterData.shift()}function drawScatterCircleGraph(){drawCircos(deviceScatterData)}function clearScatterCircleGraph(){drawCircos(deviceScatterData=[],!0)}function drawCircos(e,n){(0!=e.length||void 0!=n&&n)&&deviceScatterGraph.scatter("circleScatterGraph",e,{innerRadius:.2,outerRadius:.98,logScale:!1,fill:!0,size:.75,strokeColor:function(e,n){return 4==e.code?"#ff7b00":5==e.code?"#ff0000":"#ffffff"},axes:[{color:"#00adef",position:.1,opacity:.5,thickness:.5},{color:"#00adef",position:.15,opacity:.5,thickness:.5},{color:"#00adef",position:.2,opacity:.5,thickness:.5},{color:"#00adef",position:.25,opacity:.5,thickness:.5},{color:"#00adef",position:.3,opacity:.5,thickness:.5},{color:"#00adef",position:.35,opacity:.5,thickness:.5},{color:"#00adef",position:.4,opacity:.5,thickness:.5},{color:"#00adef",position:.45,opacity:.5,thickness:.5},{color:"#00adef",position:.5,opacity:.5,thickness:.5},{color:"#00adef",position:.55,opacity:.5,thickness:.5},{color:"#00adef",position:.6,opacity:.5,thickness:.5},{color:"#00adef",position:.65,opacity:.5,thickness:.5},{color:"#00adef",position:.7,opacity:.5,thickness:.5},{color:"#00adef",position:.75,opacity:.5,thickness:.5},{color:"#00adef",position:.8,opacity:.5,thickness:.5},{color:"#00adef",position:.85,opacity:.5,thickness:.5},{color:"#00adef",position:.9,opacity:.5,thickness:.5},{color:"#00adef",position:.95,opacity:.5,thickness:.5},{color:"#00adef",position:1,opacity:.5,thickness:1},{color:"#1F4B64",position:1.2,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.25,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.3,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.35,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.4,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.45,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.5,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.55,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.6,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.65,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.7,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.75,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.8,opacity:.7,thickness:.5},{color:"#182B38",position:2,opacity:1,thickness:.5},{color:"#182B38",position:3,opacity:1,thickness:.5},{color:"#182B38",position:4,opacity:1,thickness:.5},{color:"#182B38",position:5,opacity:1,thickness:.5},{color:"#182B38",position:6,opacity:1,thickness:.5},{color:"#182B38",position:7,opacity:1,thickness:.5},{color:"#182B38",position:8,opacity:1,thickness:.5},{color:"#182B38",position:9,opacity:1,thickness:.5},{color:"#182B38",position:10,opacity:1,thickness:.5},{color:"#182B38",position:30,opacity:1,thickness:.5},{color:"#182B38",position:60,opacity:1,thickness:.5},{color:"#182B38",position:300,opacity:1,thickness:.5}]}).render()}function drawTimeLineGraph(){if(4==timeLineCallBackCount){if(timeLineFirstRun){timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes();for(var e=0;e<287;e++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]-(timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]+timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]),(o={})["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"],o["4xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"],o["5xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o),55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5}else{var n=new Date;n.setMinutes(n.getMinutes()-5);var t=n.getDate(),a=n.getHours(),i=n.getMinutes();timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]-(timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"]+timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"]);var o={};o["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"],o["4xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"],o["5xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+t+" h:"+a+" m:"+i].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o)}timeLineGraph.update(),timeLineGraphLatency.update(),timeLineFirstRun=!1,timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0}}function getInitialTimeLineData(){getTimeLineDataForMetric("Count","Sum","123xx",timeLineBase.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",timeLineBase.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",timeLineBase.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",timeLineBase.toISOString())}function getTimeLineData(){var e=new Date;e.setMinutes(e.getMinutes()-5),e.setSeconds(0),e.setMilliseconds(0),timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]={},timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()].Latency=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["4xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["5xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["123xx"]=0,getTimeLineDataForMetric("Count","Sum","123xx",e.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",e.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",e.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",e.toISOString())}function getTimeLineDataForMetric(e,n,t,a){if(!simulatorOn)for(var i in inventory.apigateway){var o={};o.Name="ApiName",o.Value=inventory.apigateway[i].name;for(var r={MetricName:e,Namespace:"AWS/ApiGateway",Dimensions:[o],Period:300,StartTime:a,EndTime:(new Date).toISOString(),Statistics:[n]},s=0;s<cloudWatchObjects.length;s++)"123xx"==t?timeLineInitialDataCountCalls++:"4xx"==t?timeLineInitialData4xxCalls++:"5xx"==t?timeLineInitialData5xxCalls++:"Latency"==t&&timeLineInitialDataLatencyCalls++,function(e,n,t){cloudWatchObjects[s].getMetricStatistics(r,function(e,a){var i,o,r;if("123xx"==t?(i=++timeLineInitialDataCountResponses,o=timeLineInitialDataCountCalls,r=timeLineInitialDataCount):"4xx"==t?(i=++timeLineInitialData4xxResponses,o=timeLineInitialData4xxCalls,r=timeLineInitialData4xx):"5xx"==t?(i=++timeLineInitialData5xxResponses,o=timeLineInitialData5xxCalls,r=timeLineInitialData5xx):"Latency"==t&&(i=++timeLineInitialDataLatencyResponses,o=timeLineInitialDataLatencyCalls,r=timeLineInitialDataLatency),e)console.log(e,e.stack);else if(a.Datapoints.length>0&&("123xx"==t?r=timeLineInitialDataCount=timeLineInitialDataCount.concat(a.Datapoints):"4xx"==t?r=timeLineInitialData4xx=timeLineInitialData4xx.concat(a.Datapoints):"5xx"==t?r=timeLineInitialData5xx=timeLineInitialData5xx.concat(a.Datapoints):"Latency"==t&&(r=timeLineInitialDataLatency=timeLineInitialDataLatency.concat(a.Datapoints))),i==o){for(var s,l=0;l<r.length;l++)void 0!=(s=r[l].Timestamp)&&(s.setMinutes(s.getMinutes()-(s.getMinutes()-5*Math.ceil(s.getMinutes()/5))),void 0!=timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()]&&(timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()][t]+=r[l][n]));timeLineCallBackCount++,drawTimeLineGraph()}})}(0,n,t)}}function convertDateToUTC(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}function addTrafficEvent(e,n){var t=round(n.lat,.5),a=round(n.lon,.5);void 0==newConnectionQueue[t+"|"+a]&&(newConnectionQueue[t+"|"+a]={},newConnectionQueue[t+"|"+a].lat=n.lat,newConnectionQueue[t+"|"+a].lon=n.lon,newConnectionQueue[t+"|"+a]["4xx"]=0,newConnectionQueue[t+"|"+a]["5xx"]=0,newConnectionQueue[t+"|"+a][123]=0,newConnectionQueue[t+"|"+a].total=0,newConnectionQueue[t+"|"+a].devices={}),void 0==newConnectionQueue[t+"|"+a].devices[e]&&(newConnectionQueue[t+"|"+a].devices[e]={},newConnectionQueue[t+"|"+a].devices[e]["4xx"]=0,newConnectionQueue[t+"|"+a].devices[e]["5xx"]=0,newConnectionQueue[t+"|"+a].devices[e][123]=0,newConnectionQueue[t+"|"+a].devices[e].total=0);for(var i=0;i<n.details.length;i++)newConnectionQueue[t+"|"+a].total++,newConnectionQueue[t+"|"+a].devices[e].total++,"4"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["4xx"]++,newConnectionQueue[t+"|"+a].devices[e]["4xx"]++):"5"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["5xx"]++,newConnectionQueue[t+"|"+a].devices[e]["5xx"]++):(newConnectionQueue[t+"|"+a][123]++,newConnectionQueue[t+"|"+a].devices[e][123]++);newConnectionQueue[t+"|"+a].total>trafficCountHigh&&(trafficCountHigh=newConnectionQueue[t+"|"+a].total),trafficPointCount++,trafficConnectionCount+=n.details.length}function showTraffic(){var e,n,t,a,i,o,r,s,l,c,d=new THREE.Geometry,u=new THREE.Mesh,p=new THREE.Geometry,m=new THREE.Geometry,h=new THREE.Geometry,g=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.9}),y=new THREE.MeshLambertMaterial({color:"rgb(255, 20, 0)",transparent:!0,opacity:.9}),f=new THREE.MeshLambertMaterial({color:"rgb(255, 60, 0)",transparent:!0,opacity:.9}),v=new THREE.LineDashedMaterial({color:16777215,scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),M=new THREE.LineDashedMaterial({color:"rgb(255, 100, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),T=new THREE.LineDashedMaterial({color:"rgb(255, 30, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7});void 0!=globe.scene.getObjectByName("trafficPointsMesh")&&globe.scene.remove(globe.scene.getObjectByName("trafficPointsMesh")),void 0!=globe.scene.getObjectByName("trafficLineSegments123")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments123")),void 0!=globe.scene.getObjectByName("trafficLineSegments4xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments4xx")),void 0!=globe.scene.getObjectByName("trafficLineSegments5xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments5xx"));var C=!1;for(var R in newConnectionQueue){r=(90-newConnectionQueue[R].lat)*Math.PI/180,s=(180-newConnectionQueue[R].lon)*Math.PI/180,e=globe.globeRadius*Math.sin(r)*Math.cos(s),n=globe.globeRadius*Math.cos(r),t=globe.globeRadius*Math.sin(r)*Math.sin(s),i=new THREE.Vector3(e,n,t),c=(c=newConnectionQueue[R].total-trafficConnectionCount/trafficPointCount)<=1?1:Math.floor(scaleBetween(c,1,10,1,trafficCountHigh)),u.geometry=new THREE.SphereGeometry(c,10,10),u.position.x=e,u.position.y=n,u.position.z=t,u.lookAt(globe.globeMesh.position),u.updateMatrix(),l=0,newConnectionQueue[R]["4xx"]/newConnectionQueue[R].total>=.25&&(l=2),newConnectionQueue[R]["5xx"]/newConnectionQueue[R].total>=.25&&newConnectionQueue[R]["5xx"]>newConnectionQueue[R]["4xx"]&&(l=1);for(var S=0;S<u.geometry.faces.length;S++)u.geometry.faces[S].materialIndex=l;d.merge(u.geometry,u.matrix),i.x<0?i.x-=globe.regionOffset/1.5:i.x+=globe.regionOffset/1.5,i.y<0?i.y-=globe.regionOffset/1.5:i.y+=globe.regionOffset/1.5,i.z<0?i.z-=globe.regionOffset/1.5:i.z+=globe.regionOffset/1.5;for(var G in newConnectionQueue[R].devices){C=!1,(a=globe.scene.getObjectByName(G)).geometry.computeBoundingBox();var b=a.geometry.boundingBox;(o=new THREE.Vector3).subVectors(b.max,b.min),o.multiplyScalar(.5),o.add(b.min),o.applyMatrix4(a.matrixWorld),o=new THREE.Vector3(o.x,o.y,o.z),newConnectionQueue[R].devices[G]["4xx"]/newConnectionQueue[R].devices[G].total>=.25&&(m=getArc(i,o,50,m),C=!0),newConnectionQueue[R].devices[G]["5xx"]/newConnectionQueue[R].devices[G].total>=.25&&newConnectionQueue[R].devices[G]["5xx"]>newConnectionQueue[R].devices[G]["4xx"]&&(h=getArc(i,o,50,h),C=!0),C||(p=getArc(i,o,50,p))}}var L=new THREE.Mesh(d,new THREE.MultiMaterial([g,y,f]));L.name="trafficPointsMesh",globe.scene.add(L);var A=new THREE.LineSegments(p,v);A.updateMatrix(),A.name="trafficLineSegments123",globe.scene.add(A);var E=new THREE.LineSegments(m,M);E.updateMatrix(),E.name="trafficLineSegments4xx",globe.scene.add(E);var I=new THREE.LineSegments(h,T);I.updateMatrix(),I.name="trafficLineSegments5xx",globe.scene.add(I),trafficPointCount=0,trafficConnectionCount=0,trafficCountHigh=0,newConnectionQueue={}}function getArc(e,n,t,a){var i=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3;i.subVectors(new THREE.Vector3,n),o.subVectors(e,n),i.cross(o),r.copy(i).normalize();var s=e.angleTo(n)/(t-1),l=e.clone();l.x>0?l.x-=globe.regionOffset/2:l.x+=globe.regionOffset/2,l.y>0?l.y-=globe.regionOffset/2:l.y+=globe.regionOffset/2,l.z>0?l.z-=globe.regionOffset/2:l.z+=globe.regionOffset/2,a.vertices.push(l);for(var c=1;c<t;c++)a.vertices.push(e.clone().applyAxisAngle(r,s*c));return a}function scaleBetween(e,n,t,a,i){return(t-n)*(e-a)/(i-a)+n}function showTrafficDetails(e){globe.scene.getObjectByName(e);var n=(90-parseInt(traffic[e].lat))*Math.PI/180,t=(180-parseInt(traffic[e].lon))*Math.PI/180,a=700/1.55*Math.sin(n)*Math.cos(t),i=700/1.55*Math.cos(n),o=700/1.55*Math.sin(n)*Math.sin(t);globe.setCameraPosition(a,i,o);var r="successText",s="";document.getElementById("trafficBlockedCount").innerHTML="",document.getElementById("trafficPorts").innerHTML="",document.getElementById("trafficMap").src=googleMapsBaseUrl+"&q="+traffic[e].lat+","+traffic[e].lon+"&zoom=6&maptype=satellite",void 0!=traffic[e].blockedCount&&traffic[e].blockedCount>0&&(r="alertText",s="(This IP has been blocked by other users!)",document.getElementById("trafficBlockedCount").innerHTML='<span class="'+r+'">Total Times Blocked: '+traffic[e].blockedCount+"</span>");for(var l in traffic[e])isNaN(l)||("22"==l?(r="severeWarnText",s="(Privledged Access Port 22 In Use)",document.getElementById("trafficPorts").innerHTML+="<div class='"+r+"'>Port "+l+" Count: "+traffic[e][l]+"</div>"):document.getElementById("trafficPorts").innerHTML+="<div>Port "+l+" Count: "+traffic[e][l]+"</div>");document.getElementById("trafficIp").innerHTML='<span class="'+r+'">'+e+" "+s+"</span>",document.getElementById("trafficCountry").innerHTML="Country: "+traffic[e].country,document.getElementById("trafficStateProv").innerHTML="State/Province: "+traffic[e].state,document.getElementById("trafficCity").innerHTML="City: "+traffic[e].city,document.getElementById("trafficCoordinates").innerHTML="Coordinates: "+traffic[e].lat+","+traffic[e].lon,document.getElementById("trafficLocalTime").innerHTML="Local Time: "+new Date,document.getElementById("detailsBodyMetrics").style.display="none",document.getElementById("detailsBodyTraffic").style.display="block",document.getElementById("paneMiddle").className+=" openPane"}function getApiGatewayLogs(e){function n(e,n,a){if(void 0==a)for(var i=0;i<e.items.length;i++)!function(e,n){var a={};a.id=e.id,a.name=e.name,a.description=e.description,a.region=n.config.region,a.type="apigateway",a.cloud="aws",a.stages=[],apiGatewayInventoryQueue[e.id]=a,apiGatewayStagesTarget++;var i={restApiId:e.id};n.getStages(i,function(n,a){n?t(null,null,n):t(a,e.id)})}(e.items[i],n);else console.log(a,a.stack);apiGatewayObjectActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function t(e,n,t){if(void 0==t)for(var i=0;i<e.item.length;i++)apiGatewayInventoryQueue[n].stages.push(e.item[i].stageName),isDeviceFilteredOut(n+"/"+e.item[i].stageName)||a(n,e.item[i].stageName);else console.log(t,t.stack);apiGatewayStagesActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function a(e,n,t){var a=apiGatewayCloudWatchLogsPrefix+e+"/"+n;apiGatewayConnectionTarget++;var r={logGroupName:a,endTime:o.getTime(),filterPattern:"Method - Starting - HTTP - path - query - body - Endpoint - Execution - response",interleaved:!0,limit:1e4,startTime:i.getTime()};cloudWatchLogs.filterLogEvents(r,function(e,n){e?console.log(e,e.stack):getConnections(a,n)})}if(!simulatorOn){ipGatewayLogRetrivalInProgress=!0,apiGatewayObjectTarget=APIGatewayObjects.length,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0;var i=new Date(e.getTime());i.setSeconds(i.getSeconds()-trafficWindowSeconds);for(var o=e,r={},s=0;s<APIGatewayObjects.length;s++)!function(e){e.getRestApis(r,function(t,a){t?n(null,null,t):n(a,e)})}(APIGatewayObjects[s])}}function getConnections(e,n){console.log("getting connections"),console.log(n);var t={};t.type="apiGateway",t.id=e.substring(apiGatewayCloudWatchLogsPrefix.length,e.length);for(var a=0;a<trafficQueue.length;a++)if(trafficQueue[a].id==t.id){t=trafficQueue[a];break}void 0==t.connections&&(t.connections=[],t.responses=[],trafficQueue.push(t));for(var i,o,r,s,l,c="",d="",u={},p=0;p<n.events.length;p++)if(c=n.events[p].message,d=c.substring(1,c.indexOf(")")),-1!=c.indexOf("Method request headers:")){u[d]={},u[d].id=d,u[d].start=n.events[p].timestamp;var m=testOnly[Math.round(23*Math.random())];console.log(m),u[d].ip=m,i=(i=c.substring(c.indexOf("X-Forwarded-Port=")+"X-Forwarded-Port=".length,c.length)).substring(0,i.indexOf(",")),u[d].port=i,o=(o=c.substring(c.indexOf("CloudFront-Is-Tablet-Viewer=")+"CloudFront-Is-Tablet-Viewer=".length,c.length)).substring(0,o.indexOf(",")),u[d].tablet=o,r=(r=c.substring(c.indexOf("CloudFront-Is-Mobile-Viewer=")+"CloudFront-Is-Mobile-Viewer=".length,c.length)).substring(0,r.indexOf(",")),u[d].mobile=r,s=(s=c.substring(c.indexOf("CloudFront-Is-SmartTV-Viewer=")+"CloudFront-Is-SmartTV-Viewer=".length,c.length)).substring(0,s.indexOf(",")),u[d].smartTV=s,l=(l=c.substring(c.indexOf("Accept-Language=")+"Accept-Language=".length,c.length)).substring(0,l.indexOf(",")),u[d].language=l,u[d].desktop=c.substring(c.indexOf("CloudFront-Is-Desktop-Viewer=")+"CloudFront-Is-Desktop-Viewer=".length,c.length-1),u[d].userAgent=c.substring(c.indexOf("User-Agent=")+"User-Agent=".length,c.indexOf(", X-Forwarded-Proto"))}else-1!=c.indexOf("Method completed with status:")&&(void 0==u[d]&&(u[d]={},u[d].id=d),u[d].responseCode=c.substring(c.indexOf("Method completed with status:")+"Method completed with status:".length+1,c.length),u[d].end=n.events[p].timestamp);var h=null;for(var g in u)if(void 0!=u[g].ip&&void 0!=u[g].responseCode&&void 0!=u[g].start&&void 0!=u[g].end){for(var y=0;y<t.connections.length;y++)if(t.connections[y].ip==u[g].ip){h=t.connections[y];break}if(null==h){(h={}).ip=m,h.details=[];var f=getDataFromIpMappingByIp(m);void 0==f?ipLookUpQueue.push(m):(h.lat=f.lat,h.lon=f.lon,h.country=f.country,h.stateRegion=f.stateRegion,h.city=f.city),t.connections.push(h)}void 0!=connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]&&(u[g].processed=!0),h.details.push(u[g]),connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]={}}apiGatewayConnectionActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function areApiGatewayLogsRetrieved(){return apiGatewayObjectTarget==apiGatewayObjectActual&&apiGatewayStagesTarget==apiGatewayStagesActual&&apiGatewayConnectionTarget==apiGatewayConnectionActual}function loadApiGatewayInventory(){var e=[];for(var n in apiGatewayInventoryQueue)for(var t=0;t<apiGatewayInventoryQueue[n].stages.length;t++)if(void 0==inventory.apigateway||void 0==inventory.apigateway[n+"/"+apiGatewayInventoryQueue[n].stages[t]]){var a=JSON.parse(JSON.stringify(apiGatewayInventoryQueue[n]));a.id=n+"/"+apiGatewayInventoryQueue[n].stages[t],e.push(a);var i={};i.len=100,i.color="#00adef",i.id=a.id,i.label=a.name+" ("+apiGatewayInventoryQueue[n].stages[t]+")",scatterCircleGraphInstanceArray.push(i)}apiGatewayInventoryQueue=[],e.length>0&&(globe.load("inventory",e),startScatterGraphAnimations())}function authenticate(e,n){$.ajax({url:baseUrl,type:"POST",contentType:"application/json",data:JSON.stringify({u:e,p:n}),dataType:"json",success:function(e){var n=JSON.parse(e);AWS.config.update({accessKeyId:n.userAccount.AccessKeyId,secretAccessKey:n.userAccount.SecretAccessKey,sessionToken:n.userAccount.SessionToken,region:loginRegion}),s3=new AWS.S3({apiVersion:"2006-03-01"}),cloudWatchLogs=new AWS.CloudWatchLogs({apiVersion:"2014-03-28"}),APIGatewayObjects=[new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ca-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-south-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"sa-east-1"})],cloudWatchObjects=[new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ca-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-south-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"sa-east-1"})],appAccountConf=n.appAccount,appAccountS3=new AWS.S3({apiVersion:"2006-03-01",credentials:new AWS.Credentials(appAccountConf.AccessKeyId,appAccountConf.SecretAccessKey,appAccountConf.SessionToken)});var t=new Date;if(t.setHours(t.getHours()-24),null==localStorage.getItem("dataRefreshDate")||forceIpKeyRefresh||new Date(localStorage.getItem("dataRefreshDate"))>t){var a={Bucket:"central-sky-ips",Key:"list.json"};appAccountS3.getObject(a,function(e,n){e?console.log(e,e.stack):cacheIpFileKeys(JSON.parse(n.Body))})}null==localStorage.getItem("blocksCached")&&localStorage.setItem("blocksCached","{}"),loginAndLoadInventory()},error:function(e){alert("error="+e)}})}function cacheIpFileKeys(e){console.log("loading keys");for(var n=0;n<e.length;n++)localStorage.setItem(e[n],e[n]);localStorage.setItem("dataRefreshDate",(new Date).getTime())}function lookUpIpsInQueue(){for(var e,n=0;n<ipLookUpQueue.length;n++)e=localStorage.getItem(ipLookUpQueue[n].substring(0,ipLookUpQueue[n].indexOf("."))),console.log("key="+e),void 0!=e&&void 0==ipKeysCached[e]&&void 0==ipKeyCallsQueued[e]&&(ipKeyCallsQueued[e]={},getIpFiles(e));drawUpdates(),lastTrafficRefreshTime=new Date((new Date).getTime()-timeOffset),ipGatewayLogRetrivalInProgress=!1}function addIpsFromDBtoMap(e,n,t){var a;if(null!=e){for(var i=e.split("\r\n"),o=[],r=0;r<i.length;r++)if((o=i[r].split(",")).length>2){a=o[0].replace(/"/gi,"")+"-"+o[1].replace(/"/gi,""),ipMappings[a]={},ipMappings[a].country=o[2].replace(/"/gi,""),ipMappings[a].stateRegion=o[3].replace(/"/gi,""),ipMappings[a].city=o[4].replace(/"/gi,""),ipMappings[a].lat=o[5].replace(/"/gi,""),ipMappings[a].lon=o[6].replace(/"/gi,"");var s=JSON.parse(localStorage.getItem("blocksCached"));null==s&&(s={}),s[a]={},localStorage.setItem(a,JSON.stringify(ipMappings[a])),localStorage.setItem("blocksCached",JSON.stringify(s))}ipKeysCached[n]={},ipKeyCallsQueued[n]=void 0}else console.log(t,t.stack);ipKeysReturned++;var l;if(ipKeysCalled==ipKeysReturned){for(var c=0;c<trafficQueue.length;c++){console.log(trafficQueue[c]);for(var d=0;d<trafficQueue[c].connections.length;d++)console.log(trafficQueue[c].connections),void 0==trafficQueue[c].connections[d].lat&&(l=getDataFromIpMappingByIp(trafficQueue[c].connections[d].ip),trafficQueue[c].connections[d].lat=l.lat,trafficQueue[c].connections[d].lon=l.lon,trafficQueue[c].connections[d].country=l.country,trafficQueue[c].connections[d].stateRegion=l.stateRegion,trafficQueue[c].connections[d].city=l.city)}console.log("Ip lookup queue emptied"),ipLookUpQueue=[]}}function getIpFiles(e){ipKeysCalled++;var n={Bucket:"central-sky-ips",Key:e+".txt"};appAccountS3.getObject(n,function(n,t){n?addIpsFromDBtoMap(null,null,n):addIpsFromDBtoMap(new TextDecoder("utf-8").decode(t.Body),e)})}function loginAndLoadInventory(){document.getElementById("mainOverlays").style.visibility="visible",document.getElementById("loginOverlay").style.display="none",globe.runLoginAnimation(),slidePanes("in"),setTimeout(function(){setTimeout(function(){setTimeout(function(){startClock(),getLogs(),drawUpdates()},500)},500)},1e3),getBilling()}function getAWSInvetory(){var e={FunctionName:"CentralSky_GetInventory",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),initialLoad&&(getAWSMetrics(),getAWSLoggedMetrics(),getAWSEC2Traffic(),initialLoad=!1),globe.load("inventory",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSInvetory()},getAWSInventoryInterval)})}function getAWSMetrics(){var e={FunctionName:"CentralSky_GetMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSMetrics()},getAWSMetricsInterval)})}function getAWSLoggedMetrics(){var e={FunctionName:"CentralSky_GetLoggedMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSLoggedMetrics()},getAWSLoggedMetricsInterval)})}function getAWSBilling(){var e={FunctionName:"CentralSky_GetBilling",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){globe.load("billing",[JSON.parse(n.Payload)]),setTimeout(function(){1==lambdaEnable&&getAWSBilling()},getAWSBillingInterval)})}function getAWSEC2Traffic(){var e={FunctionName:"CentralSky_GetConnections",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){for(console.log(JSON.parse(n.Payload)),t=0;t<trafficObjectIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficObjectIds[t]));trafficObjectIds=[];for(var t=0;t<trafficPointIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficPointIds[t]));trafficPointIds=[],globe.load("traffic",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSEC2Traffic()},getAWSEC2TrafficInterval)})}function blockIp(){var e=document.getElementById("trafficIp").innerHTML;e=e.substring(e.indexOf(">")+1,e.indexOf("</")).trim();var n={FunctionName:"CentralSky_BlockConnection",InvocationType:"RequestResponse",Payload:JSON.stringify({ip:e,token:AWS.config.credentials.sessionToken})};lambda.invoke(n,function(n,t){console.log(JSON.parse(t.Payload)),null==JSON.parse(t.Payload)&&console.log(e+" blocked!")})}function getBilling(){if(simulatorOn)globe.load("billing",["2.50"]);else{var e=new Date;e.setTime(e.getTime()-288e5);var n={MetricName:"EstimatedCharges",Namespace:"AWS/Billing",Dimensions:[{Name:"Currency",Value:"USD"}],Period:60,StartTime:e.toISOString(),EndTime:(new Date).toISOString(),Statistics:["Average"]};cloudWatchObjects[0].getMetricStatistics(n,function(e,n){e?console.log(e,e.stack):globe.load("billing",[n.Datapoints[0].Average])})}}function startClock(){var e=new Date;currentTime=new Date(e.getTime()-timeOffset),document.getElementById("clock").innerHTML=currentTime.toUTCString()+" <span style='font-size:14px;'>("+formatAMPM(currentTime)+")</span>",(currentTime.getTime()-lastTrafficQueueClearTime)/1e3>=trafficWindowSeconds&&(lastTrafficQueueClearTime=currentTime.getTime()),!ipGatewayLogRetrivalInProgress&&(currentTime.getTime()-lastTrafficRefreshTime)/1e3>=trafficVisibilitySeconds&&(simulatorOn?lookUpIpsInQueue():getLogs()),timeLineFirstRun||e.getMinutes()%5!=0?timeLineGraphUpdated&&(timeLineGraphUpdated=!1):timeLineGraphUpdated||(getTimeLineData(),timeLineGraphUpdated=!0),setTimeout(startClock,1e3)}function padTimeWithZeros(e){return e<10&&(e="0"+e),e}function drawCountryResponseGraphAnimations(){var e;for(var n in countryResponseUpdatedObjects){for(e=!1,a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.data={},t.windowTotal=0,t.visible=!1,countryResponseObjects.push(t)}}for(var a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].data={},n=countryResponseObjects[a].name,void 0==countryResponseUpdatedObjects[n]?(countryResponseObjects[a].data[123]=0,countryResponseObjects[a].data["4xx"]=0,countryResponseObjects[a].data["5xx"]=0,countryResponseObjects[a].uniqueIps=0):(countryResponseObjects[a].data[123]=countryResponseUpdatedObjects[n][123],countryResponseObjects[a].data["4xx"]=countryResponseUpdatedObjects[n]["4xx"],countryResponseObjects[a].data["5xx"]=countryResponseUpdatedObjects[n]["5xx"],countryResponseObjects[a].uniqueIps=Object.keys(countryResponseUpdatedObjects[n].ipList).length),countryResponseObjects[a].series.push(countryResponseObjects[a].data),countryResponseObjects[a].total=countryResponseObjects[a].data[123]+countryResponseObjects[a].data["4xx"]+countryResponseObjects[a].data["5xx"],countryResponseObjects[a].windowTotal+=countryResponseObjects[a].total,countryResponseObjects[a].series.length>countryDataFrames){var i=countryResponseObjects[a].series.shift();countryResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}countryResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<countryResponseObjects.length;r++)n=countryResponseObjects[r].name,o<countryGraphsMax?(countryResponseObjects[r].visible?updateCountryResponseTimelineGraph(n,countryResponseObjects[r].data):(setupCountryGraph(n,countryResponseObjects[r].series),countryResponseObjects[r].visible=!0),document.getElementById("country"+n+"Connections").innerHTML=numberWithCommas(countryResponseObjects[r].total),document.getElementById("country"+n+"IPs").innerHTML=numberWithCommas(countryResponseObjects[r].uniqueIps),updateCountryResponseTypeGraph("countryResponseTypeGraph"+n,countryResponseObjects[r].data),document.getElementById("country"+n+"ParentContainer").style.top=56*r+"px",o++):(null!=document.getElementById("country"+n+"ParentContainer")&&(document.getElementById("country"+n+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[n],countryResponseObjects[r].visible=!1)}function clearCountryGraphs(){for(var e,n=0;n<countryResponseObjects.length;n++)e=countryResponseObjects[n].name,null!=document.getElementById("country"+e+"ParentContainer")&&(document.getElementById("country"+e+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[e],countryResponseObjects[n].visible=!1,countryResponseObjects[n].series=[]}function setupCountryGraph(e,n){document.getElementById("countryGraphs").insertAdjacentHTML("beforeend",'<div id="country'+e+'ParentContainer" class="countryGraphContainersParents" onmousedown="zoomToCountry(\''+decodeCountryName(e)+'\')"><div class="countryGraphContainers"><span id="country'+e+'Name" class="countryName" >'+decodeCountryName(e)+'</span><span id="country'+e+'Connections" class="countryConnections" ></span><span id="country'+e+'IPs" class="countryIPs" ></span><div id="graph-'+e+'"></div><div id="countryResponseTypeGraph'+e+'" class="countryResponseTypeGraphs"></div></div></div>'),setupCountryCircleGraph("countryResponseTypeGraph"+e),setupCountryTimeLineGraph(e,n)}function setupCountryCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+countryResponseGraphWidth/2+","+countryResponseGraphHeight/2+")")}function setupCountryTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:countryDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),countryTimeLineGraphs[e]=t}function updateCountryResponseTimelineGraph(e,n){var t=countryTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateCountryResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=countryResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(countryResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return countryResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(countryResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return countryResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(countryResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return countryResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcInner(n(e))}}),s.exit().remove()}function updateDeviceCircleGraphs(e,n){return n.domain().map(function(n){return"value"==n?{label:n,value:e}:{label:n,value:1-e}})}function drawDeviceCircleGraphAnimations(e,n,t){valueMobile=Math.round(100*e),drawDeviceCircleGraphs(updateDeviceCircleGraphs(e,deviceCircleGraphColorMobile),deviceCircleGraphMobile,deviceCircleGraphColorMobile),document.getElementById("deviceCircleGraphMobilePercent").innerHTML=valueMobile+"%",valueTablet=Math.round(100*n),drawDeviceCircleGraphs(updateDeviceCircleGraphs(n,deviceCircleGraphColorTablet),deviceCircleGraphTablet,deviceCircleGraphColorTablet),document.getElementById("deviceCircleGraphTabletPercent").innerHTML=valueTablet+"%",valueMonitor=Math.round(100*t),drawDeviceCircleGraphs(updateDeviceCircleGraphs(t,deviceCircleGraphColorMonitor),deviceCircleGraphMonitor,deviceCircleGraphColorMonitor),document.getElementById("deviceCircleGraphMonitorPercent").innerHTML=valueMonitor+"%"}function drawDeviceCircleGraphs(e,n,t){var a=n.select(".slices").selectAll("path.slice").data(pie(e),key);a.enter().insert("path").style("fill",function(e){return t(e.data.label)}).attr("class","slice"),a.transition().duration(500).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return arcDevice(n(e))}}),a.exit().remove()}function drawCountryResponseGraphAnimations(){var e;for(var n in countryResponseUpdatedObjects){for(e=!1,a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.data={},t.windowTotal=0,t.visible=!1,countryResponseObjects.push(t)}}for(var a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].data={},n=countryResponseObjects[a].name,void 0==countryResponseUpdatedObjects[n]?(countryResponseObjects[a].data[123]=0,countryResponseObjects[a].data["4xx"]=0,countryResponseObjects[a].data["5xx"]=0,countryResponseObjects[a].uniqueIps=0):(countryResponseObjects[a].data[123]=countryResponseUpdatedObjects[n][123],countryResponseObjects[a].data["4xx"]=countryResponseUpdatedObjects[n]["4xx"],countryResponseObjects[a].data["5xx"]=countryResponseUpdatedObjects[n]["5xx"],countryResponseObjects[a].uniqueIps=Object.keys(countryResponseUpdatedObjects[n].ipList).length),countryResponseObjects[a].series.push(countryResponseObjects[a].data),countryResponseObjects[a].total=countryResponseObjects[a].data[123]+countryResponseObjects[a].data["4xx"]+countryResponseObjects[a].data["5xx"],countryResponseObjects[a].windowTotal+=countryResponseObjects[a].total,countryResponseObjects[a].series.length>countryDataFrames){var i=countryResponseObjects[a].series.shift();countryResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}countryResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<countryResponseObjects.length;r++)n=countryResponseObjects[r].name,o<countryGraphsMax?(countryResponseObjects[r].visible?updateCountryResponseTimelineGraph(n,countryResponseObjects[r].data):(setupCountryGraph(n,countryResponseObjects[r].series),countryResponseObjects[r].visible=!0),document.getElementById("country"+n+"Connections").innerHTML=numberWithCommas(countryResponseObjects[r].total),document.getElementById("country"+n+"IPs").innerHTML=numberWithCommas(countryResponseObjects[r].uniqueIps),updateCountryResponseTypeGraph("countryResponseTypeGraph"+n,countryResponseObjects[r].data),document.getElementById("country"+n+"ParentContainer").style.top=56*r+"px",o++):(null!=document.getElementById("country"+n+"ParentContainer")&&(document.getElementById("country"+n+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[n],countryResponseObjects[r].visible=!1)}function clearCountryGraphs(){for(var e,n=0;n<countryResponseObjects.length;n++)e=countryResponseObjects[n].name,null!=document.getElementById("country"+e+"ParentContainer")&&(document.getElementById("country"+e+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[e],countryResponseObjects[n].visible=!1,countryResponseObjects[n].series=[]}function setupCountryGraph(e,n){document.getElementById("countryGraphs").insertAdjacentHTML("beforeend",'<div id="country'+e+'ParentContainer" class="countryGraphContainersParents" onmousedown="zoomToCountry(\''+decodeCountryName(e)+'\')"><div class="countryGraphContainers"><span id="country'+e+'Name" class="countryName" >'+decodeCountryName(e)+'</span><span id="country'+e+'Connections" class="countryConnections" ></span><span id="country'+e+'IPs" class="countryIPs" ></span><div id="graph-'+e+'"></div><div id="countryResponseTypeGraph'+e+'" class="countryResponseTypeGraphs"></div></div></div>'),setupCountryCircleGraph("countryResponseTypeGraph"+e),setupCountryTimeLineGraph(e,n)}function setupCountryCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+countryResponseGraphWidth/2+","+countryResponseGraphHeight/2+")")}function setupCountryTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:countryDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),countryTimeLineGraphs[e]=t}function updateCountryResponseTimelineGraph(e,n){var t=countryTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateCountryResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=countryResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(countryResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return countryResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(countryResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return countryResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(countryResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return countryResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcInner(n(e))}}),s.exit().remove()}function updateDeviceCircleGraphs(e,n){return n.domain().map(function(n){return"value"==n?{label:n,value:e}:{label:n,value:1-e}})}function drawDeviceCircleGraphAnimations(e,n,t){valueMobile=Math.round(100*e),drawDeviceCircleGraphs(updateDeviceCircleGraphs(e,deviceCircleGraphColorMobile),deviceCircleGraphMobile,deviceCircleGraphColorMobile),document.getElementById("deviceCircleGraphMobilePercent").innerHTML=valueMobile+"%",valueTablet=Math.round(100*n),drawDeviceCircleGraphs(updateDeviceCircleGraphs(n,deviceCircleGraphColorTablet),deviceCircleGraphTablet,deviceCircleGraphColorTablet),document.getElementById("deviceCircleGraphTabletPercent").innerHTML=valueTablet+"%",valueMonitor=Math.round(100*t),drawDeviceCircleGraphs(updateDeviceCircleGraphs(t,deviceCircleGraphColorMonitor),deviceCircleGraphMonitor,deviceCircleGraphColorMonitor),document.getElementById("deviceCircleGraphMonitorPercent").innerHTML=valueMonitor+"%"}function drawDeviceCircleGraphs(e,n,t){var a=n.select(".slices").selectAll("path.slice").data(pie(e),key);a.enter().insert("path").style("fill",function(e){return t(e.data.label)}).attr("class","slice"),a.transition().duration(500).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return arcDevice(n(e))}}),a.exit().remove()}function getElbLogs(e,n,t,a,i){var o=new Date(i.getTime());o.setSeconds(o.getSeconds()-60);var r=i,s=t+"AWSLogs/"+n+"/elasticloadbalancing";s=(s=(s=s+"/"+a+"/"+o.getUTCFullYear())+"/"+("0"+(o.getUTCMonth()+1)).slice(-2))+"/"+("0"+o.getUTCDate()).slice(-2);var l={Bucket:e,Prefix:s};s3.listObjectsV2(l,function(n,t){n?findNewElbRecords(null,n):findNewElbRecords(t,null,o,r,e)})}function parseElbContents(e,n){for(var t=e.split("\r\n"),a=null,i=null,o=null,r=null,s=0;s<t.length;s++)if(o=null,r=null,t[s].substring(0,4)==n.getFullYear().toString()){for(var i=(a=convertLogToArray(t[s]))[1],l=0;l<trafficQueue.length;l++)if(trafficQueue[l].id==i){o=trafficQueue[l];break}null==o&&((o={}).type="elb",o.id=i,o.connections=[],trafficQueue.push(o));for(var c=a[2].split(":")[0],d=0;d<o.connections.length;d++)if(o.connections[d].ip==c){r=o.connections[d];break}null==r&&((r={}).ip=c,r.lat=30,r.lon=30,r.details=[],o.connections.push(r),void 0==ipMappings[c]&&(ipMappings[c]={},ipLookUpQueue.push(c))),(u={}).time=a[0],u.targetIp=a[3].split(":")[0],u.requestTime=a[4],u.backendTime=a[5],u.responseTime=a[6],u.responseCode=a[7],u.targetResponse=a[8],u.url=a[11],u.userAgent=a[12],u.port=u.url.split(" ")[1],p=getPosition(u.port,":",2),u.port=u.port.substring(p+1,u.port.indexOf("/",p)),r.details.push(u)}else{if("http"!=t[s].substring(0,4)&&"h2"!=t[s].substring(0,2)&&"ws"!=t[s].substring(0,2))break;for(var i=(a=convertLogToArray(t[s]))[2],l=0;l<trafficQueue.length;l++)if(trafficQueue[l].id==i){o=trafficQueue[l];break}null==o&&((o={}).type="elb",o.id=i,o.connections=[],trafficQueue.push(o));for(var c=a[3].split(":")[0],d=0;d<o.connections.length;d++)if(o.connections[d].ip==c){r=o.connections[d];break}null==r&&((r={}).ip=c,r.lat=30,r.lon=30,r.details=[],o.connections.push(r),void 0==ipMappings[c]&&(ipMappings[c]={},ipLookUpQueue.push(c)));var u={};u.time=a[1],u.targetIp=a[4].split(":")[0],u.requestTime=a[5],u.backendTime=a[6],u.responseTime=a[7],u.responseCode=a[8],u.targetResponse=a[9],u.url=a[12],u.userAgent=a[13],u.port=u.url.split(" ")[1];var p=getPosition(u.port,":",2);u.port=u.port.substring(p+1,u.port.indexOf("/",p)),r.details.push(u)}}function convertLogToArray(e){var n=/[^\s"]+|"([^"]*)"/gi,t=e,a=[];do{var i=n.exec(t);null!=i&&a.push(i[1]?i[1]:i[0])}while(null!=i);return a}function getPosition(e,n,t){return e.split(n,t).join(n).length}function getElbLogEvents(e,n,t,a){var i="";void 0==t?(i=n?new TextDecoder("utf-8").decode(new Zlib.Gunzip(e.Body).decompress()):e.Body.toString("utf8"),parseElbContents(i,a)):console.log(t,t.stack)}function findNewElbRecords(e,n,t,a,i){if(void 0==n)for(var o=!1,r=t.getUTCFullYear()+("0"+(t.getUTCMonth()+1)).slice(-2)+("0"+t.getUTCDate()).slice(-2),s="",l=0,c=null,d=0;d<e.Contents.length;d++)e.Contents[d].Size>0&&(o=!1,l=e.Contents[d].Key.indexOf(r+"T"),s=e.Contents[d].Key.substring(l,e.Contents[d].Key.indexOf("Z",l)),(c=new Date(t.getUTCFullYear()+"-"+("0"+(t.getUTCMonth()+1)).slice(-2)+"-"+("0"+t.getUTCDate()).slice(-2)+"T"+s.substring(9,11)+":"+s.substring(11,13)+":00Z")).getTime()>t.getTime()&&c.getTime()<a.getTime()&&(".gz"==e.Contents[d].Key.substring(e.Contents[d].Key.length-3,e.Contents[d].Key.length)&&(o=!0),function(e,n,a){var i={Bucket:a,Key:e};s3.getObject(i,function(e,a){e?getElbLogEvents(null,null,e):getElbLogEvents(a,n,null,t)})}(e.Contents[d].Key,o,i)));else console.log(n,n.stack)}function drawCountryResponseGraphAnimations(){var e;for(var n in countryResponseUpdatedObjects){for(e=!1,a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.data={},t.windowTotal=0,t.visible=!1,countryResponseObjects.push(t)}}for(var a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].data={},n=countryResponseObjects[a].name,void 0==countryResponseUpdatedObjects[n]?(countryResponseObjects[a].data[123]=0,countryResponseObjects[a].data["4xx"]=0,countryResponseObjects[a].data["5xx"]=0,countryResponseObjects[a].uniqueIps=0):(countryResponseObjects[a].data[123]=countryResponseUpdatedObjects[n][123],countryResponseObjects[a].data["4xx"]=countryResponseUpdatedObjects[n]["4xx"],countryResponseObjects[a].data["5xx"]=countryResponseUpdatedObjects[n]["5xx"],countryResponseObjects[a].uniqueIps=Object.keys(countryResponseUpdatedObjects[n].ipList).length),countryResponseObjects[a].series.push(countryResponseObjects[a].data),countryResponseObjects[a].total=countryResponseObjects[a].data[123]+countryResponseObjects[a].data["4xx"]+countryResponseObjects[a].data["5xx"],countryResponseObjects[a].windowTotal+=countryResponseObjects[a].total,countryResponseObjects[a].series.length>countryDataFrames){var i=countryResponseObjects[a].series.shift();countryResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}countryResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<countryResponseObjects.length;r++)n=countryResponseObjects[r].name,o<countryGraphsMax?(countryResponseObjects[r].visible?updateCountryResponseTimelineGraph(n,countryResponseObjects[r].data):(setupCountryGraph(n,countryResponseObjects[r].series),countryResponseObjects[r].visible=!0),document.getElementById("country"+n+"Connections").innerHTML=numberWithCommas(countryResponseObjects[r].total),document.getElementById("country"+n+"IPs").innerHTML=numberWithCommas(countryResponseObjects[r].uniqueIps),updateCountryResponseTypeGraph("countryResponseTypeGraph"+n,countryResponseObjects[r].data),document.getElementById("country"+n+"ParentContainer").style.top=56*r+"px",o++):(null!=document.getElementById("country"+n+"ParentContainer")&&(document.getElementById("country"+n+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[n],countryResponseObjects[r].visible=!1)}function clearCountryGraphs(){for(var e,n=0;n<countryResponseObjects.length;n++)e=countryResponseObjects[n].name,null!=document.getElementById("country"+e+"ParentContainer")&&(document.getElementById("country"+e+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[e],countryResponseObjects[n].visible=!1,countryResponseObjects[n].series=[]}function setupCountryGraph(e,n){document.getElementById("countryGraphs").insertAdjacentHTML("beforeend",'<div id="country'+e+'ParentContainer" class="countryGraphContainersParents" onmousedown="zoomToCountry(\''+decodeCountryName(e)+'\')"><div class="countryGraphContainers"><span id="country'+e+'Name" class="countryName" >'+decodeCountryName(e)+'</span><span id="country'+e+'Connections" class="countryConnections" ></span><span id="country'+e+'IPs" class="countryIPs" ></span><div id="graph-'+e+'"></div><div id="countryResponseTypeGraph'+e+'" class="countryResponseTypeGraphs"></div></div></div>'),setupCountryCircleGraph("countryResponseTypeGraph"+e),setupCountryTimeLineGraph(e,n)}function setupCountryCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+countryResponseGraphWidth/2+","+countryResponseGraphHeight/2+")")}function setupCountryTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:countryDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),countryTimeLineGraphs[e]=t}function updateCountryResponseTimelineGraph(e,n){var t=countryTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateCountryResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=countryResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(countryResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return countryResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(countryResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return countryResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(countryResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return countryResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcInner(n(e))}}),s.exit().remove()}function updateDeviceCircleGraphs(e,n){return n.domain().map(function(n){return"value"==n?{label:n,value:e}:{label:n,value:1-e}})}function drawDeviceCircleGraphAnimations(e,n,t){valueMobile=Math.round(100*e),drawDeviceCircleGraphs(updateDeviceCircleGraphs(e,deviceCircleGraphColorMobile),deviceCircleGraphMobile,deviceCircleGraphColorMobile),document.getElementById("deviceCircleGraphMobilePercent").innerHTML=valueMobile+"%",valueTablet=Math.round(100*n),drawDeviceCircleGraphs(updateDeviceCircleGraphs(n,deviceCircleGraphColorTablet),deviceCircleGraphTablet,deviceCircleGraphColorTablet),document.getElementById("deviceCircleGraphTabletPercent").innerHTML=valueTablet+"%",valueMonitor=Math.round(100*t),drawDeviceCircleGraphs(updateDeviceCircleGraphs(t,deviceCircleGraphColorMonitor),deviceCircleGraphMonitor,deviceCircleGraphColorMonitor),document.getElementById("deviceCircleGraphMonitorPercent").innerHTML=valueMonitor+"%"}function drawDeviceCircleGraphs(e,n,t){var a=n.select(".slices").selectAll("path.slice").data(pie(e),key);a.enter().insert("path").style("fill",function(e){return t(e.data.label)}).attr("class","slice"),a.transition().duration(500).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return arcDevice(n(e))}}),a.exit().remove()}function drawEndPointResponseGraphAnimations(){var e;for(var n in endPointResponseUpdatedObjects){for(e=!1,a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.seriesResponse=[],t.data={},t.region=endPointResponseUpdatedObjects[n].region,t.response={},t.windowTotal=0,t.visible=!1,endPointResponseObjects.push(t)}}for(var a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].data={},n=endPointResponseObjects[a].name,void 0==endPointResponseUpdatedObjects[n]?(endPointResponseObjects[a].data[123]=0,endPointResponseObjects[a].data["4xx"]=0,endPointResponseObjects[a].data["5xx"]=0,endPointResponseObjects[a].response.value=0,endPointResponseObjects[a].response.area=0,endPointResponseObjects[a].uniqueIps=0):(endPointResponseObjects[a].data[123]=endPointResponseUpdatedObjects[n][123],endPointResponseObjects[a].data["4xx"]=endPointResponseUpdatedObjects[n]["4xx"],endPointResponseObjects[a].data["5xx"]=endPointResponseUpdatedObjects[n]["5xx"],endPointResponseObjects[a].response.value=endPointResponseUpdatedObjects[n].response/endPointResponseUpdatedObjects[n].responseCount,endPointResponseObjects[a].response.area=endPointResponseObjects[a].response.value,endPointResponseObjects[a].uniqueIps=Object.keys(endPointResponseUpdatedObjects[n].ipList).length),endPointResponseObjects[a].series.push(endPointResponseObjects[a].data),endPointResponseObjects[a].seriesResponse.push(endPointResponseObjects[a].response),endPointResponseObjects[a].total=endPointResponseObjects[a].data[123]+endPointResponseObjects[a].data["4xx"]+endPointResponseObjects[a].data["5xx"],endPointResponseObjects[a].windowTotal+=endPointResponseObjects[a].total,endPointResponseObjects[a].series.length>endPointDataFrames){var i=endPointResponseObjects[a].series.shift();endPointResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}endPointResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<endPointResponseObjects.length;r++)n=endPointResponseObjects[r].name,o<endPointGraphsMax?(endPointResponseObjects[r].visible?(updateEndPointResponseTimelineGraph(n,endPointResponseObjects[r].data),updateEndPointResponseTimelineResponeTimeGraph(n,endPointResponseObjects[r].response)):(setupEndPointGraph(n,endPointResponseObjects[r].region,endPointResponseObjects[r].series,endPointResponseObjects[r].seriesResponse),endPointResponseObjects[r].visible=!0),document.getElementById("endPoint"+n+"Connections").innerHTML=numberWithCommas(endPointResponseObjects[r].total),document.getElementById("endPoint"+n+"IPs").innerHTML=numberWithCommas(endPointResponseObjects[r].uniqueIps),document.getElementById("endPoint"+n+"ResonseTimes").innerHTML=(Math.round(endPointResponseObjects[r].response.value)/1e3).toFixed(3)+"s",updateEndPointResponseTypeGraph("endPointResponseTypeGraph"+n,endPointResponseObjects[r].data),document.getElementById("endPoint"+n+"ParentContainer").style.top=70*r+"px",o++):(null!=document.getElementById("endPoint"+n+"ParentContainer")&&(document.getElementById("endPoint"+n+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[n],delete endPointTimeLineResponseTimeGraphs[n],endPointResponseObjects[r].visible=!1)}function clearEndPointResponseGraphs(){for(var e,n=0;n<endPointResponseObjects.length;n++)e=endPointResponseObjects[n].name,null!=document.getElementById("endPoint"+e+"ParentContainer")&&(document.getElementById("endPoint"+e+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[e],delete endPointTimeLineResponseTimeGraphs[e],endPointResponseObjects[n].visible=!1,endPointResponseObjects[n].series=[],endPointResponseObjects[n].seriesResponse=[]}function setupEndPointGraph(e,n,t,a){document.getElementById("endPointGraphs").insertAdjacentHTML("beforeend",'<div id="endPoint'+e+'ParentContainer" class="endPointGraphContainersParents" onmousedown="zoomToRegion(\''+n+'\')"><div class="endPointGraphContainers"><span id="endPoint'+e+'Name" class="endPointName" >'+decodeEndPointName(e)+'</span><span id="endPoint'+e+'Connections" class="endPointConnections" ></span><span id="endPoint'+e+'IPs" class="endPointIPs" ></span><div id="graph-'+e+'"></div><div id="endPointResponseTypeGraph'+e+'" class="endPointResponseTypeGraphs"></div><div id="graph-responseTime-'+e+'" class="endPointResponseTimeGraphs"></div><span id="endPoint'+e+'ResonseTimes" class="endPointResponseTimes" ></span></div></div>'),setupEndPointCircleGraph("endPointResponseTypeGraph"+e),setupEndPointTimeLineGraph(e,t),setupEndPointTimeLineResponseTimeGraph(e,a)}function setupEndPointCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+endPointResponseGraphWidth/2+","+endPointResponseGraphHeight/2+")")}function setupEndPointTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineGraphs[e]=t}function setupEndPointTimeLineResponseTimeGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-responseTime-"+e),width:345,height:15,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:"#00adef",renderer:"line",strokeWidth:.75},{name:"area",color:"rgba(0,133,199,0.3)",renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineResponseTimeGraphs[e]=t}function updateEndPointResponseTimelineGraph(e,n){var t=endPointTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTimelineResponeTimeGraph(e,n){var t=endPointTimeLineResponseTimeGraphs[e],a={};a.value=n.value,a.area=n.area,t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=endPointResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(endPointResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(endPointResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(endPointResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcInner(n(e))}}),s.exit().remove()}function createNewEndPointGraph(e,n){document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<span style="color:#00ADEF;float:left;">'+e+'</span><span id="graph-total-'+e+'" style="color:#ffffff;float:right;">0</span>'),document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<div id="graph-'+e+'" style="margin-bottom:5px;"></div>');var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:400,height:60,min:100,interpolation:"basis",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:color4xx},{name:"5xx",color:color5xx},{name:"123",color:color123}],void 0,{timeInterval:250,maxDataPoints:150,timeBase:(new Date).getTime()/1e3})}),a=new Rickshaw.Graph.Smoother({graph:t,element:document.querySelector("#smoother")});new Rickshaw.Graph.Axis.Y({graph:t,pixelsPerTick:30,tickFormat:function(e){return e/1e3+"s"},ticksTreatment:"inverse"}).render(),"steam"==n?(t.setRenderer("stack"),t.offset="wiggle",a.setScale(40)):"line"==n?(t.setRenderer("line"),t.offset="zero",a.setScale(30)):"scatter"==n&&(t.setRenderer("scatterplot",{dotSize:1.2}),t.offset="value"),t.update(),endPointHealthGraphs.push(t);var i={};i["4xx"]=0,i["5xx"]=0,i[123]=0,endPoints[e]=i,graphTotals[e]=0}function startEndPointGraphAnimations(){setInterval(function(){for(var e in endPoints){var n=Math.random();n<.1?(endPoints[e]["4xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["4xx"]=0,n<.3&&n>.2?(endPoints[e]["5xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["5xx"]=0,n>.5?(endPoints[e][123]=Math.floor(1200*Math.random()+200),graphTotals[e]++):endPoints[e][123]=0}for(var t,a=0;a<endPointHealthGraphs.length;a++)t=(t=endPointHealthGraphs[a].element.id).substring("graph-".length,t.length),endPointHealthGraphs[a].series.addData(endPoints[t]),endPointHealthGraphs[a].update(),document.getElementById("graph-total-"+t).innerHTML=numberWithCommas(graphTotals[t])},1e3)}function translateElb(e){var n={};return n.id=e.LoadBalancerName,n.name=e.LoadBalancerName,n.status="pending",void 0!=e.Instances&&e.Instances.length>0&&(n.status="running"),n.AvailabilityZone=e.AvailabilityZones[0],void 0!=n.AvailabilityZone&&(n.Region=n.AvailabilityZone.substring(0,n.AvailabilityZone.length-1)),n.instances=e.Instances,n.tags=e.Tags,n.health=e.health,n.type="elb",n}function translateApiGateway(e){var n={};return n.id=e.id,n.name=e.name,n.Region=e.region,n.Description=e.description,n.stages=e.stages,n.type="apigateway",n.status="running",n}function createNewLineGraph(e,n,t,a,i,o,r){var s=208,l=60;"third"==a&&(s=140,l=50),document.getElementById(n).insertAdjacentHTML("beforeend",'<div id="graph-'+e+'"><span style="color:'+i+'" class="'+n+'Titles">'+e+'</span><span id="graph-total-'+e+'" class="'+n+'Totals">0</span></div>');var c=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:s,height:l,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:i,strokeWidth:r,renderer:"line"},{name:"area",color:o,renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:30,timeBase:(new Date).getTime()/1e3})});c.offset="zero",c.update(),lineGraphs.push(c)}function drawLineGraphAnimations(e,n,t,a,i){for(var o,r,s=t+a+i,l=0;l<lineGraphs.length;l++)r={},"Connections"==(o=(o=lineGraphs[l].element.id).substring("graph-".length,o.length))?(r.value=e,r.area=e):"Unique IPs"==o?(r.value=n,r.area=n):"Success"==o?(r.value=t,r.area=t):"Rejected"==o?(r.value=a,r.area=a):"Error"==o&&(r.value=i,r.area=i),lineGraphs[l].series.addData(r),lineGraphs[l].update(),document.getElementById("graph-total-"+o).innerHTML="Success"==o||"Rejected"==o||"Error"==o?0==s?"0%":Math.round(r.value/s*100)+"%":numberWithCommas(r.value)}function clearLineGraphs(){for(var e,n,t=0;t<150;t++)for(var a=0;a<lineGraphs.length;a++)n={},e=(e=lineGraphs[a].element.id).substring("graph-".length,e.length),n.value=0,lineGraphs[a].series.addData(n),lineGraphs[a].update();for(var i=0;i<lineGraphs.length;i++)e=(e=lineGraphs[i].element.id).substring("graph-".length,e.length),document.getElementById("graph-total-"+e).innerHTML=0,lineGraphs[i].update()}function resetLargeMapZoom(){mapLargeWorld.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)"),mapLargeUSA.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)")}function drawMap(e){var n={},t=e.map(function(e){return e[1]}),a=Math.min.apply(null,t),i=Math.max.apply(null,t);a==i&&(a=0);var o=d3.scale.linear().domain([a,i]).range(["#00212d","#00adef"]);e.forEach(function(e){var t=e[0],a=e[1];n[t]={numberOfThings:a,fillColor:o(a)}}),map.updateChoropleth(n,{reset:!0})}function drawMapLarge(e,n){var t;if(e.forEach(function(e){var t=e[0],a=e[1];"world"==n?(void 0==mapDataSet[t]?mapDataSet[t]={numberOfThings:a,fillColor:null}:mapDataSet[t].numberOfThings+=a,(0==mapMinValue||mapMinValue>mapDataSet[t].numberOfThings)&&(mapMinValue=mapDataSet[t].numberOfThings),mapDataSet[t].numberOfThings>mapMaxValue&&(mapMaxValue=mapDataSet[t].numberOfThings)):(void 0==mapDataSetUSA[t]?mapDataSetUSA[t]={numberOfThings:a,fillColor:null}:mapDataSetUSA[t].numberOfThings+=a,(0==mapMinValueUSA||mapMinValueUSA>mapDataSetUSA[t].numberOfThings)&&(mapMinValueUSA=mapDataSetUSA[t].numberOfThings),mapDataSetUSA[t].numberOfThings>mapMaxValueUSA&&(mapMaxValueUSA=mapDataSetUSA[t].numberOfThings))}),"world"==n){t=d3.scale.linear().domain([mapMinValue,mapMaxValue]).range(["#00212d","#00adef"]);for(var a in mapDataSet)mapDataSet[a].fillColor=t(mapDataSet[a].numberOfThings);mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0})}else{t=d3.scale.linear().domain([mapMinValueUSA,mapMaxValueUSA]).range(["#00212d","#00adef"]);for(var a in mapDataSetUSA)mapDataSetUSA[a].fillColor=t(mapDataSetUSA[a].numberOfThings);mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}}function clearMaps(){mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0}),mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}function drawResponseCodeGraph(e,n,t,a){function i(e){return e.startAngle+(e.endAngle-e.startAngle)/2}var o=n+t+a;0==o?(document.getElementById("responseCodeValue123").innerHTML="0%",document.getElementById("responseCodeValue4xx").innerHTML="0%",document.getElementById("responseCodeValue5xx").innerHTML="0%",document.getElementById("averageResponseTimeValue").innerHTML=(0).toFixed(3)+"s"):(document.getElementById("responseCodeValue123").innerHTML=Math.round(n/o*100)+"%",document.getElementById("responseCodeValue4xx").innerHTML=Math.round(t/o*100)+"%",document.getElementById("responseCodeValue5xx").innerHTML=Math.round(a/o*100)+"%",document.getElementById("averageResponseTimeValue").innerHTML=(Math.round(e)/1e3).toFixed(3)+"s");var r=responseCodeGraphColor.domain().map(function(e){return o>0?"Success"==e?{label:e,value:n/o}:"Rejected"==e?{label:e,value:t/o}:"Error"==e?{label:e,value:a/o}:void 0:{label:e,value:0}}),s=responseCodeGraphSvg.select(".slices").selectAll("path.slice").data(pie(r),key);s.enter().insert("path").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("class","slice"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return responseCodeGraphArc(n(e))}}),s.exit().remove();var l=responseCodeGraphSvg.select(".labels").selectAll("text").data(pie(r),key);l.enter().append("text").attr("dy",".35em").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("id",function(e){return"responseCodeGraphText-"+e.data.label}).text(function(e){return e.data.label}),l.transition().duration(1e3).attrTween("transform",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=responseCodeGraphRadius*(i(t)<Math.PI?1:-1),"translate("+a+")"}}).styleTween("text-anchor",function(e){0==e.data.value?document.getElementById("responseCodeGraphText-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphText-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return i(n(e))<Math.PI?"start":"end"}}),l.exit().remove();var c=responseCodeGraphSvg.select(".lines").selectAll("polyline").data(pie(r),key);c.enter().append("polyline").attr("id",function(e){return"responseCodeGraphLine-"+e.data.label}),c.transition().duration(1e3).attrTween("points",function(e){0==e.data.value?document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=.95*responseCodeGraphRadius*(i(t)<Math.PI?1:-1),[responseCodeGraphArc.centroid(t),responseCodeGraphOuterArc.centroid(t),a]}}),c.exit().remove()}function startScatterGraphAnimations(){for(var e=document.getElementsByClassName("scatterCircleCenter"),n=0;n<e.length;n++)e[n].style.display="block";deviceScatterGraph.layout(scatterCircleGraphInstanceArray,{innerRadius:scatterCircleGraphWidth/2-40,outerRadius:scatterCircleGraphWidth/2-38,ticks:{display:!1},labels:{position:"center",display:!0,size:14,color:"#ffffff",radialOffset:15}}).render()}function pushScatterCircleGraphData(e,n,t,a){deviceScatterData.push({block_id:e,position:98*Math.random()+2,value:n/1e3,code:t}),deviceScatterData.length>2e3&&deviceScatterData.shift()}function drawScatterCircleGraph(){drawCircos(deviceScatterData)}function clearScatterCircleGraph(){drawCircos(deviceScatterData=[],!0)}function drawCircos(e,n){(0!=e.length||void 0!=n&&n)&&deviceScatterGraph.scatter("circleScatterGraph",e,{innerRadius:.2,outerRadius:.98,logScale:!1,fill:!0,size:.75,strokeColor:function(e,n){return 4==e.code?"#ff7b00":5==e.code?"#ff0000":"#ffffff"},axes:[{color:"#00adef",position:.1,opacity:.5,thickness:.5},{color:"#00adef",position:.15,opacity:.5,thickness:.5},{color:"#00adef",position:.2,opacity:.5,thickness:.5},{color:"#00adef",position:.25,opacity:.5,thickness:.5},{color:"#00adef",position:.3,opacity:.5,thickness:.5},{color:"#00adef",position:.35,opacity:.5,thickness:.5},{color:"#00adef",position:.4,opacity:.5,thickness:.5},{color:"#00adef",position:.45,opacity:.5,thickness:.5},{color:"#00adef",position:.5,opacity:.5,thickness:.5},{color:"#00adef",position:.55,opacity:.5,thickness:.5},{color:"#00adef",position:.6,opacity:.5,thickness:.5},{color:"#00adef",position:.65,opacity:.5,thickness:.5},{color:"#00adef",position:.7,opacity:.5,thickness:.5},{color:"#00adef",position:.75,opacity:.5,thickness:.5},{color:"#00adef",position:.8,opacity:.5,thickness:.5},{color:"#00adef",position:.85,opacity:.5,thickness:.5},{color:"#00adef",position:.9,opacity:.5,thickness:.5},{color:"#00adef",position:.95,opacity:.5,thickness:.5},{color:"#00adef",position:1,opacity:.5,thickness:1},{color:"#1F4B64",position:1.2,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.25,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.3,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.35,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.4,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.45,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.5,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.55,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.6,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.65,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.7,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.75,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.8,opacity:.7,thickness:.5},{color:"#182B38",position:2,opacity:1,thickness:.5},{color:"#182B38",position:3,opacity:1,thickness:.5},{color:"#182B38",position:4,opacity:1,thickness:.5},{color:"#182B38",position:5,opacity:1,thickness:.5},{color:"#182B38",position:6,opacity:1,thickness:.5},{color:"#182B38",position:7,opacity:1,thickness:.5},{color:"#182B38",position:8,opacity:1,thickness:.5},{color:"#182B38",position:9,opacity:1,thickness:.5},{color:"#182B38",position:10,opacity:1,thickness:.5},{color:"#182B38",position:30,opacity:1,thickness:.5},{color:"#182B38",position:60,opacity:1,thickness:.5},{color:"#182B38",position:300,opacity:1,thickness:.5}]}).render()}function drawTimeLineGraph(){if(4==timeLineCallBackCount){if(timeLineFirstRun){timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes();for(var e=0;e<287;e++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]-(timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]+timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]),(o={})["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"],o["4xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"],o["5xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o),55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5}else{var n=new Date;n.setMinutes(n.getMinutes()-5);var t=n.getDate(),a=n.getHours(),i=n.getMinutes();timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]-(timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"]+timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"]);var o={};o["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"],o["4xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"],o["5xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+t+" h:"+a+" m:"+i].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o)}timeLineGraph.update(),timeLineGraphLatency.update(),timeLineFirstRun=!1,timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0}}function getInitialTimeLineData(){getTimeLineDataForMetric("Count","Sum","123xx",timeLineBase.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",timeLineBase.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",timeLineBase.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",timeLineBase.toISOString())}function getTimeLineData(){var e=new Date;e.setMinutes(e.getMinutes()-5),e.setSeconds(0),e.setMilliseconds(0),timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]={},timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()].Latency=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["4xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["5xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["123xx"]=0,getTimeLineDataForMetric("Count","Sum","123xx",e.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",e.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",e.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",e.toISOString())}function getTimeLineDataForMetric(e,n,t,a){if(!simulatorOn)for(var i in inventory.apigateway){var o={};o.Name="ApiName",o.Value=inventory.apigateway[i].name;for(var r={MetricName:e,Namespace:"AWS/ApiGateway",Dimensions:[o],Period:300,StartTime:a,EndTime:(new Date).toISOString(),Statistics:[n]},s=0;s<cloudWatchObjects.length;s++)"123xx"==t?timeLineInitialDataCountCalls++:"4xx"==t?timeLineInitialData4xxCalls++:"5xx"==t?timeLineInitialData5xxCalls++:"Latency"==t&&timeLineInitialDataLatencyCalls++,function(e,n,t){cloudWatchObjects[s].getMetricStatistics(r,function(e,a){var i,o,r;if("123xx"==t?(i=++timeLineInitialDataCountResponses,o=timeLineInitialDataCountCalls,r=timeLineInitialDataCount):"4xx"==t?(i=++timeLineInitialData4xxResponses,o=timeLineInitialData4xxCalls,r=timeLineInitialData4xx):"5xx"==t?(i=++timeLineInitialData5xxResponses,o=timeLineInitialData5xxCalls,r=timeLineInitialData5xx):"Latency"==t&&(i=++timeLineInitialDataLatencyResponses,o=timeLineInitialDataLatencyCalls,r=timeLineInitialDataLatency),e)console.log(e,e.stack);else if(a.Datapoints.length>0&&("123xx"==t?r=timeLineInitialDataCount=timeLineInitialDataCount.concat(a.Datapoints):"4xx"==t?r=timeLineInitialData4xx=timeLineInitialData4xx.concat(a.Datapoints):"5xx"==t?r=timeLineInitialData5xx=timeLineInitialData5xx.concat(a.Datapoints):"Latency"==t&&(r=timeLineInitialDataLatency=timeLineInitialDataLatency.concat(a.Datapoints))),i==o){for(var s,l=0;l<r.length;l++)void 0!=(s=r[l].Timestamp)&&(s.setMinutes(s.getMinutes()-(s.getMinutes()-5*Math.ceil(s.getMinutes()/5))),void 0!=timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()]&&(timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()][t]+=r[l][n]));timeLineCallBackCount++,drawTimeLineGraph()}})}(0,n,t)}}function convertDateToUTC(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}function addTrafficEvent(e,n){var t=round(n.lat,.5),a=round(n.lon,.5);void 0==newConnectionQueue[t+"|"+a]&&(newConnectionQueue[t+"|"+a]={},newConnectionQueue[t+"|"+a].lat=n.lat,newConnectionQueue[t+"|"+a].lon=n.lon,newConnectionQueue[t+"|"+a]["4xx"]=0,newConnectionQueue[t+"|"+a]["5xx"]=0,newConnectionQueue[t+"|"+a][123]=0,newConnectionQueue[t+"|"+a].total=0,newConnectionQueue[t+"|"+a].devices={}),void 0==newConnectionQueue[t+"|"+a].devices[e]&&(newConnectionQueue[t+"|"+a].devices[e]={},newConnectionQueue[t+"|"+a].devices[e]["4xx"]=0,newConnectionQueue[t+"|"+a].devices[e]["5xx"]=0,newConnectionQueue[t+"|"+a].devices[e][123]=0,newConnectionQueue[t+"|"+a].devices[e].total=0);for(var i=0;i<n.details.length;i++)newConnectionQueue[t+"|"+a].total++,newConnectionQueue[t+"|"+a].devices[e].total++,"4"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["4xx"]++,newConnectionQueue[t+"|"+a].devices[e]["4xx"]++):"5"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["5xx"]++,newConnectionQueue[t+"|"+a].devices[e]["5xx"]++):(newConnectionQueue[t+"|"+a][123]++,newConnectionQueue[t+"|"+a].devices[e][123]++);newConnectionQueue[t+"|"+a].total>trafficCountHigh&&(trafficCountHigh=newConnectionQueue[t+"|"+a].total),trafficPointCount++,trafficConnectionCount+=n.details.length}function showTraffic(){var e,n,t,a,i,o,r,s,l,c,d=new THREE.Geometry,u=new THREE.Mesh,p=new THREE.Geometry,m=new THREE.Geometry,h=new THREE.Geometry,g=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.9}),y=new THREE.MeshLambertMaterial({color:"rgb(255, 20, 0)",transparent:!0,opacity:.9}),f=new THREE.MeshLambertMaterial({color:"rgb(255, 60, 0)",transparent:!0,opacity:.9}),v=new THREE.LineDashedMaterial({color:16777215,scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),M=new THREE.LineDashedMaterial({color:"rgb(255, 100, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),T=new THREE.LineDashedMaterial({color:"rgb(255, 30, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7});void 0!=globe.scene.getObjectByName("trafficPointsMesh")&&globe.scene.remove(globe.scene.getObjectByName("trafficPointsMesh")),void 0!=globe.scene.getObjectByName("trafficLineSegments123")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments123")),void 0!=globe.scene.getObjectByName("trafficLineSegments4xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments4xx")),void 0!=globe.scene.getObjectByName("trafficLineSegments5xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments5xx"));var C=!1;for(var R in newConnectionQueue){r=(90-newConnectionQueue[R].lat)*Math.PI/180,s=(180-newConnectionQueue[R].lon)*Math.PI/180,e=globe.globeRadius*Math.sin(r)*Math.cos(s),n=globe.globeRadius*Math.cos(r),t=globe.globeRadius*Math.sin(r)*Math.sin(s),i=new THREE.Vector3(e,n,t),c=(c=newConnectionQueue[R].total-trafficConnectionCount/trafficPointCount)<=1?1:Math.floor(scaleBetween(c,1,10,1,trafficCountHigh)),u.geometry=new THREE.SphereGeometry(c,10,10),u.position.x=e,u.position.y=n,u.position.z=t,u.lookAt(globe.globeMesh.position),u.updateMatrix(),l=0,newConnectionQueue[R]["4xx"]/newConnectionQueue[R].total>=.25&&(l=2),newConnectionQueue[R]["5xx"]/newConnectionQueue[R].total>=.25&&newConnectionQueue[R]["5xx"]>newConnectionQueue[R]["4xx"]&&(l=1);for(var S=0;S<u.geometry.faces.length;S++)u.geometry.faces[S].materialIndex=l;d.merge(u.geometry,u.matrix),i.x<0?i.x-=globe.regionOffset/1.5:i.x+=globe.regionOffset/1.5,i.y<0?i.y-=globe.regionOffset/1.5:i.y+=globe.regionOffset/1.5,i.z<0?i.z-=globe.regionOffset/1.5:i.z+=globe.regionOffset/1.5;for(var G in newConnectionQueue[R].devices){C=!1,(a=globe.scene.getObjectByName(G)).geometry.computeBoundingBox();var b=a.geometry.boundingBox;(o=new THREE.Vector3).subVectors(b.max,b.min),o.multiplyScalar(.5),o.add(b.min),o.applyMatrix4(a.matrixWorld),o=new THREE.Vector3(o.x,o.y,o.z),newConnectionQueue[R].devices[G]["4xx"]/newConnectionQueue[R].devices[G].total>=.25&&(m=getArc(i,o,50,m),C=!0),newConnectionQueue[R].devices[G]["5xx"]/newConnectionQueue[R].devices[G].total>=.25&&newConnectionQueue[R].devices[G]["5xx"]>newConnectionQueue[R].devices[G]["4xx"]&&(h=getArc(i,o,50,h),C=!0),C||(p=getArc(i,o,50,p))}}var L=new THREE.Mesh(d,new THREE.MultiMaterial([g,y,f]));L.name="trafficPointsMesh",globe.scene.add(L);var A=new THREE.LineSegments(p,v);A.updateMatrix(),A.name="trafficLineSegments123",globe.scene.add(A);var E=new THREE.LineSegments(m,M);E.updateMatrix(),E.name="trafficLineSegments4xx",globe.scene.add(E);var I=new THREE.LineSegments(h,T);I.updateMatrix(),I.name="trafficLineSegments5xx",globe.scene.add(I),trafficPointCount=0,trafficConnectionCount=0,trafficCountHigh=0,newConnectionQueue={}}function getArc(e,n,t,a){var i=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3;i.subVectors(new THREE.Vector3,n),o.subVectors(e,n),i.cross(o),r.copy(i).normalize();var s=e.angleTo(n)/(t-1),l=e.clone();l.x>0?l.x-=globe.regionOffset/2:l.x+=globe.regionOffset/2,l.y>0?l.y-=globe.regionOffset/2:l.y+=globe.regionOffset/2,l.z>0?l.z-=globe.regionOffset/2:l.z+=globe.regionOffset/2,a.vertices.push(l);for(var c=1;c<t;c++)a.vertices.push(e.clone().applyAxisAngle(r,s*c));return a}function scaleBetween(e,n,t,a,i){return(t-n)*(e-a)/(i-a)+n}function showTrafficDetails(e){globe.scene.getObjectByName(e);var n=(90-parseInt(traffic[e].lat))*Math.PI/180,t=(180-parseInt(traffic[e].lon))*Math.PI/180,a=700/1.55*Math.sin(n)*Math.cos(t),i=700/1.55*Math.cos(n),o=700/1.55*Math.sin(n)*Math.sin(t);globe.setCameraPosition(a,i,o);var r="successText",s="";document.getElementById("trafficBlockedCount").innerHTML="",document.getElementById("trafficPorts").innerHTML="",document.getElementById("trafficMap").src=googleMapsBaseUrl+"&q="+traffic[e].lat+","+traffic[e].lon+"&zoom=6&maptype=satellite",void 0!=traffic[e].blockedCount&&traffic[e].blockedCount>0&&(r="alertText",s="(This IP has been blocked by other users!)",document.getElementById("trafficBlockedCount").innerHTML='<span class="'+r+'">Total Times Blocked: '+traffic[e].blockedCount+"</span>");for(var l in traffic[e])isNaN(l)||("22"==l?(r="severeWarnText",s="(Privledged Access Port 22 In Use)",document.getElementById("trafficPorts").innerHTML+="<div class='"+r+"'>Port "+l+" Count: "+traffic[e][l]+"</div>"):document.getElementById("trafficPorts").innerHTML+="<div>Port "+l+" Count: "+traffic[e][l]+"</div>");document.getElementById("trafficIp").innerHTML='<span class="'+r+'">'+e+" "+s+"</span>",document.getElementById("trafficCountry").innerHTML="Country: "+traffic[e].country,document.getElementById("trafficStateProv").innerHTML="State/Province: "+traffic[e].state,document.getElementById("trafficCity").innerHTML="City: "+traffic[e].city,document.getElementById("trafficCoordinates").innerHTML="Coordinates: "+traffic[e].lat+","+traffic[e].lon,document.getElementById("trafficLocalTime").innerHTML="Local Time: "+new Date,document.getElementById("detailsBodyMetrics").style.display="none",document.getElementById("detailsBodyTraffic").style.display="block",document.getElementById("paneMiddle").className+=" openPane"}function getApiGatewayLogs(e){function n(e,n,a){if(void 0==a)for(var i=0;i<e.items.length;i++)!function(e,n){var a={};a.id=e.id,a.name=e.name,a.description=e.description,a.region=n.config.region,a.type="apigateway",a.cloud="aws",a.stages=[],apiGatewayInventoryQueue[e.id]=a,apiGatewayStagesTarget++;var i={restApiId:e.id};n.getStages(i,function(n,a){n?t(null,null,n):t(a,e.id)})}(e.items[i],n);else console.log(a,a.stack);apiGatewayObjectActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function t(e,n,t){if(void 0==t)for(var i=0;i<e.item.length;i++)apiGatewayInventoryQueue[n].stages.push(e.item[i].stageName),isDeviceFilteredOut(n+"/"+e.item[i].stageName)||a(n,e.item[i].stageName);else console.log(t,t.stack);apiGatewayStagesActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function a(e,n,t){var a=apiGatewayCloudWatchLogsPrefix+e+"/"+n;apiGatewayConnectionTarget++;var r={logGroupName:a,endTime:o.getTime(),filterPattern:"Method - Starting - HTTP - path - query - body - Endpoint - Execution - response",interleaved:!0,limit:1e4,startTime:i.getTime()};cloudWatchLogs.filterLogEvents(r,function(e,n){e?console.log(e,e.stack):getConnections(a,n)})}if(!simulatorOn){ipGatewayLogRetrivalInProgress=!0,apiGatewayObjectTarget=APIGatewayObjects.length,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0;var i=new Date(e.getTime());i.setSeconds(i.getSeconds()-trafficWindowSeconds);for(var o=e,r={},s=0;s<APIGatewayObjects.length;s++)!function(e){e.getRestApis(r,function(t,a){t?n(null,null,t):n(a,e)})}(APIGatewayObjects[s])}}function getConnections(e,n){console.log("getting connections"),console.log(n);var t={};t.type="apiGateway",t.id=e.substring(apiGatewayCloudWatchLogsPrefix.length,e.length);for(var a=0;a<trafficQueue.length;a++)if(trafficQueue[a].id==t.id){t=trafficQueue[a];break}void 0==t.connections&&(t.connections=[],t.responses=[],trafficQueue.push(t));for(var i,o,r,s,l,c="",d="",u={},p=0;p<n.events.length;p++)if(c=n.events[p].message,d=c.substring(1,c.indexOf(")")),-1!=c.indexOf("Method request headers:")){u[d]={},u[d].id=d,u[d].start=n.events[p].timestamp;var m=testOnly[Math.round(23*Math.random())];console.log(m),u[d].ip=m,i=(i=c.substring(c.indexOf("X-Forwarded-Port=")+"X-Forwarded-Port=".length,c.length)).substring(0,i.indexOf(",")),u[d].port=i,o=(o=c.substring(c.indexOf("CloudFront-Is-Tablet-Viewer=")+"CloudFront-Is-Tablet-Viewer=".length,c.length)).substring(0,o.indexOf(",")),u[d].tablet=o,r=(r=c.substring(c.indexOf("CloudFront-Is-Mobile-Viewer=")+"CloudFront-Is-Mobile-Viewer=".length,c.length)).substring(0,r.indexOf(",")),u[d].mobile=r,s=(s=c.substring(c.indexOf("CloudFront-Is-SmartTV-Viewer=")+"CloudFront-Is-SmartTV-Viewer=".length,c.length)).substring(0,s.indexOf(",")),u[d].smartTV=s,l=(l=c.substring(c.indexOf("Accept-Language=")+"Accept-Language=".length,c.length)).substring(0,l.indexOf(",")),u[d].language=l,u[d].desktop=c.substring(c.indexOf("CloudFront-Is-Desktop-Viewer=")+"CloudFront-Is-Desktop-Viewer=".length,c.length-1),u[d].userAgent=c.substring(c.indexOf("User-Agent=")+"User-Agent=".length,c.indexOf(", X-Forwarded-Proto"))}else-1!=c.indexOf("Method completed with status:")&&(void 0==u[d]&&(u[d]={},u[d].id=d),u[d].responseCode=c.substring(c.indexOf("Method completed with status:")+"Method completed with status:".length+1,c.length),u[d].end=n.events[p].timestamp);var h=null;for(var g in u)if(void 0!=u[g].ip&&void 0!=u[g].responseCode&&void 0!=u[g].start&&void 0!=u[g].end){for(var y=0;y<t.connections.length;y++)if(t.connections[y].ip==u[g].ip){h=t.connections[y];break}if(null==h){(h={}).ip=m,h.details=[];var f=getDataFromIpMappingByIp(m);void 0==f?ipLookUpQueue.push(m):(h.lat=f.lat,h.lon=f.lon,h.country=f.country,h.stateRegion=f.stateRegion,h.city=f.city),t.connections.push(h)}void 0!=connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]&&(u[g].processed=!0),h.details.push(u[g]),connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]={}}apiGatewayConnectionActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function areApiGatewayLogsRetrieved(){return apiGatewayObjectTarget==apiGatewayObjectActual&&apiGatewayStagesTarget==apiGatewayStagesActual&&apiGatewayConnectionTarget==apiGatewayConnectionActual}function loadApiGatewayInventory(){var e=[];for(var n in apiGatewayInventoryQueue)for(var t=0;t<apiGatewayInventoryQueue[n].stages.length;t++)if(void 0==inventory.apigateway||void 0==inventory.apigateway[n+"/"+apiGatewayInventoryQueue[n].stages[t]]){var a=JSON.parse(JSON.stringify(apiGatewayInventoryQueue[n]));a.id=n+"/"+apiGatewayInventoryQueue[n].stages[t],e.push(a);var i={};i.len=100,i.color="#00adef",i.id=a.id,i.label=a.name+" ("+apiGatewayInventoryQueue[n].stages[t]+")",scatterCircleGraphInstanceArray.push(i)}apiGatewayInventoryQueue=[],e.length>0&&(globe.load("inventory",e),startScatterGraphAnimations())}function authenticate(e,n){$.ajax({url:baseUrl,type:"POST",contentType:"application/json",data:JSON.stringify({u:e,p:n}),dataType:"json",success:function(e){var n=JSON.parse(e);AWS.config.update({accessKeyId:n.userAccount.AccessKeyId,secretAccessKey:n.userAccount.SecretAccessKey,sessionToken:n.userAccount.SessionToken,region:loginRegion}),s3=new AWS.S3({apiVersion:"2006-03-01"}),cloudWatchLogs=new AWS.CloudWatchLogs({apiVersion:"2014-03-28"}),APIGatewayObjects=[new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ca-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-south-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"sa-east-1"})],cloudWatchObjects=[new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ca-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-south-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"sa-east-1"})],appAccountConf=n.appAccount,appAccountS3=new AWS.S3({apiVersion:"2006-03-01",credentials:new AWS.Credentials(appAccountConf.AccessKeyId,appAccountConf.SecretAccessKey,appAccountConf.SessionToken)});var t=new Date;if(t.setHours(t.getHours()-24),null==localStorage.getItem("dataRefreshDate")||forceIpKeyRefresh||new Date(localStorage.getItem("dataRefreshDate"))>t){var a={Bucket:"central-sky-ips",Key:"list.json"};appAccountS3.getObject(a,function(e,n){e?console.log(e,e.stack):cacheIpFileKeys(JSON.parse(n.Body))})}null==localStorage.getItem("blocksCached")&&localStorage.setItem("blocksCached","{}"),loginAndLoadInventory()},error:function(e){alert("error="+e)}})}function cacheIpFileKeys(e){console.log("loading keys");for(var n=0;n<e.length;n++)localStorage.setItem(e[n],e[n]);localStorage.setItem("dataRefreshDate",(new Date).getTime())}function lookUpIpsInQueue(){for(var e,n=0;n<ipLookUpQueue.length;n++)e=localStorage.getItem(ipLookUpQueue[n].substring(0,ipLookUpQueue[n].indexOf("."))),console.log("key="+e),void 0!=e&&void 0==ipKeysCached[e]&&void 0==ipKeyCallsQueued[e]&&(ipKeyCallsQueued[e]={},getIpFiles(e));drawUpdates(),lastTrafficRefreshTime=new Date((new Date).getTime()-timeOffset),ipGatewayLogRetrivalInProgress=!1}function addIpsFromDBtoMap(e,n,t){var a;if(null!=e){for(var i=e.split("\r\n"),o=[],r=0;r<i.length;r++)if((o=i[r].split(",")).length>2){a=o[0].replace(/"/gi,"")+"-"+o[1].replace(/"/gi,""),ipMappings[a]={},ipMappings[a].country=o[2].replace(/"/gi,""),ipMappings[a].stateRegion=o[3].replace(/"/gi,""),ipMappings[a].city=o[4].replace(/"/gi,""),ipMappings[a].lat=o[5].replace(/"/gi,""),ipMappings[a].lon=o[6].replace(/"/gi,"");var s=JSON.parse(localStorage.getItem("blocksCached"));null==s&&(s={}),s[a]={},localStorage.setItem(a,JSON.stringify(ipMappings[a])),localStorage.setItem("blocksCached",JSON.stringify(s))}ipKeysCached[n]={},ipKeyCallsQueued[n]=void 0}else console.log(t,t.stack);ipKeysReturned++;var l;if(ipKeysCalled==ipKeysReturned){for(var c=0;c<trafficQueue.length;c++){console.log(trafficQueue[c]);for(var d=0;d<trafficQueue[c].connections.length;d++)console.log(trafficQueue[c].connections),void 0==trafficQueue[c].connections[d].lat&&(l=getDataFromIpMappingByIp(trafficQueue[c].connections[d].ip),trafficQueue[c].connections[d].lat=l.lat,trafficQueue[c].connections[d].lon=l.lon,trafficQueue[c].connections[d].country=l.country,trafficQueue[c].connections[d].stateRegion=l.stateRegion,trafficQueue[c].connections[d].city=l.city)}console.log("Ip lookup queue emptied"),ipLookUpQueue=[]}}function getIpFiles(e){ipKeysCalled++;var n={Bucket:"central-sky-ips",Key:e+".txt"};appAccountS3.getObject(n,function(n,t){n?addIpsFromDBtoMap(null,null,n):addIpsFromDBtoMap(new TextDecoder("utf-8").decode(t.Body),e)})}function loginAndLoadInventory(){document.getElementById("mainOverlays").style.visibility="visible",document.getElementById("loginOverlay").style.display="none",globe.runLoginAnimation(),slidePanes("in"),setTimeout(function(){setTimeout(function(){setTimeout(function(){startClock(),getLogs(),drawUpdates()},500)},500)},1e3),getBilling()}function getAWSInvetory(){var e={FunctionName:"CentralSky_GetInventory",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),initialLoad&&(getAWSMetrics(),getAWSLoggedMetrics(),getAWSEC2Traffic(),initialLoad=!1),globe.load("inventory",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSInvetory()},getAWSInventoryInterval)})}function getAWSMetrics(){var e={FunctionName:"CentralSky_GetMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSMetrics()},getAWSMetricsInterval)})}function getAWSLoggedMetrics(){var e={FunctionName:"CentralSky_GetLoggedMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSLoggedMetrics()},getAWSLoggedMetricsInterval)})}function getAWSBilling(){var e={FunctionName:"CentralSky_GetBilling",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){globe.load("billing",[JSON.parse(n.Payload)]),setTimeout(function(){1==lambdaEnable&&getAWSBilling()},getAWSBillingInterval)})}function getAWSEC2Traffic(){var e={FunctionName:"CentralSky_GetConnections",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){for(console.log(JSON.parse(n.Payload)),t=0;t<trafficObjectIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficObjectIds[t]));trafficObjectIds=[];for(var t=0;t<trafficPointIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficPointIds[t]));trafficPointIds=[],globe.load("traffic",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSEC2Traffic()},getAWSEC2TrafficInterval)})}function blockIp(){var e=document.getElementById("trafficIp").innerHTML;e=e.substring(e.indexOf(">")+1,e.indexOf("</")).trim();var n={FunctionName:"CentralSky_BlockConnection",InvocationType:"RequestResponse",Payload:JSON.stringify({ip:e,token:AWS.config.credentials.sessionToken})};lambda.invoke(n,function(n,t){console.log(JSON.parse(t.Payload)),null==JSON.parse(t.Payload)&&console.log(e+" blocked!")})}function getBilling(){if(simulatorOn)globe.load("billing",["2.50"]);else{var e=new Date;e.setTime(e.getTime()-288e5);var n={MetricName:"EstimatedCharges",Namespace:"AWS/Billing",Dimensions:[{Name:"Currency",Value:"USD"}],Period:60,StartTime:e.toISOString(),EndTime:(new Date).toISOString(),Statistics:["Average"]};cloudWatchObjects[0].getMetricStatistics(n,function(e,n){e?console.log(e,e.stack):globe.load("billing",[n.Datapoints[0].Average])})}}function startClock(){var e=new Date;currentTime=new Date(e.getTime()-timeOffset),document.getElementById("clock").innerHTML=currentTime.toUTCString()+" <span style='font-size:14px;'>("+formatAMPM(currentTime)+")</span>",(currentTime.getTime()-lastTrafficQueueClearTime)/1e3>=trafficWindowSeconds&&(lastTrafficQueueClearTime=currentTime.getTime()),!ipGatewayLogRetrivalInProgress&&(currentTime.getTime()-lastTrafficRefreshTime)/1e3>=trafficVisibilitySeconds&&(simulatorOn?lookUpIpsInQueue():getLogs()),timeLineFirstRun||e.getMinutes()%5!=0?timeLineGraphUpdated&&(timeLineGraphUpdated=!1):timeLineGraphUpdated||(getTimeLineData(),timeLineGraphUpdated=!0),setTimeout(startClock,1e3)}function padTimeWithZeros(e){return e<10&&(e="0"+e),e}function drawCountryResponseGraphAnimations(){var e;for(var n in countryResponseUpdatedObjects){for(e=!1,a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.data={},t.windowTotal=0,t.visible=!1,countryResponseObjects.push(t)}}for(var a=0;a<countryResponseObjects.length;a++)if(countryResponseObjects[a].data={},n=countryResponseObjects[a].name,void 0==countryResponseUpdatedObjects[n]?(countryResponseObjects[a].data[123]=0,countryResponseObjects[a].data["4xx"]=0,countryResponseObjects[a].data["5xx"]=0,countryResponseObjects[a].uniqueIps=0):(countryResponseObjects[a].data[123]=countryResponseUpdatedObjects[n][123],countryResponseObjects[a].data["4xx"]=countryResponseUpdatedObjects[n]["4xx"],countryResponseObjects[a].data["5xx"]=countryResponseUpdatedObjects[n]["5xx"],countryResponseObjects[a].uniqueIps=Object.keys(countryResponseUpdatedObjects[n].ipList).length),countryResponseObjects[a].series.push(countryResponseObjects[a].data),countryResponseObjects[a].total=countryResponseObjects[a].data[123]+countryResponseObjects[a].data["4xx"]+countryResponseObjects[a].data["5xx"],countryResponseObjects[a].windowTotal+=countryResponseObjects[a].total,countryResponseObjects[a].series.length>countryDataFrames){var i=countryResponseObjects[a].series.shift();countryResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}countryResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<countryResponseObjects.length;r++)n=countryResponseObjects[r].name,o<countryGraphsMax?(countryResponseObjects[r].visible?updateCountryResponseTimelineGraph(n,countryResponseObjects[r].data):(setupCountryGraph(n,countryResponseObjects[r].series),countryResponseObjects[r].visible=!0),document.getElementById("country"+n+"Connections").innerHTML=numberWithCommas(countryResponseObjects[r].total),document.getElementById("country"+n+"IPs").innerHTML=numberWithCommas(countryResponseObjects[r].uniqueIps),updateCountryResponseTypeGraph("countryResponseTypeGraph"+n,countryResponseObjects[r].data),document.getElementById("country"+n+"ParentContainer").style.top=56*r+"px",o++):(null!=document.getElementById("country"+n+"ParentContainer")&&(document.getElementById("country"+n+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[n],countryResponseObjects[r].visible=!1)}function clearCountryGraphs(){for(var e,n=0;n<countryResponseObjects.length;n++)e=countryResponseObjects[n].name,null!=document.getElementById("country"+e+"ParentContainer")&&(document.getElementById("country"+e+"ParentContainer").outerHTML=""),delete countryTimeLineGraphs[e],countryResponseObjects[n].visible=!1,countryResponseObjects[n].series=[]}function setupCountryGraph(e,n){document.getElementById("countryGraphs").insertAdjacentHTML("beforeend",'<div id="country'+e+'ParentContainer" class="countryGraphContainersParents" onmousedown="zoomToCountry(\''+decodeCountryName(e)+'\')"><div class="countryGraphContainers"><span id="country'+e+'Name" class="countryName" >'+decodeCountryName(e)+'</span><span id="country'+e+'Connections" class="countryConnections" ></span><span id="country'+e+'IPs" class="countryIPs" ></span><div id="graph-'+e+'"></div><div id="countryResponseTypeGraph'+e+'" class="countryResponseTypeGraphs"></div></div></div>'),setupCountryCircleGraph("countryResponseTypeGraph"+e),setupCountryTimeLineGraph(e,n)}function setupCountryCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+countryResponseGraphWidth/2+","+countryResponseGraphHeight/2+")")}function setupCountryTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:countryDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),countryTimeLineGraphs[e]=t}function updateCountryResponseTimelineGraph(e,n){var t=countryTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateCountryResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=countryResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(countryResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return countryResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(countryResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return countryResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(countryResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return countryResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return countryResponseGraphArcInner(n(e))}}),s.exit().remove()}function updateDeviceCircleGraphs(e,n){return n.domain().map(function(n){return"value"==n?{label:n,value:e}:{label:n,value:1-e}})}function drawDeviceCircleGraphAnimations(e,n,t){valueMobile=Math.round(100*e),drawDeviceCircleGraphs(updateDeviceCircleGraphs(e,deviceCircleGraphColorMobile),deviceCircleGraphMobile,deviceCircleGraphColorMobile),document.getElementById("deviceCircleGraphMobilePercent").innerHTML=valueMobile+"%",valueTablet=Math.round(100*n),drawDeviceCircleGraphs(updateDeviceCircleGraphs(n,deviceCircleGraphColorTablet),deviceCircleGraphTablet,deviceCircleGraphColorTablet),document.getElementById("deviceCircleGraphTabletPercent").innerHTML=valueTablet+"%",valueMonitor=Math.round(100*t),drawDeviceCircleGraphs(updateDeviceCircleGraphs(t,deviceCircleGraphColorMonitor),deviceCircleGraphMonitor,deviceCircleGraphColorMonitor),document.getElementById("deviceCircleGraphMonitorPercent").innerHTML=valueMonitor+"%"}function drawDeviceCircleGraphs(e,n,t){var a=n.select(".slices").selectAll("path.slice").data(pie(e),key);a.enter().insert("path").style("fill",function(e){return t(e.data.label)}).attr("class","slice"),a.transition().duration(500).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return arcDevice(n(e))}}),a.exit().remove()}function drawEndPointResponseGraphAnimations(){var e;for(var n in endPointResponseUpdatedObjects){for(e=!1,a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].name==n){e=!0;break}if(!e){var t={};t.name=n,t.series=[],t.seriesResponse=[],t.data={},t.region=endPointResponseUpdatedObjects[n].region,t.response={},t.windowTotal=0,t.visible=!1,endPointResponseObjects.push(t)}}for(var a=0;a<endPointResponseObjects.length;a++)if(endPointResponseObjects[a].data={},n=endPointResponseObjects[a].name,void 0==endPointResponseUpdatedObjects[n]?(endPointResponseObjects[a].data[123]=0,endPointResponseObjects[a].data["4xx"]=0,endPointResponseObjects[a].data["5xx"]=0,endPointResponseObjects[a].response.value=0,endPointResponseObjects[a].response.area=0,endPointResponseObjects[a].uniqueIps=0):(endPointResponseObjects[a].data[123]=endPointResponseUpdatedObjects[n][123],endPointResponseObjects[a].data["4xx"]=endPointResponseUpdatedObjects[n]["4xx"],endPointResponseObjects[a].data["5xx"]=endPointResponseUpdatedObjects[n]["5xx"],endPointResponseObjects[a].response.value=endPointResponseUpdatedObjects[n].response/endPointResponseUpdatedObjects[n].responseCount,endPointResponseObjects[a].response.area=endPointResponseObjects[a].response.value,endPointResponseObjects[a].uniqueIps=Object.keys(endPointResponseUpdatedObjects[n].ipList).length),endPointResponseObjects[a].series.push(endPointResponseObjects[a].data),endPointResponseObjects[a].seriesResponse.push(endPointResponseObjects[a].response),endPointResponseObjects[a].total=endPointResponseObjects[a].data[123]+endPointResponseObjects[a].data["4xx"]+endPointResponseObjects[a].data["5xx"],endPointResponseObjects[a].windowTotal+=endPointResponseObjects[a].total,endPointResponseObjects[a].series.length>endPointDataFrames){var i=endPointResponseObjects[a].series.shift();endPointResponseObjects[a].windowTotal-=i[123]+i["4xx"]+i["5xx"]}endPointResponseObjects.sort(function(e,n){return n.windowTotal-e.windowTotal});for(var o=0,r=0;r<endPointResponseObjects.length;r++)n=endPointResponseObjects[r].name,o<endPointGraphsMax?(endPointResponseObjects[r].visible?(updateEndPointResponseTimelineGraph(n,endPointResponseObjects[r].data),updateEndPointResponseTimelineResponeTimeGraph(n,endPointResponseObjects[r].response)):(setupEndPointGraph(n,endPointResponseObjects[r].region,endPointResponseObjects[r].series,endPointResponseObjects[r].seriesResponse),endPointResponseObjects[r].visible=!0),document.getElementById("endPoint"+n+"Connections").innerHTML=numberWithCommas(endPointResponseObjects[r].total),document.getElementById("endPoint"+n+"IPs").innerHTML=numberWithCommas(endPointResponseObjects[r].uniqueIps),document.getElementById("endPoint"+n+"ResonseTimes").innerHTML=(Math.round(endPointResponseObjects[r].response.value)/1e3).toFixed(3)+"s",updateEndPointResponseTypeGraph("endPointResponseTypeGraph"+n,endPointResponseObjects[r].data),document.getElementById("endPoint"+n+"ParentContainer").style.top=70*r+"px",o++):(null!=document.getElementById("endPoint"+n+"ParentContainer")&&(document.getElementById("endPoint"+n+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[n],delete endPointTimeLineResponseTimeGraphs[n],endPointResponseObjects[r].visible=!1)}function clearEndPointResponseGraphs(){for(var e,n=0;n<endPointResponseObjects.length;n++)e=endPointResponseObjects[n].name,null!=document.getElementById("endPoint"+e+"ParentContainer")&&(document.getElementById("endPoint"+e+"ParentContainer").outerHTML=""),delete endPointTimeLineGraphs[e],delete endPointTimeLineResponseTimeGraphs[e],endPointResponseObjects[n].visible=!1,endPointResponseObjects[n].series=[],endPointResponseObjects[n].seriesResponse=[]}function setupEndPointGraph(e,n,t,a){document.getElementById("endPointGraphs").insertAdjacentHTML("beforeend",'<div id="endPoint'+e+'ParentContainer" class="endPointGraphContainersParents" onmousedown="zoomToRegion(\''+n+'\')"><div class="endPointGraphContainers"><span id="endPoint'+e+'Name" class="endPointName" >'+decodeEndPointName(e)+'</span><span id="endPoint'+e+'Connections" class="endPointConnections" ></span><span id="endPoint'+e+'IPs" class="endPointIPs" ></span><div id="graph-'+e+'"></div><div id="endPointResponseTypeGraph'+e+'" class="endPointResponseTypeGraphs"></div><div id="graph-responseTime-'+e+'" class="endPointResponseTimeGraphs"></div><span id="endPoint'+e+'ResonseTimes" class="endPointResponseTimes" ></span></div></div>'),setupEndPointCircleGraph("endPointResponseTypeGraph"+e),setupEndPointTimeLineGraph(e,t),setupEndPointTimeLineResponseTimeGraph(e,a)}function setupEndPointCircleGraph(e){var n=d3.select("#"+e).append("svg").append("g");n.append("g").attr("class","slices"),n.append("g").attr("class","labels"),n.append("g").attr("class","lines"),n.attr("transform","translate("+endPointResponseGraphWidth/2+","+endPointResponseGraphHeight/2+")")}function setupEndPointTimeLineGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:345,height:25,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar"},{name:"5xx",color:color5xx,renderer:"bar"},{name:"123",color:color123,renderer:"bar"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineGraphs[e]=t}function setupEndPointTimeLineResponseTimeGraph(e,n){var t=new Rickshaw.Graph({element:document.getElementById("graph-responseTime-"+e),width:345,height:15,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:"#00adef",renderer:"line",strokeWidth:.75},{name:"area",color:"rgba(0,133,199,0.3)",renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:endPointDataFrames,timeBase:(new Date).getTime()/1e3})});t.offset="zero";for(var a=0;a<n.length;a++)t.series.addData(n[a]);t.update(),endPointTimeLineResponseTimeGraphs[e]=t}function updateEndPointResponseTimelineGraph(e,n){var t=endPointTimeLineGraphs[e],a={};a[123]=n[123],a["4xx"]=n["4xx"],a["5xx"]=n["5xx"],t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTimelineResponeTimeGraph(e,n){var t=endPointTimeLineResponseTimeGraphs[e],a={};a.value=n.value,a.area=n.area,t.series.addData(a),t.render(),t.update()}function updateEndPointResponseTypeGraph(e,n){var t=n[123]+n["4xx"]+n["5xx"],a=endPointResponseGraphColorInner.domain().map(function(e){return t>0?"123"==e?{label:e,value:n[123]/t}:"4xx"==e?{label:e,value:n["4xx"]/t}:"5xx"==e?{label:e,value:n["5xx"]/t}:void 0:{label:e,value:0}}),i=d3.select("#"+e),o=i.select(".slices").selectAll("path.slice").data(endPointResponseGraphPie(a),a.label);o.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorOutter(e.data.label)}).attr("class","slice"),o.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArc(n(e))}}),o.exit().remove();var r=i.select(".slices").selectAll("path.sliceMiddle").data(endPointResponseGraphPie(a),a.label);r.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorMiddle(e.data.label)}).attr("class","sliceMiddle"),r.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcMiddle(n(e))}}),r.exit().remove();var s=i.select(".slices").selectAll("path.sliceInner").data(endPointResponseGraphPie(a),a.label);s.enter().insert("path").style("fill",function(e){return endPointResponseGraphColorInner(e.data.label)}).attr("class","sliceInner"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return endPointResponseGraphArcInner(n(e))}}),s.exit().remove()}function createNewEndPointGraph(e,n){document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<span style="color:#00ADEF;float:left;">'+e+'</span><span id="graph-total-'+e+'" style="color:#ffffff;float:right;">0</span>'),document.getElementById("endPointHealth").insertAdjacentHTML("beforeend",'<div id="graph-'+e+'" style="margin-bottom:5px;"></div>');var t=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:400,height:60,min:100,interpolation:"basis",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:color4xx},{name:"5xx",color:color5xx},{name:"123",color:color123}],void 0,{timeInterval:250,maxDataPoints:150,timeBase:(new Date).getTime()/1e3})}),a=new Rickshaw.Graph.Smoother({graph:t,element:document.querySelector("#smoother")});new Rickshaw.Graph.Axis.Y({graph:t,pixelsPerTick:30,tickFormat:function(e){return e/1e3+"s"},ticksTreatment:"inverse"}).render(),"steam"==n?(t.setRenderer("stack"),t.offset="wiggle",a.setScale(40)):"line"==n?(t.setRenderer("line"),t.offset="zero",a.setScale(30)):"scatter"==n&&(t.setRenderer("scatterplot",{dotSize:1.2}),t.offset="value"),t.update(),endPointHealthGraphs.push(t);var i={};i["4xx"]=0,i["5xx"]=0,i[123]=0,endPoints[e]=i,graphTotals[e]=0}function startEndPointGraphAnimations(){setInterval(function(){for(var e in endPoints){var n=Math.random();n<.1?(endPoints[e]["4xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["4xx"]=0,n<.3&&n>.2?(endPoints[e]["5xx"]=Math.floor(2500*Math.random()+200),graphTotals[e]++):endPoints[e]["5xx"]=0,n>.5?(endPoints[e][123]=Math.floor(1200*Math.random()+200),graphTotals[e]++):endPoints[e][123]=0}for(var t,a=0;a<endPointHealthGraphs.length;a++)t=(t=endPointHealthGraphs[a].element.id).substring("graph-".length,t.length),endPointHealthGraphs[a].series.addData(endPoints[t]),endPointHealthGraphs[a].update(),document.getElementById("graph-total-"+t).innerHTML=numberWithCommas(graphTotals[t])},1e3)}function translateElb(e){var n={};return n.id=e.LoadBalancerName,n.name=e.LoadBalancerName,n.status="pending",void 0!=e.Instances&&e.Instances.length>0&&(n.status="running"),n.AvailabilityZone=e.AvailabilityZones[0],void 0!=n.AvailabilityZone&&(n.Region=n.AvailabilityZone.substring(0,n.AvailabilityZone.length-1)),n.instances=e.Instances,n.tags=e.Tags,n.health=e.health,n.type="elb",n}function translateApiGateway(e){var n={};return n.id=e.id,n.name=e.name,n.Region=e.region,n.Description=e.description,n.stages=e.stages,n.type="apigateway",n.status="running",n}function createNewLineGraph(e,n,t,a,i,o,r){var s=208,l=60;"third"==a&&(s=140,l=50),document.getElementById(n).insertAdjacentHTML("beforeend",'<div id="graph-'+e+'"><span style="color:'+i+'" class="'+n+'Titles">'+e+'</span><span id="graph-total-'+e+'" class="'+n+'Totals">0</span></div>');var c=new Rickshaw.Graph({element:document.getElementById("graph-"+e),width:s,height:l,renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"value",color:i,strokeWidth:r,renderer:"line"},{name:"area",color:o,renderer:"area"}],void 0,{timeInterval:250,maxDataPoints:30,timeBase:(new Date).getTime()/1e3})});c.offset="zero",c.update(),lineGraphs.push(c)}function drawLineGraphAnimations(e,n,t,a,i){for(var o,r,s=t+a+i,l=0;l<lineGraphs.length;l++)r={},"Connections"==(o=(o=lineGraphs[l].element.id).substring("graph-".length,o.length))?(r.value=e,r.area=e):"Unique IPs"==o?(r.value=n,r.area=n):"Success"==o?(r.value=t,r.area=t):"Rejected"==o?(r.value=a,r.area=a):"Error"==o&&(r.value=i,r.area=i),lineGraphs[l].series.addData(r),lineGraphs[l].update(),document.getElementById("graph-total-"+o).innerHTML="Success"==o||"Rejected"==o||"Error"==o?0==s?"0%":Math.round(r.value/s*100)+"%":numberWithCommas(r.value)}function clearLineGraphs(){for(var e,n,t=0;t<150;t++)for(var a=0;a<lineGraphs.length;a++)n={},e=(e=lineGraphs[a].element.id).substring("graph-".length,e.length),n.value=0,lineGraphs[a].series.addData(n),lineGraphs[a].update();for(var i=0;i<lineGraphs.length;i++)e=(e=lineGraphs[i].element.id).substring("graph-".length,e.length),document.getElementById("graph-total-"+e).innerHTML=0,lineGraphs[i].update()}function resetLargeMapZoom(){mapLargeWorld.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)"),mapLargeUSA.svg.selectAll("g").attr("transform","translate(0,0)scale(1.0)")}function drawMap(e){var n={},t=e.map(function(e){return e[1]}),a=Math.min.apply(null,t),i=Math.max.apply(null,t);a==i&&(a=0);var o=d3.scale.linear().domain([a,i]).range(["#00212d","#00adef"]);e.forEach(function(e){var t=e[0],a=e[1];n[t]={numberOfThings:a,fillColor:o(a)}}),map.updateChoropleth(n,{reset:!0})}function drawMapLarge(e,n){var t;if(e.forEach(function(e){var t=e[0],a=e[1];"world"==n?(void 0==mapDataSet[t]?mapDataSet[t]={numberOfThings:a,fillColor:null}:mapDataSet[t].numberOfThings+=a,(0==mapMinValue||mapMinValue>mapDataSet[t].numberOfThings)&&(mapMinValue=mapDataSet[t].numberOfThings),mapDataSet[t].numberOfThings>mapMaxValue&&(mapMaxValue=mapDataSet[t].numberOfThings)):(void 0==mapDataSetUSA[t]?mapDataSetUSA[t]={numberOfThings:a,fillColor:null}:mapDataSetUSA[t].numberOfThings+=a,(0==mapMinValueUSA||mapMinValueUSA>mapDataSetUSA[t].numberOfThings)&&(mapMinValueUSA=mapDataSetUSA[t].numberOfThings),mapDataSetUSA[t].numberOfThings>mapMaxValueUSA&&(mapMaxValueUSA=mapDataSetUSA[t].numberOfThings))}),"world"==n){t=d3.scale.linear().domain([mapMinValue,mapMaxValue]).range(["#00212d","#00adef"]);for(var a in mapDataSet)mapDataSet[a].fillColor=t(mapDataSet[a].numberOfThings);mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0})}else{t=d3.scale.linear().domain([mapMinValueUSA,mapMaxValueUSA]).range(["#00212d","#00adef"]);for(var a in mapDataSetUSA)mapDataSetUSA[a].fillColor=t(mapDataSetUSA[a].numberOfThings);mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}}function clearMaps(){mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,mapLargeWorld.updateChoropleth(mapDataSet,{reset:!0}),mapLargeUSA.updateChoropleth(mapDataSetUSA,{reset:!0})}function drawResponseCodeGraph(e,n,t,a){function i(e){return e.startAngle+(e.endAngle-e.startAngle)/2}var o=n+t+a;0==o?(document.getElementById("responseCodeValue123").innerHTML="0%",document.getElementById("responseCodeValue4xx").innerHTML="0%",document.getElementById("responseCodeValue5xx").innerHTML="0%",document.getElementById("averageResponseTimeValue").innerHTML=(0).toFixed(3)+"s"):(document.getElementById("responseCodeValue123").innerHTML=Math.round(n/o*100)+"%",document.getElementById("responseCodeValue4xx").innerHTML=Math.round(t/o*100)+"%",document.getElementById("responseCodeValue5xx").innerHTML=Math.round(a/o*100)+"%",document.getElementById("averageResponseTimeValue").innerHTML=(Math.round(e)/1e3).toFixed(3)+"s");var r=responseCodeGraphColor.domain().map(function(e){return o>0?"Success"==e?{label:e,value:n/o}:"Rejected"==e?{label:e,value:t/o}:"Error"==e?{label:e,value:a/o}:void 0:{label:e,value:0}}),s=responseCodeGraphSvg.select(".slices").selectAll("path.slice").data(pie(r),key);s.enter().insert("path").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("class","slice"),s.transition().duration(1e3).attrTween("d",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return responseCodeGraphArc(n(e))}}),s.exit().remove();var l=responseCodeGraphSvg.select(".labels").selectAll("text").data(pie(r),key);l.enter().append("text").attr("dy",".35em").style("fill",function(e){return responseCodeGraphColor(e.data.label)}).attr("id",function(e){return"responseCodeGraphText-"+e.data.label}).text(function(e){return e.data.label}),l.transition().duration(1e3).attrTween("transform",function(e){this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=responseCodeGraphRadius*(i(t)<Math.PI?1:-1),"translate("+a+")"}}).styleTween("text-anchor",function(e){0==e.data.value?document.getElementById("responseCodeGraphText-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphText-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){return i(n(e))<Math.PI?"start":"end"}}),l.exit().remove();var c=responseCodeGraphSvg.select(".lines").selectAll("polyline").data(pie(r),key);c.enter().append("polyline").attr("id",function(e){return"responseCodeGraphLine-"+e.data.label}),c.transition().duration(1e3).attrTween("points",function(e){0==e.data.value?document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="none":document.getElementById("responseCodeGraphLine-"+e.data.label).style.display="block",this._current=this._current||e;var n=d3.interpolate(this._current,e);return this._current=n(0),function(e){var t=n(e),a=responseCodeGraphOuterArc.centroid(t);return a[0]=.95*responseCodeGraphRadius*(i(t)<Math.PI?1:-1),[responseCodeGraphArc.centroid(t),responseCodeGraphOuterArc.centroid(t),a]}}),c.exit().remove()}function startScatterGraphAnimations(){for(var e=document.getElementsByClassName("scatterCircleCenter"),n=0;n<e.length;n++)e[n].style.display="block";deviceScatterGraph.layout(scatterCircleGraphInstanceArray,{innerRadius:scatterCircleGraphWidth/2-40,outerRadius:scatterCircleGraphWidth/2-38,ticks:{display:!1},labels:{position:"center",display:!0,size:14,color:"#ffffff",radialOffset:15}}).render()}function pushScatterCircleGraphData(e,n,t,a){deviceScatterData.push({block_id:e,position:98*Math.random()+2,value:n/1e3,code:t}),deviceScatterData.length>2e3&&deviceScatterData.shift()}function drawScatterCircleGraph(){drawCircos(deviceScatterData)}function clearScatterCircleGraph(){drawCircos(deviceScatterData=[],!0)}function drawCircos(e,n){(0!=e.length||void 0!=n&&n)&&deviceScatterGraph.scatter("circleScatterGraph",e,{innerRadius:.2,outerRadius:.98,logScale:!1,fill:!0,size:.75,strokeColor:function(e,n){return 4==e.code?"#ff7b00":5==e.code?"#ff0000":"#ffffff"},axes:[{color:"#00adef",position:.1,opacity:.5,thickness:.5},{color:"#00adef",position:.15,opacity:.5,thickness:.5},{color:"#00adef",position:.2,opacity:.5,thickness:.5},{color:"#00adef",position:.25,opacity:.5,thickness:.5},{color:"#00adef",position:.3,opacity:.5,thickness:.5},{color:"#00adef",position:.35,opacity:.5,thickness:.5},{color:"#00adef",position:.4,opacity:.5,thickness:.5},{color:"#00adef",position:.45,opacity:.5,thickness:.5},{color:"#00adef",position:.5,opacity:.5,thickness:.5},{color:"#00adef",position:.55,opacity:.5,thickness:.5},{color:"#00adef",position:.6,opacity:.5,thickness:.5},{color:"#00adef",position:.65,opacity:.5,thickness:.5},{color:"#00adef",position:.7,opacity:.5,thickness:.5},{color:"#00adef",position:.75,opacity:.5,thickness:.5},{color:"#00adef",position:.8,opacity:.5,thickness:.5},{color:"#00adef",position:.85,opacity:.5,thickness:.5},{color:"#00adef",position:.9,opacity:.5,thickness:.5},{color:"#00adef",position:.95,opacity:.5,thickness:.5},{color:"#00adef",position:1,opacity:.5,thickness:1},{color:"#1F4B64",position:1.2,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.25,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.3,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.35,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.4,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.45,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.5,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.55,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.6,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.65,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.7,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.75,opacity:.7,thickness:.5},{color:"#1F4B64",position:1.8,opacity:.7,thickness:.5},{color:"#182B38",position:2,opacity:1,thickness:.5},{color:"#182B38",position:3,opacity:1,thickness:.5},{color:"#182B38",position:4,opacity:1,thickness:.5},{color:"#182B38",position:5,opacity:1,thickness:.5},{color:"#182B38",position:6,opacity:1,thickness:.5},{color:"#182B38",position:7,opacity:1,thickness:.5},{color:"#182B38",position:8,opacity:1,thickness:.5},{color:"#182B38",position:9,opacity:1,thickness:.5},{color:"#182B38",position:10,opacity:1,thickness:.5},{color:"#182B38",position:30,opacity:1,thickness:.5},{color:"#182B38",position:60,opacity:1,thickness:.5},{color:"#182B38",position:300,opacity:1,thickness:.5}]}).render()}function drawTimeLineGraph(){if(4==timeLineCallBackCount){if(timeLineFirstRun){timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes();for(var e=0;e<287;e++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]-(timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]+timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]),(o={})["123xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"],o["4xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"],o["5xx"]=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o),55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5}else{var n=new Date;n.setMinutes(n.getMinutes()-5);var t=n.getDate(),a=n.getHours(),i=n.getMinutes();timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"]-(timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"]+timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"]);var o={};o["123xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["123xx"],o["4xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["4xx"],o["5xx"]=timeLineQueue["d:"+t+" h:"+a+" m:"+i]["5xx"],timeLineGraph.series.addData(o),(o={}).Latency=timeLineQueue["d:"+t+" h:"+a+" m:"+i].Latency,o.LatencyArea=o.Latency,timeLineGraphLatency.series.addData(o)}timeLineGraph.update(),timeLineGraphLatency.update(),timeLineFirstRun=!1,timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0}}function getInitialTimeLineData(){getTimeLineDataForMetric("Count","Sum","123xx",timeLineBase.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",timeLineBase.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",timeLineBase.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",timeLineBase.toISOString())}function getTimeLineData(){var e=new Date;e.setMinutes(e.getMinutes()-5),e.setSeconds(0),e.setMilliseconds(0),timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]={},timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()].Latency=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["4xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["5xx"]=0,timeLineQueue["d:"+e.getDate()+" h:"+e.getHours()+" m:"+e.getMinutes()]["123xx"]=0,getTimeLineDataForMetric("Count","Sum","123xx",e.toISOString()),getTimeLineDataForMetric("4XXError","Sum","4xx",e.toISOString()),getTimeLineDataForMetric("5XXError","Sum","5xx",e.toISOString()),getTimeLineDataForMetric("Latency","Average","Latency",e.toISOString())}function getTimeLineDataForMetric(e,n,t,a){if(!simulatorOn)for(var i in inventory.apigateway){var o={};o.Name="ApiName",o.Value=inventory.apigateway[i].name;for(var r={MetricName:e,Namespace:"AWS/ApiGateway",Dimensions:[o],Period:300,StartTime:a,EndTime:(new Date).toISOString(),Statistics:[n]},s=0;s<cloudWatchObjects.length;s++)"123xx"==t?timeLineInitialDataCountCalls++:"4xx"==t?timeLineInitialData4xxCalls++:"5xx"==t?timeLineInitialData5xxCalls++:"Latency"==t&&timeLineInitialDataLatencyCalls++,function(e,n,t){cloudWatchObjects[s].getMetricStatistics(r,function(e,a){var i,o,r;if("123xx"==t?(i=++timeLineInitialDataCountResponses,o=timeLineInitialDataCountCalls,r=timeLineInitialDataCount):"4xx"==t?(i=++timeLineInitialData4xxResponses,o=timeLineInitialData4xxCalls,r=timeLineInitialData4xx):"5xx"==t?(i=++timeLineInitialData5xxResponses,o=timeLineInitialData5xxCalls,r=timeLineInitialData5xx):"Latency"==t&&(i=++timeLineInitialDataLatencyResponses,o=timeLineInitialDataLatencyCalls,r=timeLineInitialDataLatency),e)console.log(e,e.stack);else if(a.Datapoints.length>0&&("123xx"==t?r=timeLineInitialDataCount=timeLineInitialDataCount.concat(a.Datapoints):"4xx"==t?r=timeLineInitialData4xx=timeLineInitialData4xx.concat(a.Datapoints):"5xx"==t?r=timeLineInitialData5xx=timeLineInitialData5xx.concat(a.Datapoints):"Latency"==t&&(r=timeLineInitialDataLatency=timeLineInitialDataLatency.concat(a.Datapoints))),i==o){for(var s,l=0;l<r.length;l++)void 0!=(s=r[l].Timestamp)&&(s.setMinutes(s.getMinutes()-(s.getMinutes()-5*Math.ceil(s.getMinutes()/5))),void 0!=timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()]&&(timeLineQueue["d:"+s.getDate()+" h:"+s.getHours()+" m:"+s.getMinutes()][t]+=r[l][n]));timeLineCallBackCount++,drawTimeLineGraph()}})}(0,n,t)}}function convertDateToUTC(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}function addTrafficEvent(e,n){var t=round(n.lat,.5),a=round(n.lon,.5);void 0==newConnectionQueue[t+"|"+a]&&(newConnectionQueue[t+"|"+a]={},newConnectionQueue[t+"|"+a].lat=n.lat,newConnectionQueue[t+"|"+a].lon=n.lon,newConnectionQueue[t+"|"+a]["4xx"]=0,newConnectionQueue[t+"|"+a]["5xx"]=0,newConnectionQueue[t+"|"+a][123]=0,newConnectionQueue[t+"|"+a].total=0,newConnectionQueue[t+"|"+a].devices={}),void 0==newConnectionQueue[t+"|"+a].devices[e]&&(newConnectionQueue[t+"|"+a].devices[e]={},newConnectionQueue[t+"|"+a].devices[e]["4xx"]=0,newConnectionQueue[t+"|"+a].devices[e]["5xx"]=0,newConnectionQueue[t+"|"+a].devices[e][123]=0,newConnectionQueue[t+"|"+a].devices[e].total=0);for(var i=0;i<n.details.length;i++)newConnectionQueue[t+"|"+a].total++,newConnectionQueue[t+"|"+a].devices[e].total++,"4"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["4xx"]++,newConnectionQueue[t+"|"+a].devices[e]["4xx"]++):"5"==n.details[i].responseCode.charAt(0)?(newConnectionQueue[t+"|"+a]["5xx"]++,newConnectionQueue[t+"|"+a].devices[e]["5xx"]++):(newConnectionQueue[t+"|"+a][123]++,newConnectionQueue[t+"|"+a].devices[e][123]++);newConnectionQueue[t+"|"+a].total>trafficCountHigh&&(trafficCountHigh=newConnectionQueue[t+"|"+a].total),trafficPointCount++,trafficConnectionCount+=n.details.length}function showTraffic(){var e,n,t,a,i,o,r,s,l,c,d=new THREE.Geometry,u=new THREE.Mesh,p=new THREE.Geometry,m=new THREE.Geometry,h=new THREE.Geometry,g=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.9}),y=new THREE.MeshLambertMaterial({color:"rgb(255, 20, 0)",transparent:!0,opacity:.9}),f=new THREE.MeshLambertMaterial({color:"rgb(255, 60, 0)",transparent:!0,opacity:.9}),v=new THREE.LineDashedMaterial({color:16777215,scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),M=new THREE.LineDashedMaterial({color:"rgb(255, 100, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7}),T=new THREE.LineDashedMaterial({color:"rgb(255, 30, 0)",scale:1,dashSize:3,gapSize:2,transparent:!0,opacity:.7});void 0!=globe.scene.getObjectByName("trafficPointsMesh")&&globe.scene.remove(globe.scene.getObjectByName("trafficPointsMesh")),void 0!=globe.scene.getObjectByName("trafficLineSegments123")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments123")),void 0!=globe.scene.getObjectByName("trafficLineSegments4xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments4xx")),void 0!=globe.scene.getObjectByName("trafficLineSegments5xx")&&globe.scene.remove(globe.scene.getObjectByName("trafficLineSegments5xx"));var C=!1;for(var R in newConnectionQueue){r=(90-newConnectionQueue[R].lat)*Math.PI/180,s=(180-newConnectionQueue[R].lon)*Math.PI/180,e=globe.globeRadius*Math.sin(r)*Math.cos(s),n=globe.globeRadius*Math.cos(r),t=globe.globeRadius*Math.sin(r)*Math.sin(s),i=new THREE.Vector3(e,n,t),c=(c=newConnectionQueue[R].total-trafficConnectionCount/trafficPointCount)<=1?1:Math.floor(scaleBetween(c,1,10,1,trafficCountHigh)),u.geometry=new THREE.SphereGeometry(c,10,10),u.position.x=e,u.position.y=n,u.position.z=t,u.lookAt(globe.globeMesh.position),u.updateMatrix(),l=0,newConnectionQueue[R]["4xx"]/newConnectionQueue[R].total>=.25&&(l=2),newConnectionQueue[R]["5xx"]/newConnectionQueue[R].total>=.25&&newConnectionQueue[R]["5xx"]>newConnectionQueue[R]["4xx"]&&(l=1);for(var S=0;S<u.geometry.faces.length;S++)u.geometry.faces[S].materialIndex=l;d.merge(u.geometry,u.matrix),i.x<0?i.x-=globe.regionOffset/1.5:i.x+=globe.regionOffset/1.5,i.y<0?i.y-=globe.regionOffset/1.5:i.y+=globe.regionOffset/1.5,i.z<0?i.z-=globe.regionOffset/1.5:i.z+=globe.regionOffset/1.5;for(var G in newConnectionQueue[R].devices){C=!1,(a=globe.scene.getObjectByName(G)).geometry.computeBoundingBox();var b=a.geometry.boundingBox;(o=new THREE.Vector3).subVectors(b.max,b.min),o.multiplyScalar(.5),o.add(b.min),o.applyMatrix4(a.matrixWorld),o=new THREE.Vector3(o.x,o.y,o.z),newConnectionQueue[R].devices[G]["4xx"]/newConnectionQueue[R].devices[G].total>=.25&&(m=getArc(i,o,50,m),C=!0),newConnectionQueue[R].devices[G]["5xx"]/newConnectionQueue[R].devices[G].total>=.25&&newConnectionQueue[R].devices[G]["5xx"]>newConnectionQueue[R].devices[G]["4xx"]&&(h=getArc(i,o,50,h),C=!0),C||(p=getArc(i,o,50,p))}}var L=new THREE.Mesh(d,new THREE.MultiMaterial([g,y,f]));L.name="trafficPointsMesh",globe.scene.add(L);var A=new THREE.LineSegments(p,v);A.updateMatrix(),A.name="trafficLineSegments123",globe.scene.add(A);var E=new THREE.LineSegments(m,M);E.updateMatrix(),E.name="trafficLineSegments4xx",globe.scene.add(E);var I=new THREE.LineSegments(h,T);I.updateMatrix(),I.name="trafficLineSegments5xx",globe.scene.add(I),trafficPointCount=0,trafficConnectionCount=0,trafficCountHigh=0,newConnectionQueue={}}function getArc(e,n,t,a){var i=new THREE.Vector3,o=new THREE.Vector3,r=new THREE.Vector3;i.subVectors(new THREE.Vector3,n),o.subVectors(e,n),i.cross(o),r.copy(i).normalize();var s=e.angleTo(n)/(t-1),l=e.clone();l.x>0?l.x-=globe.regionOffset/2:l.x+=globe.regionOffset/2,l.y>0?l.y-=globe.regionOffset/2:l.y+=globe.regionOffset/2,l.z>0?l.z-=globe.regionOffset/2:l.z+=globe.regionOffset/2,a.vertices.push(l);for(var c=1;c<t;c++)a.vertices.push(e.clone().applyAxisAngle(r,s*c));return a}function scaleBetween(e,n,t,a,i){return(t-n)*(e-a)/(i-a)+n}function showTrafficDetails(e){globe.scene.getObjectByName(e);var n=(90-parseInt(traffic[e].lat))*Math.PI/180,t=(180-parseInt(traffic[e].lon))*Math.PI/180,a=700/1.55*Math.sin(n)*Math.cos(t),i=700/1.55*Math.cos(n),o=700/1.55*Math.sin(n)*Math.sin(t);globe.setCameraPosition(a,i,o);var r="successText",s="";document.getElementById("trafficBlockedCount").innerHTML="",document.getElementById("trafficPorts").innerHTML="",document.getElementById("trafficMap").src=googleMapsBaseUrl+"&q="+traffic[e].lat+","+traffic[e].lon+"&zoom=6&maptype=satellite",void 0!=traffic[e].blockedCount&&traffic[e].blockedCount>0&&(r="alertText",s="(This IP has been blocked by other users!)",document.getElementById("trafficBlockedCount").innerHTML='<span class="'+r+'">Total Times Blocked: '+traffic[e].blockedCount+"</span>");for(var l in traffic[e])isNaN(l)||("22"==l?(r="severeWarnText",s="(Privledged Access Port 22 In Use)",document.getElementById("trafficPorts").innerHTML+="<div class='"+r+"'>Port "+l+" Count: "+traffic[e][l]+"</div>"):document.getElementById("trafficPorts").innerHTML+="<div>Port "+l+" Count: "+traffic[e][l]+"</div>");document.getElementById("trafficIp").innerHTML='<span class="'+r+'">'+e+" "+s+"</span>",document.getElementById("trafficCountry").innerHTML="Country: "+traffic[e].country,document.getElementById("trafficStateProv").innerHTML="State/Province: "+traffic[e].state,document.getElementById("trafficCity").innerHTML="City: "+traffic[e].city,document.getElementById("trafficCoordinates").innerHTML="Coordinates: "+traffic[e].lat+","+traffic[e].lon,document.getElementById("trafficLocalTime").innerHTML="Local Time: "+new Date,document.getElementById("detailsBodyMetrics").style.display="none",document.getElementById("detailsBodyTraffic").style.display="block",document.getElementById("paneMiddle").className+=" openPane"}function getApiGatewayLogs(e){function n(e,n,a){if(void 0==a)for(var i=0;i<e.items.length;i++)!function(e,n){var a={};a.id=e.id,a.name=e.name,a.description=e.description,a.region=n.config.region,a.type="apigateway",a.cloud="aws",a.stages=[],apiGatewayInventoryQueue[e.id]=a,apiGatewayStagesTarget++;var i={restApiId:e.id};n.getStages(i,function(n,a){n?t(null,null,n):t(a,e.id)})}(e.items[i],n);else console.log(a,a.stack);apiGatewayObjectActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function t(e,n,t){if(void 0==t)for(var i=0;i<e.item.length;i++)apiGatewayInventoryQueue[n].stages.push(e.item[i].stageName),isDeviceFilteredOut(n+"/"+e.item[i].stageName)||a(n,e.item[i].stageName);else console.log(t,t.stack);apiGatewayStagesActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function a(e,n,t){var a=apiGatewayCloudWatchLogsPrefix+e+"/"+n;apiGatewayConnectionTarget++;var r={logGroupName:a,endTime:o.getTime(),filterPattern:"Method - Starting - HTTP - path - query - body - Endpoint - Execution - response",interleaved:!0,limit:1e4,startTime:i.getTime()};cloudWatchLogs.filterLogEvents(r,function(e,n){e?console.log(e,e.stack):getConnections(a,n)})}if(!simulatorOn){ipGatewayLogRetrivalInProgress=!0,apiGatewayObjectTarget=APIGatewayObjects.length,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0;var i=new Date(e.getTime());i.setSeconds(i.getSeconds()-trafficWindowSeconds);for(var o=e,r={},s=0;s<APIGatewayObjects.length;s++)!function(e){e.getRestApis(r,function(t,a){t?n(null,null,t):n(a,e)})}(APIGatewayObjects[s])}}function getConnections(e,n){console.log("getting connections"),console.log(n);var t={};t.type="apiGateway",t.id=e.substring(apiGatewayCloudWatchLogsPrefix.length,e.length);for(var a=0;a<trafficQueue.length;a++)if(trafficQueue[a].id==t.id){t=trafficQueue[a];break}void 0==t.connections&&(t.connections=[],t.responses=[],trafficQueue.push(t));for(var i,o,r,s,l,c="",d="",u={},p=0;p<n.events.length;p++)if(c=n.events[p].message,d=c.substring(1,c.indexOf(")")),-1!=c.indexOf("Method request headers:")){u[d]={},u[d].id=d,u[d].start=n.events[p].timestamp;var m=testOnly[Math.round(23*Math.random())];console.log(m),u[d].ip=m,i=(i=c.substring(c.indexOf("X-Forwarded-Port=")+"X-Forwarded-Port=".length,c.length)).substring(0,i.indexOf(",")),u[d].port=i,o=(o=c.substring(c.indexOf("CloudFront-Is-Tablet-Viewer=")+"CloudFront-Is-Tablet-Viewer=".length,c.length)).substring(0,o.indexOf(",")),u[d].tablet=o,r=(r=c.substring(c.indexOf("CloudFront-Is-Mobile-Viewer=")+"CloudFront-Is-Mobile-Viewer=".length,c.length)).substring(0,r.indexOf(",")),u[d].mobile=r,s=(s=c.substring(c.indexOf("CloudFront-Is-SmartTV-Viewer=")+"CloudFront-Is-SmartTV-Viewer=".length,c.length)).substring(0,s.indexOf(",")),u[d].smartTV=s,l=(l=c.substring(c.indexOf("Accept-Language=")+"Accept-Language=".length,c.length)).substring(0,l.indexOf(",")),u[d].language=l,u[d].desktop=c.substring(c.indexOf("CloudFront-Is-Desktop-Viewer=")+"CloudFront-Is-Desktop-Viewer=".length,c.length-1),u[d].userAgent=c.substring(c.indexOf("User-Agent=")+"User-Agent=".length,c.indexOf(", X-Forwarded-Proto"))}else-1!=c.indexOf("Method completed with status:")&&(void 0==u[d]&&(u[d]={},u[d].id=d),u[d].responseCode=c.substring(c.indexOf("Method completed with status:")+"Method completed with status:".length+1,c.length),u[d].end=n.events[p].timestamp);var h=null;for(var g in u)if(void 0!=u[g].ip&&void 0!=u[g].responseCode&&void 0!=u[g].start&&void 0!=u[g].end){for(var y=0;y<t.connections.length;y++)if(t.connections[y].ip==u[g].ip){h=t.connections[y];break}if(null==h){(h={}).ip=m,h.details=[];var f=getDataFromIpMappingByIp(m);void 0==f?ipLookUpQueue.push(m):(h.lat=f.lat,h.lon=f.lon,h.country=f.country,h.stateRegion=f.stateRegion,h.city=f.city),t.connections.push(h)}void 0!=connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]&&(u[g].processed=!0),h.details.push(u[g]),connectionDetailKeys[t.id+"|"+m+"|"+u[g].start]={}}apiGatewayConnectionActual++,areApiGatewayLogsRetrieved()&&(loadApiGatewayInventory(),lookUpIpsInQueue())}function areApiGatewayLogsRetrieved(){return apiGatewayObjectTarget==apiGatewayObjectActual&&apiGatewayStagesTarget==apiGatewayStagesActual&&apiGatewayConnectionTarget==apiGatewayConnectionActual}function loadApiGatewayInventory(){var e=[];for(var n in apiGatewayInventoryQueue)for(var t=0;t<apiGatewayInventoryQueue[n].stages.length;t++)if(void 0==inventory.apigateway||void 0==inventory.apigateway[n+"/"+apiGatewayInventoryQueue[n].stages[t]]){var a=JSON.parse(JSON.stringify(apiGatewayInventoryQueue[n]));a.id=n+"/"+apiGatewayInventoryQueue[n].stages[t],e.push(a);var i={};i.len=100,i.color="#00adef",i.id=a.id,i.label=a.name+" ("+apiGatewayInventoryQueue[n].stages[t]+")",scatterCircleGraphInstanceArray.push(i)}apiGatewayInventoryQueue=[],e.length>0&&(globe.load("inventory",e),startScatterGraphAnimations())}function authenticate(e,n){$.ajax({url:baseUrl,type:"POST",contentType:"application/json",data:JSON.stringify({u:e,p:n}),dataType:"json",success:function(e){var n=JSON.parse(e);AWS.config.update({accessKeyId:n.userAccount.AccessKeyId,secretAccessKey:n.userAccount.SecretAccessKey,sessionToken:n.userAccount.SessionToken,region:loginRegion}),s3=new AWS.S3({apiVersion:"2006-03-01"}),cloudWatchLogs=new AWS.CloudWatchLogs({apiVersion:"2014-03-28"}),APIGatewayObjects=[new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-east-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"us-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ca-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-central-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"eu-west-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-northeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-southeast-2"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"ap-south-1"}),new AWS.APIGateway({apiVersion:"2015-07-09",region:"sa-east-1"})],cloudWatchObjects=[new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-east-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"us-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ca-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-central-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"eu-west-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-northeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-southeast-2"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"ap-south-1"}),new AWS.CloudWatch({apiVersion:"2010-08-01",region:"sa-east-1"})],appAccountConf=n.appAccount,appAccountS3=new AWS.S3({apiVersion:"2006-03-01",credentials:new AWS.Credentials(appAccountConf.AccessKeyId,appAccountConf.SecretAccessKey,appAccountConf.SessionToken)});var t=new Date;if(t.setHours(t.getHours()-24),null==localStorage.getItem("dataRefreshDate")||forceIpKeyRefresh||new Date(localStorage.getItem("dataRefreshDate"))>t){var a={Bucket:"central-sky-ips",Key:"list.json"};appAccountS3.getObject(a,function(e,n){e?console.log(e,e.stack):cacheIpFileKeys(JSON.parse(n.Body))})}null==localStorage.getItem("blocksCached")&&localStorage.setItem("blocksCached","{}"),loginAndLoadInventory()},error:function(e){alert("error="+e)}})}function cacheIpFileKeys(e){console.log("loading keys");for(var n=0;n<e.length;n++)localStorage.setItem(e[n],e[n]);localStorage.setItem("dataRefreshDate",(new Date).getTime())}function lookUpIpsInQueue(){for(var e,n=0;n<ipLookUpQueue.length;n++)e=localStorage.getItem(ipLookUpQueue[n].substring(0,ipLookUpQueue[n].indexOf("."))),console.log("key="+e),void 0!=e&&void 0==ipKeysCached[e]&&void 0==ipKeyCallsQueued[e]&&(ipKeyCallsQueued[e]={},getIpFiles(e));drawUpdates(),lastTrafficRefreshTime=new Date((new Date).getTime()-timeOffset),ipGatewayLogRetrivalInProgress=!1}function addIpsFromDBtoMap(e,n,t){var a;if(null!=e){for(var i=e.split("\r\n"),o=[],r=0;r<i.length;r++)if((o=i[r].split(",")).length>2){a=o[0].replace(/"/gi,"")+"-"+o[1].replace(/"/gi,""),ipMappings[a]={},ipMappings[a].country=o[2].replace(/"/gi,""),ipMappings[a].stateRegion=o[3].replace(/"/gi,""),ipMappings[a].city=o[4].replace(/"/gi,""),ipMappings[a].lat=o[5].replace(/"/gi,""),ipMappings[a].lon=o[6].replace(/"/gi,"");var s=JSON.parse(localStorage.getItem("blocksCached"));null==s&&(s={}),s[a]={},localStorage.setItem(a,JSON.stringify(ipMappings[a])),localStorage.setItem("blocksCached",JSON.stringify(s))}ipKeysCached[n]={},ipKeyCallsQueued[n]=void 0}else console.log(t,t.stack);ipKeysReturned++;var l;if(ipKeysCalled==ipKeysReturned){for(var c=0;c<trafficQueue.length;c++){console.log(trafficQueue[c]);for(var d=0;d<trafficQueue[c].connections.length;d++)console.log(trafficQueue[c].connections),void 0==trafficQueue[c].connections[d].lat&&(l=getDataFromIpMappingByIp(trafficQueue[c].connections[d].ip),trafficQueue[c].connections[d].lat=l.lat,trafficQueue[c].connections[d].lon=l.lon,trafficQueue[c].connections[d].country=l.country,trafficQueue[c].connections[d].stateRegion=l.stateRegion,trafficQueue[c].connections[d].city=l.city)}console.log("Ip lookup queue emptied"),ipLookUpQueue=[]}}function getIpFiles(e){ipKeysCalled++;var n={Bucket:"central-sky-ips",Key:e+".txt"};appAccountS3.getObject(n,function(n,t){n?addIpsFromDBtoMap(null,null,n):addIpsFromDBtoMap(new TextDecoder("utf-8").decode(t.Body),e)})}function loginAndLoadInventory(){document.getElementById("mainOverlays").style.visibility="visible",document.getElementById("loginOverlay").style.display="none",globe.runLoginAnimation(),slidePanes("in"),setTimeout(function(){setTimeout(function(){setTimeout(function(){startClock(),getLogs(),drawUpdates()},500)},500)},1e3),getBilling()}function getAWSInvetory(){var e={FunctionName:"CentralSky_GetInventory",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),initialLoad&&(getAWSMetrics(),getAWSLoggedMetrics(),getAWSEC2Traffic(),initialLoad=!1),globe.load("inventory",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSInvetory()},getAWSInventoryInterval)})}function getAWSMetrics(){var e={FunctionName:"CentralSky_GetMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSMetrics()},getAWSMetricsInterval)})}function getAWSLoggedMetrics(){var e={FunctionName:"CentralSky_GetLoggedMetrics",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){console.log(JSON.parse(n.Payload)),globe.load("metrics",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSLoggedMetrics()},getAWSLoggedMetricsInterval)})}function getAWSBilling(){var e={FunctionName:"CentralSky_GetBilling",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){globe.load("billing",[JSON.parse(n.Payload)]),setTimeout(function(){1==lambdaEnable&&getAWSBilling()},getAWSBillingInterval)})}function getAWSEC2Traffic(){var e={FunctionName:"CentralSky_GetConnections",InvocationType:"RequestResponse",Payload:JSON.stringify({token:AWS.config.credentials.sessionToken})};lambda.invoke(e,function(e,n){for(console.log(JSON.parse(n.Payload)),t=0;t<trafficObjectIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficObjectIds[t]));trafficObjectIds=[];for(var t=0;t<trafficPointIds.length;t++)globe.scene.remove(globe.scene.getObjectByName(trafficPointIds[t]));trafficPointIds=[],globe.load("traffic",JSON.parse(n.Payload)),setTimeout(function(){1==lambdaEnable&&getAWSEC2Traffic()},getAWSEC2TrafficInterval)})}function blockIp(){var e=document.getElementById("trafficIp").innerHTML;e=e.substring(e.indexOf(">")+1,e.indexOf("</")).trim();var n={FunctionName:"CentralSky_BlockConnection",InvocationType:"RequestResponse",Payload:JSON.stringify({ip:e,token:AWS.config.credentials.sessionToken})};lambda.invoke(n,function(n,t){console.log(JSON.parse(t.Payload)),null==JSON.parse(t.Payload)&&console.log(e+" blocked!")})}function getBilling(){if(simulatorOn)globe.load("billing",["2.50"]);else{var e=new Date;e.setTime(e.getTime()-288e5);var n={MetricName:"EstimatedCharges",Namespace:"AWS/Billing",Dimensions:[{Name:"Currency",Value:"USD"}],Period:60,StartTime:e.toISOString(),EndTime:(new Date).toISOString(),Statistics:["Average"]};cloudWatchObjects[0].getMetricStatistics(n,function(e,n){e?console.log(e,e.stack):globe.load("billing",[n.Datapoints[0].Average])})}}var iso2iso3={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",CV:"CPV",KH:"KHM",CM:"CMR",CA:"CAN",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"},iso3iso2={AFG:"AF",ALA:"AX",ALB:"AL",DZA:"DZ",ASM:"AS",AND:"AD",AGO:"AO",AIA:"AI",ATA:"AQ",ATG:"AG",ARG:"AR",ARM:"AM",ABW:"AW",AUS:"AU",AUT:"AT",AZE:"AZ",BHS:"BS",BHR:"BH",BGD:"BD",BRB:"BB",BLR:"BY",BEL:"BE",BLZ:"BZ",BEN:"BJ",BMU:"BM",BTN:"BT",BOL:"BO",BES:"BQ",BIH:"BA",BWA:"BW",BVT:"BV",BRA:"BR",IOT:"IO",BRN:"BN",BGR:"BG",BFA:"BF",BDI:"BI",CPV:"CV",KHM:"KH",CMR:"CM",CAN:"CA",CYM:"KY",CAF:"CF",TCD:"TD",CHL:"CL",CHN:"CN",CXR:"CX",CCK:"CC",COL:"CO",COM:"KM",COG:"CG",COD:"CD",COK:"CK",CRI:"CR",CIV:"CI",HRV:"HR",CUB:"CU",CUW:"CW",CYP:"CY",CZE:"CZ",DNK:"DK",DJI:"DJ",DMA:"DM",DOM:"DO",ECU:"EC",EGY:"EG",SLV:"SV",GNQ:"GQ",ERI:"ER",EST:"EE",ETH:"ET",FLK:"FK",FRO:"FO",FJI:"FJ",FIN:"FI",FRA:"FR",GUF:"GF",PYF:"PF",ATF:"TF",GAB:"GA",GMB:"GM",GEO:"GE",DEU:"DE",GHA:"GH",GIB:"GI",GRC:"GR",GRL:"GL",GRD:"GD",GLP:"GP",GUM:"GU",GTM:"GT",GGY:"GG",GIN:"GN",GNB:"GW",GUY:"GY",HTI:"HT",HMD:"HM",VAT:"VA",HND:"HN",HKG:"HK",HUN:"HU",ISL:"IS",IND:"IN",IDN:"ID",IRN:"IR",IRQ:"IQ",IRL:"IE",IMN:"IM",ISR:"IL",ITA:"IT",JAM:"JM",JPN:"JP",JEY:"JE",JOR:"JO",KAZ:"KZ",KEN:"KE",KIR:"KI",PRK:"KP",KOR:"KR",KWT:"KW",KGZ:"KG",LAO:"LA",LVA:"LV",LBN:"LB",LSO:"LS",LBR:"LR",LBY:"LY",LIE:"LI",LTU:"LT",LUX:"LU",MAC:"MO",MKD:"MK",MDG:"MG",MWI:"MW",MYS:"MY",MDV:"MV",MLI:"ML",MLT:"MT",MHL:"MH",MTQ:"MQ",MRT:"MR",MUS:"MU",MYT:"YT",MEX:"MX",FSM:"FM",MDA:"MD",MCO:"MC",MNG:"MN",MNE:"ME",MSR:"MS",MAR:"MA",MOZ:"MZ",MMR:"MM",NAM:"NA",NRU:"NR",NPL:"NP",NLD:"NL",NCL:"NC",NZL:"NZ",NIC:"NI",NER:"NE",NGA:"NG",NIU:"NU",NFK:"NF",MNP:"MP",NOR:"NO",OMN:"OM",PAK:"PK",PLW:"PW",PSE:"PS",PAN:"PA",PNG:"PG",PRY:"PY",PER:"PE",PHL:"PH",PCN:"PN",POL:"PL",PRT:"PT",PRI:"PR",QAT:"QA",REU:"RE",ROU:"RO",RUS:"RU",RWA:"RW",BLM:"BL",SHN:"SH",KNA:"KN",LCA:"LC",MAF:"MF",SPM:"PM",VCT:"VC",WSM:"WS",SMR:"SM",STP:"ST",SAU:"SA",SEN:"SN",SRB:"RS",SYC:"SC",SLE:"SL",SGP:"SG",SXM:"SX",SVK:"SK",SVN:"SI",SLB:"SB",SOM:"SO",ZAF:"ZA",SGS:"GS",SSD:"SS",ESP:"ES",LKA:"LK",SDN:"SD",SUR:"SR",SJM:"SJ",SWZ:"SZ",SWE:"SE",CHE:"CH",SYR:"SY",TWN:"TW",TJK:"TJ",TZA:"TZ",THA:"TH",TLS:"TL",TGO:"TG",TKL:"TK",TON:"TO",TTO:"TT",TUN:"TN",TUR:"TR",TKM:"TM",TCA:"TC",TUV:"TV",UGA:"UG",UKR:"UA",ARE:"AE",GBR:"GB",USA:"US",UMI:"UM",URY:"UY",UZB:"UZ",VUT:"VU",VEN:"VE",VNM:"VN",VGB:"VG",VIR:"VI",WLF:"WF",ESH:"EH",YEM:"YE",ZMB:"ZM",ZWE:"ZW"},countryNameIso2={Afghanistan:"AF","Aland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua And Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO","Bosnia And Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Congo, Democratic Republic":"CD","Cook Islands":"CK","Costa Rica":"CR","Cote D'Ivoire":"CI",Croatia:"HR",Cuba:"CU",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island & Mcdonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID","Iran, Islamic Republic Of":"IR",Iraq:"IQ",Ireland:"IE","Isle Of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI",Korea:"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR","Libyan Arab Jamahiriya":"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX","Micronesia, Federated States Of":"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","Netherlands Antilles":"AN","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory, Occupied":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA",Reunion:"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthelemy":"BL","Saint Helena":"SH","Saint Kitts And Nevis":"KN","Saint Lucia":"LC","Saint Martin":"MF","Saint Pierre And Miquelon":"PM","Saint Vincent And Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome And Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia And Sandwich Isl.":"GS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard And Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad And Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks And Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE",Vietnam:"VN","Virgin Islands, British":"VG","Virgin Islands, U.S.":"VI","Wallis And Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},iso2CountryName={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},USState2iso={Alabama:"AL",Alaska:"AK","American Samoa":"AS",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE","District Of Columbia":"DC","Federated States Of Micronesia":"FM",Florida:"FL",Georgia:"GA",Guam:"GU",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansas:"KS",Kentucky:"KY",Louisiana:"LA",Maine:"ME","Marshall Islands":"MH",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV","New Hampshire":"NH","New Jersey":"NJ","New Mexico":"NM","New York":"NY","North Carolina":"NC","North Dakota":"ND","Northern Mariana Islands":"MP",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Palau:"PW",Pennsylvania:"PA","Puerto Rico":"PR","Rhode Island":"RI","South Carolina":"SC","South Dakota":"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT","Virgin Islands":"VI",Virginia:"VA",Washington:"WA","West Virginia":"WV",Wisconsin:"WI",Wyoming:"WY"},countryResponseObjects=[],countryResponseUpdatedObjects={},countryTimeLineGraphs={},countryDataFrames=50,countryGraphsMax=10,countryResponseGraphWidth=100,countryResponseGraphHeight=60,countryResponseGraphRadius=Math.min(countryResponseGraphWidth,countryResponseGraphHeight)/2,countryResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),countryResponseGraphArc=d3.svg.arc().outerRadius(.7*countryResponseGraphRadius).innerRadius(.65*countryResponseGraphRadius),countryResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*countryResponseGraphRadius).innerRadius(.4*countryResponseGraphRadius),countryResponseGraphArcInner=d3.svg.arc().outerRadius(.35*countryResponseGraphRadius).innerRadius(.3*countryResponseGraphRadius),countryResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),countryResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),countryResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),valueMobile=0,valueTablet=0,valueMonitor=0,deviceCircleGraphWidth=150,deviceCircleGraphHeight=75,deviceCircleGraphRadius=Math.min(deviceCircleGraphWidth,deviceCircleGraphHeight)/1.5,deviceCircleGraphMobile=d3.select("#deviceCircleGraphMobile").append("svg").append("g"),deviceCircleGraphTablet=d3.select("#deviceCircleGraphTablet").append("svg").append("g"),deviceCircleGraphMonitor=d3.select("#deviceCircleGraphMonitor").append("svg").append("g");deviceCircleGraphMobile.append("g").attr("class","slices"),deviceCircleGraphTablet.append("g").attr("class","slices"),deviceCircleGraphMonitor.append("g").attr("class","slices");var pie=d3.layout.pie().sort(null).value(function(e){return e.value}),key=function(e){return e.data.label},arcDevice=d3.svg.arc().outerRadius(.8*deviceCircleGraphRadius).innerRadius(.78*deviceCircleGraphRadius),outerArcDevice=d3.svg.arc().innerRadius(.9*deviceCircleGraphRadius).outerRadius(.9*deviceCircleGraphRadius);deviceCircleGraphMobile.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphTablet.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphMonitor.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)");var deviceCircleGraphColorMobile=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorTablet=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorMonitor=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),endPointResponseObjects=[],endPointResponseUpdatedObjects={},endPointTimeLineGraphs={},endPointTimeLineResponseTimeGraphs={},endPointDataFrames=50,endPointGraphsMax=6,endPointResponseGraphWidth=100,endPointResponseGraphHeight=60,endPointResponseGraphRadius=Math.min(endPointResponseGraphWidth,endPointResponseGraphHeight)/2,endPointResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),endPointResponseGraphArc=d3.svg.arc().outerRadius(.7*endPointResponseGraphRadius).innerRadius(.65*endPointResponseGraphRadius),endPointResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*endPointResponseGraphRadius).innerRadius(.4*endPointResponseGraphRadius),endPointResponseGraphArcInner=d3.svg.arc().outerRadius(.35*endPointResponseGraphRadius).innerRadius(.3*endPointResponseGraphRadius),endPointResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),endPointResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),endPointResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),graphTotals={},endPointHealthGraphs=[],endPoints={},endPointHealthGraphsFrameCount=0,endPointHealthGraphId,lineGraphs=[];createNewLineGraph("Connections","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Unique IPs","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Success","responseLineGraphs","area","third",color123,"rgba(256,256,256,0.3)",.5),createNewLineGraph("Rejected","responseLineGraphs","area","third",color4xx,"rgba(209, 102, 6,0.3)",.5),createNewLineGraph("Error","responseLineGraphs","area","third",color5xx,"rgba(256,0,0,0.3)",.5);var mapLargeScope="world",mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,map=new Datamap({element:document.getElementById("dataMapContainer"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.1,popupOnHover:!1,highlightOnHover:!1}}),mapLargeWorld=new Datamap({element:document.getElementById("dataMapContainerLargeWorld"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),mapLargeUSA=new Datamap({element:document.getElementById("dataMapContainerLargeUSA"),fills:{defaultFill:"transparent"},data:{},scope:"usa",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),responseCodeGraphSvg=d3.select("#responseCodeGraph").append("svg").append("g");responseCodeGraphSvg.append("g").attr("class","slices"),responseCodeGraphSvg.append("g").attr("class","labels"),responseCodeGraphSvg.append("g").attr("class","lines");var responseCodeGraphWidth=275,responseCodeGraphHeight=150,responseCodeGraphRadius=Math.min(responseCodeGraphWidth,responseCodeGraphHeight)/2,responseCodeGraphArc=d3.svg.arc().outerRadius(.8*responseCodeGraphRadius).innerRadius(.75*responseCodeGraphRadius),responseCodeGraphOuterArc=d3.svg.arc().innerRadius(.9*responseCodeGraphRadius).outerRadius(.9*responseCodeGraphRadius);responseCodeGraphSvg.attr("transform","translate("+responseCodeGraphWidth/2+","+responseCodeGraphHeight/2+")");var responseCodeGraphColor=d3.scale.ordinal().domain(["Success","Rejected","Error"]).range([color123,color4xx,color5xx]),scatterCircleGraphWidth=420,scatterCircleGraphHeight=420,deviceScatterGraph=new Circos({container:"#circleScatterGraph",width:scatterCircleGraphWidth,height:scatterCircleGraphHeight}),scatterCircleGraphInstanceArray=[],deviceScatterData=[],timeLineGraph=new Rickshaw.Graph({element:document.getElementById("timeLine"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar",unstack:!0},{name:"5xx",color:color5xx,renderer:"bar",unstack:!0},{name:"123xx",color:color123,renderer:"bar",unstack:!0}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),timeLineGraphLatency=new Rickshaw.Graph({element:document.getElementById("timeLineLatency"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"Latency",color:"#00adef",renderer:"line",strokeWidth:1},{name:"LatencyArea",color:"rgba(0,133,199,0.2)",renderer:"area"}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),axesTime=new Rickshaw.Graph.Axis.Time({graph:timeLineGraph});axesTime.render();var axes=new Rickshaw.Graph.Axis.Y({graph:timeLineGraph,pixelsPerTick:30,ticksTreatment:"inverse"});axes.render();var hoverDetail=new Rickshaw.Graph.HoverDetail({graph:timeLineGraph,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}}),hoverDetailLatency=new Rickshaw.Graph.HoverDetail({graph:timeLineGraphLatency,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}});timeLineGraph.update(),timeLineGraphLatency.update();var trafficPointCount=0,apiGatewayCloudWatchLogsPrefix="API-Gateway-Execution-Logs_",apiGatewayObjectTarget=0,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0,apiGatewayInventoryQueue={},loginRegion="us-east-1",credentialExpirationDate,lastMetricCall=0,getAWSInventoryInterval=5e3,getAWSMetricsInterval=3e5,getAWSLoggedMetricsInterval=6e4,getAWSBillingInterval=216e5,getAWSEC2TrafficInterval=5e3,initialLoad=!0,baseUrl="https://pqhzr7kno2.execute-api.us-east-1.amazonaws.com/dev/",a,s,t,s3,cloudWatchLogs,cloudWatchObjects,APIGatewayObjects,appAccountS3,appAccountConf,centroids={Andorra:{lat:42.546245,lon:1.601554},"United Arab Emirates":{lat:23.424076,lon:53.847818},Afghanistan:{lat:33.93911,lon:67.709953},"Antigua and Barbuda":{lat:17.060816,lon:-61.796428},Anguilla:{lat:18.220554,lon:-63.068615},Albania:{lat:41.153332,lon:20.168331},Armenia:{lat:40.069099,lon:45.038189},"Netherlands Antilles":{lat:12.226079,lon:-69.060087},Angola:{lat:-11.202692,lon:17.873887},Antarctica:{lat:-75.250973,lon:-.071389},Argentina:{lat:-38.416097,lon:-63.616672},"American Samoa":{lat:-14.270972,lon:-170.132217},Austria:{lat:47.516231,lon:14.550072},Australia:{lat:-25.274398,lon:133.775136},Aruba:{lat:12.52111,lon:-69.968338},Azerbaijan:{lat:40.143105,lon:47.576927},"Bosnia and Herzegovina":{lat:43.915886,lon:17.679076},Barbados:{lat:13.193887,lon:-59.543198},Bangladesh:{lat:23.684994,lon:90.356331},Belgium:{lat:50.503887,lon:4.469936},"Burkina Faso":{lat:12.238333,lon:-1.561593},Bulgaria:{lat:42.733883,lon:25.48583},Bahrain:{lat:25.930414,lon:50.637772},Burundi:{lat:-3.373056,lon:29.918886},Benin:{lat:9.30769,lon:2.315834},Bermuda:{lat:32.321384,lon:-64.75737},Brunei:{lat:4.535277,lon:114.727669},Bolivia:{lat:-16.290154,lon:-63.588653},Brazil:{lat:-14.235004,lon:-51.92528},Bahamas:{lat:25.03428,lon:-77.39628},Bhutan:{lat:27.514162,lon:90.433601},"Bouvet Island":{lat:-54.423199,lon:3.413194},Botswana:{lat:-22.328474,lon:24.684866},Belarus:{lat:53.709807,lon:27.953389},Belize:{lat:17.189877,lon:-88.49765},Canada:{lat:56.130366,lon:-106.346771},"Cocos [Keeling] Islands":{lat:-12.164165,lon:96.870956},"Congo [DRC]":{lat:-4.038333,lon:21.758664},"Central African Republic":{lat:6.611111,lon:20.939444},"Congo [Republic]":{lat:-.228021,lon:15.827659},Switzerland:{lat:46.818188,lon:8.227512},"Côte d'Ivoire":{lat:7.539989,lon:-5.54708},"Cook Islands":{lat:-21.236736,lon:-159.777671},Chile:{lat:-35.675147,lon:-71.542969},Cameroon:{lat:7.369722,lon:12.354722},China:{lat:35.86166,lon:104.195397},Colombia:{lat:4.570868,lon:-74.297333},"Costa Rica":{lat:9.748917,lon:-83.753428},Cuba:{lat:21.521757,lon:-77.781167},"Cape Verde":{lat:16.002082,lon:-24.013197},"Christmas Island":{lat:-10.447525,lon:105.690449},Cyprus:{lat:35.126413,lon:33.429859},"Czech Republic":{lat:49.817492,lon:15.472962},Germany:{lat:51.165691,lon:10.451526},Djibouti:{lat:11.825138,lon:42.590275},Denmark:{lat:56.26392,lon:9.501785},Dominica:{lat:15.414999,lon:-61.370976},"Dominican Republic":{lat:18.735693,lon:-70.162651},Algeria:{lat:28.033886,lon:1.659626},Ecuador:{lat:-1.831239,lon:-78.183406},Estonia:{lat:58.595272,lon:25.013607},Egypt:{lat:26.820553,lon:30.802498},"Western Sahara":{lat:24.215527,lon:-12.885834},Eritrea:{lat:15.179384,lon:39.782334},Spain:{lat:40.463667,lon:-3.74922},Ethiopia:{lat:9.145,lon:40.489673},Finland:{lat:61.92411,lon:25.748151},Fiji:{lat:-16.578193,lon:179.414413},"Falkland Islands [Islas Malvinas]":{lat:-51.796253,lon:-59.523613},Micronesia:{lat:7.425554,lon:150.550812},"Faroe Islands":{lat:61.892635,lon:-6.911806},France:{lat:46.227638,lon:2.213749},Gabon:{lat:-.803689,lon:11.609444},"United Kingdom":{lat:55.378051,lon:-3.435973},Grenada:{lat:12.262776,lon:-61.604171},Georgia:{lat:42.315407,lon:43.356892},"French Guiana":{lat:3.933889,lon:-53.125782},Guernsey:{lat:49.465691,lon:-2.585278},Ghana:{lat:7.946527,lon:-1.023194},Gibraltar:{lat:36.137741,lon:-5.345374},Greenland:{lat:71.706936,lon:-42.604303},Gambia:{lat:13.443182,lon:-15.310139},Guinea:{lat:9.945587,lon:-9.696645},Guadeloupe:{lat:16.995971,lon:-62.067641},"Equatorial Guinea":{lat:1.650801,lon:10.267895},Greece:{lat:39.074208,lon:21.824312},"South Georgia and the South Sandwich Islands":{lat:-54.429579,lon:-36.587909},Guatemala:{lat:15.783471,lon:-90.230759},Guam:{lat:13.444304,lon:144.793731},"Guinea-Bissau":{lat:11.803749,lon:-15.180413},Guyana:{lat:4.860416,lon:-58.93018},"Gaza Strip":{lat:31.354676,lon:34.308825},"Hong Kong":{lat:22.396428,lon:114.109497},"Heard Island and McDonald Islands":{lat:-53.08181,lon:73.504158},Honduras:{lat:15.199999,lon:-86.241905},Croatia:{lat:45.1,lon:15.2},Haiti:{lat:18.971187,lon:-72.285215},Hungary:{lat:47.162494,lon:19.503304},Indonesia:{lat:-.789275,lon:113.921327},Ireland:{lat:53.41291,lon:-8.24389},Israel:{lat:31.046051,lon:34.851612},"Isle of Man":{lat:54.236107,lon:-4.548056},India:{lat:20.593684,lon:78.96288},"British Indian Ocean Territory":{lat:-6.343194,lon:71.876519},Iraq:{lat:33.223191,lon:43.679291},Iran:{lat:32.427908,lon:53.688046},Iceland:{lat:64.963051,lon:-19.020835},Italy:{lat:41.87194,lon:12.56738},Jersey:{lat:49.214439,lon:-2.13125},Jamaica:{lat:18.109581,lon:-77.297508},Jordan:{lat:30.585164,lon:36.238414},Japan:{lat:36.204824,lon:138.252924},Kenya:{lat:-.023559,lon:37.906193},Kyrgyzstan:{lat:41.20438,lon:74.766098},Cambodia:{lat:12.565679,lon:104.990963},Kiribati:{lat:-3.370417,lon:-168.734039},Comoros:{lat:-11.875001,lon:43.872219},"Saint Kitts and Nevis":{lat:17.357822,lon:-62.782998},"North Korea":{lat:40.339852,lon:127.510093},"South Korea":{lat:35.907757,lon:127.766922},Kuwait:{lat:29.31166,lon:47.481766},"Cayman Islands":{lat:19.513469,lon:-80.566956},Kazakhstan:{lat:48.019573,lon:66.923684},Laos:{lat:19.85627,lon:102.495496},Lebanon:{lat:33.854721,lon:35.862285},"Saint Lucia":{lat:13.909444,lon:-60.978893},Liechtenstein:{lat:47.166,lon:9.555373},"Sri Lanka":{lat:7.873054,lon:80.771797},Liberia:{lat:6.428055,lon:-9.429499},Lesotho:{lat:-29.609988,lon:28.233608},Lithuania:{lat:55.169438,lon:23.881275},Luxembourg:{lat:49.815273,lon:6.129583},Latvia:{lat:56.879635,lon:24.603189},Libya:{lat:26.3351,lon:17.228331},Morocco:{lat:31.791702,lon:-7.09262},Monaco:{lat:43.750298,lon:7.412841},Moldova:{lat:47.411631,lon:28.369885},Montenegro:{lat:42.708678,lon:19.37439},Madagascar:{lat:-18.766947,lon:46.869107},"Marshall Islands":{lat:7.131474,lon:171.184478},"Macedonia [FYROM]":{lat:41.608635,lon:21.745275},Mali:{lat:17.570692,lon:-3.996166},"Myanmar [Burma]":{lat:21.913965,lon:95.956223},Mongolia:{lat:46.862496,lon:103.846656},Macau:{lat:22.198745,lon:113.543873},"Northern Mariana Islands":{lat:17.33083,lon:145.38469},Martinique:{lat:14.641528,lon:-61.024174},Mauritania:{lat:21.00789,lon:-10.940835},Montserrat:{lat:16.742498,lon:-62.187366},Malta:{lat:35.937496,lon:14.375416},Mauritius:{lat:-20.348404,lon:57.552152},Maldives:{lat:3.202778,lon:73.22068},Malawi:{lat:-13.254308,lon:34.301525},Mexico:{lat:23.634501,lon:-102.552784},Malaysia:{lat:4.210484,lon:101.975766},Mozambique:{lat:-18.665695,lon:35.529562},Namibia:{lat:-22.95764,lon:18.49041},"New Caledonia":{lat:-20.904305,lon:165.618042},Niger:{lat:17.607789,lon:8.081666},"Norfolk Island":{lat:-29.040835,lon:167.954712},Nigeria:{lat:9.081999,lon:8.675277},Nicaragua:{lat:12.865416,lon:-85.207229},Netherlands:{lat:52.132633,lon:5.291266},Norway:{lat:60.472024,lon:8.468946},Nepal:{lat:28.394857,lon:84.124008},Nauru:{lat:-.522778,lon:166.931503},Niue:{lat:-19.054445,lon:-169.867233},"New Zealand":{lat:-40.900557,lon:174.885971},Oman:{lat:21.512583,lon:55.923255},Panama:{lat:8.537981,lon:-80.782127},Peru:{lat:-9.189967,lon:-75.015152},"French Polynesia":{lat:-17.679742,lon:-149.406843},"Papua New Guinea":{lat:-6.314993,lon:143.95555},Philippines:{lat:12.879721,lon:121.774017},Pakistan:{lat:30.375321,lon:69.345116},Poland:{lat:51.919438,lon:19.145136},"Saint Pierre and Miquelon":{lat:46.941936,lon:-56.27111},"Pitcairn Islands":{lat:-24.703615,lon:-127.439308},"Puerto Rico":{lat:18.220833,lon:-66.590149},"Palestinian Territories":{lat:31.952162,lon:35.233154},Portugal:{lat:39.399872,lon:-8.224454},Palau:{lat:7.51498,lon:134.58252},Paraguay:{lat:-23.442503,lon:-58.443832},Qatar:{lat:25.354826,lon:51.183884},"Réunion":{lat:-21.115141,lon:55.536384},Romania:{lat:45.943161,lon:24.96676},Serbia:{lat:44.016521,lon:21.005859},Russia:{lat:61.52401,lon:105.318756},Rwanda:{lat:-1.940278,lon:29.873888},"Saudi Arabia":{lat:23.885942,lon:45.079162},"Solomon Islands":{lat:-9.64571,lon:160.156194},Seychelles:{lat:-4.679574,lon:55.491977},Sudan:{lat:12.862807,lon:30.217636},Sweden:{lat:60.128161,lon:18.643501},Singapore:{lat:1.352083,lon:103.819836},"Saint Helena":{lat:-24.143474,lon:-10.030696},Slovenia:{lat:46.151241,lon:14.995463},"Svalbard and Jan Mayen":{lat:77.553604,lon:23.670272},Slovakia:{lat:48.669026,lon:19.699024},"Sierra Leone":{lat:8.460555,lon:-11.779889},"San Marino":{lat:43.94236,lon:12.457777},Senegal:{lat:14.497401,lon:-14.452362},Somalia:{lat:5.152149,lon:46.199616},Suriname:{lat:3.919305,lon:-56.027783},"São Tomé and Príncipe":{lat:.18636,lon:6.613081},"El Salvador":{lat:13.794185,lon:-88.89653},Syria:{lat:34.802075,lon:38.996815},Swaziland:{lat:-26.522503,lon:31.465866},"Turks and Caicos Islands":{lat:21.694025,lon:-71.797928},Chad:{lat:15.454166,lon:18.732207},"French Southern Territories":{lat:-49.280366,lon:69.348557},Togo:{lat:8.619543,lon:.824782},Thailand:{lat:15.870032,lon:100.992541},Tajikistan:{lat:38.861034,lon:71.276093},Tokelau:{lat:-8.967363,lon:-171.855881},"Timor-Leste":{lat:-8.874217,lon:125.727539},Turkmenistan:{lat:38.969719,lon:59.556278},Tunisia:{lat:33.886917,lon:9.537499},Tonga:{lat:-21.178986,lon:-175.198242},Turkey:{lat:38.963745,lon:35.243322},"Trinidad and Tobago":{lat:10.691803,lon:-61.222503},Tuvalu:{lat:-7.109535,lon:177.64933},Taiwan:{lat:23.69781,lon:120.960515},Tanzania:{lat:-6.369028,lon:34.888822},Ukraine:{lat:48.379433,lon:31.16558},Uganda:{lat:1.373333,lon:32.290275},"United States":{lat:37.09024,lon:-95.712891},Uruguay:{lat:-32.522779,lon:-55.765835},Uzbekistan:{lat:41.377491,lon:64.585262},"Vatican City":{lat:41.902916,lon:12.453389},"Saint Vincent and the Grenadines":{lat:12.984305,lon:-61.287228},Venezuela:{lat:6.42375,lon:-66.58973},"British Virgin Islands":{lat:18.420695,lon:-64.639968},"U.S. Virgin Islands":{lat:18.335765,lon:-64.896335},Vietnam:{lat:14.058324,lon:108.277199},Vanuatu:{lat:-15.376706,lon:166.959158},"Wallis and Futuna":{lat:-13.768752,lon:-177.156097},Samoa:{lat:-13.759029,lon:-172.104629},Kosovo:{lat:42.602636,lon:20.902977},Yemen:{lat:15.552727,lon:48.516388},Mayotte:{lat:-12.8275,lon:45.166244},"South Africa":{lat:-30.559482,lon:22.937506},Zambia:{lat:-13.133897,lon:27.849332},Zimbabwe:{lat:-19.015438,lon:29.154857}},timeLineGraphUpdated=!1,timeLineGraphUpdated=!1,Shaders={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 1 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = 0;","gl_Position = 0;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = 0;","gl_FragColor = 0;","}"].join("\n")}},ShadersOverlay={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 0.5 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.6 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.1 - dot( vNormal, vec3( 0, 2.1, 0.0 ) ), 8.0 );","gl_FragColor = vec4( 0, 0.5, 1, 0.8 ) * intensity;","}"].join("\n")}},Globe=function(){function e(e,n,t,a){var i=(90-e)*Math.PI/180,o=(180-n)*Math.PI/180;N.aws.regions[a].pivot.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var r=new THREE.PlaneGeometry(0,0,1);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var s=new THREE.Mesh(r,t);s.position.x=L*Math.sin(i)*Math.cos(o),s.position.y=L*Math.cos(i),s.position.z=L*Math.sin(i)*Math.sin(o),s.scale.z=Math.max(1,.1),s.lookAt(C.position),s.name=a,s.type="region",M.add(s),s.add(N.aws.regions[a].pivot);var l=new THREE.Object3D;l.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,E/2)),N.aws.regions[a].pivot.add(l),r=new THREE.ConeGeometry(3,E,4,1,!0,Math.PI/4,2*Math.PI);var c=new THREE.MeshBasicMaterial({map:K,transparent:!0,depthWrite:!1,depthTest:!1,opacity:.3}),d=new THREE.Mesh(r,c);d.name=a+"Cone",M.add(d),l.add(d),l.rotation.x+=H,(r=new THREE.PlaneGeometry(1,1,1)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E-2));var u=new THREE.Mesh(r,t);s.add(u)}function n(e){var n=[];for(var a in inventory)for(var i in inventory[a])inventory[a][i].Region==e&&n.push(inventory[a][i]);var o,r,s,l=Math.ceil(Math.sqrt(n.length)),c=Math.round(Math.sqrt(n.length)),d=M.getObjectByName(e),u=4*l,p=4*c,m=0,h=0,g=0,y=0,f=!1,v=0,T=0;for(o=0;o<n.length;o++){for(s=!1,v=1==c?4*m-(4*c-4):4*m-(4*c-4)/2,T=1==l?4*g-(4*l-4):4*g-(4*l-4)/2,r=0;r<d.children[0].children.length;r++)if(d.children[0].children[r].name==n[o].id){d.children[0].children[r].position.x=v,d.children[0].children[r].position.y=T,s=!0;break}s||t(n[o],v,T),m>h&&(h=m),g>y&&(y=g),g>m?f?g==m+1?(f=!1,m++,g=0):m++:(m++,g=0):g<m?g++:g==m&&(f||(g++,m=0,f=!0))}p<4&&(p=4),u<4&&(u=4),d.children[1].scale.set(p+2,u+2,1)}function t(e,n,t){var a,i,o=new THREE.MeshLambertMaterial({map:y(e),transparent:!0,side:THREE.DoubleSide,opacity:.9});if("elb"==e.type){a=1,i=new THREE.Geometry,o.wireframe=!0;var r=new THREE.OctahedronGeometry(1.4,2);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-2.5));var s=new THREE.Mesh(r,o),l={left:0,center:0,right:0},c={left:0,center:0,right:0};c.center=-1.4,c.left=c.center,c.right=c.center,l.left=.8,l.right=-.8;var d=new THREE.BoxGeometry(.1,.6,.5);d.applyMatrix((new THREE.Matrix4).makeTranslation(l.center,c.center,-2.5));var u=new THREE.Mesh(d,o),p=new THREE.BoxGeometry(.1,.6,.5);p.applyMatrix((new THREE.Matrix4).makeTranslation(l.left,c.left,-2.5));var m=new THREE.Mesh(p,o),h=new THREE.BoxGeometry(.1,.6,.5);h.applyMatrix((new THREE.Matrix4).makeTranslation(l.right,c.right,-2.5));var g=new THREE.Mesh(h,o),f=new THREE.BoxGeometry(.1,.6,.5);f.applyMatrix((new THREE.Matrix4).makeTranslation(-l.center,-c.center,-2.5));var v=new THREE.Mesh(f,o);i.merge(s.geometry,s.matrix),i.merge(u.geometry,u.matrix),i.merge(m.geometry,m.matrix),i.merge(g.geometry,g.matrix),i.merge(v.geometry,v.matrix)}else"apigateway"==e.type&&(a=3,(i=new THREE.TorusGeometry(1.5,.2,10,28)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5)),o.wireframe=!0);var T=new THREE.Mesh(i,o);T.scale.z=Math.max(a,.1),T.lookAt(C.position),T.name=e.id,T.type=e.type,T.position.x=n,T.position.y=t,T.position.z=0,M.add(T),void 0!=e.Region&&N.aws.regions[e.Region].pivot.add(T),inventory[e.type][e.id].mesh=T,M.updateMatrixWorld(!0)}function a(e){var n=document.createElement("canvas");return n.width=256,n.height=256,n.getContext("2d").fillStyle=e,n.getContext("2d").fillRect(0,0,256,256),new THREE.CanvasTexture(n)}function i(){new Audio("sounds/Tick-DeepFrozenApps-397275646.mp3").play(),document.getElementById("enhanceFrame").style.display="block",setTimeout(function(){document.getElementById("enhanceFrame").style.display="none",h((D-210)/1.5)},100)}function o(e){e.preventDefault(),A=!0,G.addEventListener("mousemove",r,!1),G.addEventListener("mouseup",s,!1),G.addEventListener("mouseout",l,!1),x.x=-e.clientX,x.y=e.clientY,B.x=P.x,B.y=P.y}function r(e){I.x=e.clientX/window.innerWidth*2-1,I.y=-e.clientY/window.innerHeight*2+1,A&&(S=O/1e3,P.x=B.x+.005*(-e.clientX-x.x)*S,P.y=B.y+.005*(e.clientY-x.y)*S,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y)}function s(e){A=!1,G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function l(e){G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function c(e){return e.preventDefault(),R&&h(.3*e.wheelDeltaY),!1}function d(e){switch(e.keyCode){case 13:"password"==document.activeElement.id&&loginAndLoadInventory(),e.preventDefault();break;case 16:holdingShift=!0,e.preventDefault();break;case 17:toggleRotate(),e.preventDefault();break;case 18:holdingAlt=!0,e.preventDefault();break;case 37:holdingAlt?P.x-=3:P.x-=.1,e.preventDefault();break;case 38:holdingShift?(P.y+=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(20),e.preventDefault();break;case 39:holdingAlt?P.x+=3:P.x+=.1,e.preventDefault();break;case 40:holdingShift?(P.y-=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(-20),e.preventDefault();break;default:new Audio("sounds/Pen_Clicks-Simon_Craggs-514025171.mp3").play()}}function u(e){void 0==e?e=20:e--,0!=e?setTimeout(function(){P.x+=e/3,u(e)},10):startRotation()}function p(e){switch(e.keyCode){case 16:holdingShift=!1,e.preventDefault();break;case 18:holdingAlt=!1,e.preventDefault()}}function m(e){v.aspect=window.innerWidth/window.innerHeight,v.updateProjectionMatrix(),T.setSize(window.innerWidth,window.innerHeight)}function h(e){e>0?(slidePanes("out"),stopRotation()):slidePanes("in"),D=(D=(D-=e)>1e3?1e3:D)<210?210:D}function g(){w.x+=.1*(P.x-w.x),w.y+=.1*(P.y-w.y),O+=.3*(D-O),v.position.x=O*Math.sin(w.x)*Math.cos(w.y),v.position.y=O*Math.sin(w.y),v.position.z=O*Math.cos(w.x)*Math.cos(w.y),v.lookAt(C.position),rotate&&(P.x-=.001),T.render(M,v),frames++}function y(e){return"fail"==e.health?W:"running"==e.status?void 0!=e.cpu&&void 0!=e.cpu.Average?e.cpu.Average>=0&&e.cpu.Average<75?F:e.cpu.Average>=75&&e.cpu.Average<90?j:V:F:"pending"==e.status||"rebooting"==e.status||"creating"==e.status?K:"stopped"==e.status?Q:"stopping"==e.status||"shutting-down"==e.status?Z:void 0}function f(e,n,t){var a=!0;D=1e3,Math.abs(v.position.x-e)>500||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.03,a=!1):Math.abs(v.position.x-e)>400||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.01,a=!1):(Math.abs(v.position.x-e)>100||t>0&&v.position.z<0||t<0&&v.position.z>0)&&(P.x-=.001,a=!1),Math.abs(v.position.y-n)>100&&(v.position.y<n?P.y+=.01:P.y-=.01,a=!1),a?stopRotation():setTimeout(function(){f(e,n,t)},10)}var v,M,T,C,R,S,G=document.getElementById("container"),b="images/",L=200,A=!1,E=15,I=(new THREE.Raycaster,new THREE.Vector2),x={x:0,y:0},w={x:0,y:0},P={x:3*Math.PI/2.5,y:Math.PI/7},B={x:0,y:0},O=1e5,D=1e3,H=Math.PI/2,N={},k=document.createElement("canvas");k.width=256,k.height=256;var U=k.getContext("2d").createLinearGradient(256,0,256,256);U.addColorStop(0,"#0080ff"),U.addColorStop(.2,"#0065ff"),U.addColorStop(.5,"#0055ff"),U.addColorStop(.8,"#0065ff"),U.addColorStop(1,"#0080ff"),k.getContext("2d").fillStyle=U,k.getContext("2d").fillRect(0,0,256,256);var F=new THREE.CanvasTexture(k),W=(a("rgb(256,256,256)"),a("rgb(256,0,0)")),j=a("rgb(256,256,0)"),V=a("rgb(179, 71, 0)"),K=a("rgb(256,256,256)"),Q=a("rgb(50,50,50)"),Z=Q,J=a("rgb(0, 173, 239)"),z=null,Y=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.3}),_=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.4}),q=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.45}),X=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.5}),$=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.55}),ee=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.6}),ne=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.65}),te=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.7}),ae=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.75}),ie=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.8}),oe=new THREE.CircleGeometry(.5,20),re=new THREE.Mesh(oe,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));return re.scale.set(1.1,1.1,1.1),new THREE.Object3D,function(){var n,t,a;(v=new THREE.PerspectiveCamera(20,window.innerWidth/window.innerHeight,1,1e4)).position.z=O,M=new THREE.Scene;var r=new THREE.PointLight(16777215,.25,1e6);r.position.set(0,1e4,0),M.add(r);var s=new THREE.PointLight(16777215,.25,1e6);s.position.set(0,-1e4,0),M.add(s);var l=new THREE.PointLight(16777215,2,1e6);l.position.set(1e4,0,0),M.add(l);var u=new THREE.PointLight(16777215,2,1e6);u.position.set(-1e4,0,0),M.add(u);var h=new THREE.PointLight(16777215,2,1e6);h.position.set(0,0,1e4),M.add(h);var g=new THREE.PointLight(16777215,2,1e6);g.position.set(0,0,-1e4),M.add(g),M.add(re);var y=new THREE.SphereGeometry(L,100,100);n=Shaders.earth,(t=THREE.UniformsUtils.clone(n.uniforms)).texture.value=THREE.ImageUtils.loadTexture(b+"earth_large-8192x4096.jpg"),a=new THREE.ShaderMaterial({uniforms:t,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,transparent:!0,wireframe:!1,depthWrite:!1,depthTest:!1,opacity:.9}),(C=new THREE.Mesh(y,a)).rotation.y=Math.PI,C.name="globe",M.add(C),a=new THREE.MeshBasicMaterial({map:J,transparent:!0,wireframe:!0,depthWrite:!1,depthTest:!1,opacity:.02});var f=new THREE.SphereGeometry(L-1,100,100),S=new THREE.Mesh(f,a);S.name="meshGlobeUnderlay",M.add(S);var A=ShadersOverlay.earth,E=THREE.UniformsUtils.clone(A.uniforms);E.texture.value=THREE.ImageUtils.loadTexture(b+"stars.jpg"),z=new THREE.ShaderMaterial({uniforms:E,vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,transparent:!0,wireframe:!1,side:THREE.BackSide,opacity:.2});var I=new THREE.SphereGeometry(L+400,20,20),x=new THREE.Mesh(I,z);x.rotation.y=Math.PI,x.name="globeOverlay",M.add(x);var w=new THREE.MeshBasicMaterial({map:K,transparent:!0,side:THREE.DoubleSide,depthWrite:!1,depthTest:!1,opacity:.2});N.aws={},N.aws.regions={},N.aws.regions["us-east-1"]={lat:37,lon:-77,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-east-2"]={lat:40,lon:-83,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-1"]={lat:44,lon:-120,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-2"]={lat:39,lon:-122,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ca-central-1"]={lat:46,lon:-75,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-1"]={lat:53,lon:-8,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-2"]={lat:51.5,lon:0,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-central-1"]={lat:50,lon:8.5,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-1"]={lat:35.7,lon:139.7,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-2"]={lat:37.5,lon:127,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-1"]={lat:1.3,lon:104,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-2"]={lat:-33.8,lon:150,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-south-1"]={lat:19,lon:73,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["sa-east-1"]={lat:-23.5,lon:-46.5,pivot:new THREE.Object3D,point:new THREE.Geometry};for(var P in N)for(var B in N[P].regions)e(N[P].regions[B].lat,N[P].regions[B].lon,w,B);(T=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),T.domElement.style.position="absolute",G.appendChild(T.domElement),G.addEventListener("mousedown",o,!1),G.addEventListener("dblclick",i,!1),G.addEventListener("mousewheel",c,!1),document.addEventListener("keydown",d,!1),document.addEventListener("keyup",p,!1),window.addEventListener("resize",m,!1),G.addEventListener("mouseover",function(){G.style.cursor="all-scroll",R=!0},!1),G.addEventListener("mouseout",function(){R=!1},!1)}(),setInterval(function(){requestAnimationFrame(g)},1e3/60),window.addEventListener("mousemove",r,!1),window.requestAnimationFrame(g),this.load=function(e,t){if(t.length>0){window.data=t;for(var a=[],i=0;i<t.length;i++)if("billing"==e){var o=new Date,r=month[o.getMonth()];document.getElementById("billingTotal").innerHTML="$"+t[i]+" ("+r+")"}else if("traffic"==e)for(var s=0;s<t[i].connections.length;s++)addTrafficEvent(t[i].id,t[i].connections[s]);else{if("apigateway"==t[i].type)t[i]=translateApiGateway(t[i]);else{if("elb"!=t[i].type)continue;t[i]=translateElb(t[i])}if("terminated"==t[i].status)void 0!=inventory[t[i].type]&&void 0!=inventory[t[i].type][t[i].id]&&delete inventory[t[i].type][t[i].id];else{void 0==inventory[t[i].type]&&(inventory[t[i].type]={}),void 0==inventory[t[i].type][t[i].id]&&(inventory[t[i].type][t[i].id]={},inventory[t[i].type][t[i].id]=t[i],a.push(t[i]));for(var l=0;l<inventoryFields.length;l++)t[i][inventoryFields[l]]instanceof Array?void 0!=t[i][inventoryFields[l]]&&JSON.stringify(t[i][inventoryFields[l]])!=JSON.stringify(inventory[t[i].type][t[i].id][inventoryFields[l]])&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]]):void 0!=t[i][inventoryFields[l]]&&t[i][inventoryFields[l]]!=inventory[t[i].type][t[i].id][inventoryFields[l]]&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]],inventory[t[i].type][t[i].id].mesh.material.map=y(t[i]))}}if(a.length>0)for(var c in N.aws.regions)n(c),firstInventorySetLoaded||(getInitialTimeLineData(),firstInventorySetLoaded=!0);document.body.style.backgroundImage="none"}},this.elementShadowIntensity=2,this.scene=M,this.setCameraPosition=f,this.clouds=N,this.globeRadius=L,this.regionOffset=E,this.updateHeatMap=function(){void 0!=M.getObjectByName("heatMapMesh")&&M.remove(M.getObjectByName("heatMapMesh"));var e=null,n=null,t=new THREE.Geometry,a=new THREE.Mesh(oe),i=0,o=0;for(var r in heatMapHistory){(o=heatMapHistory[r].count-heatMapAverage)<1&&(o=1),i=Math.floor(scaleBetween(o,1,99,1,heatMapHigh))/100,e=(90-heatMapHistory[r].lat)*Math.PI/180,n=(180-heatMapHistory[r].lon)*Math.PI/180,a.position.x=L*Math.sin(e)*Math.cos(n),a.position.y=L*Math.cos(e),a.position.z=L*Math.sin(e)*Math.sin(n),a.lookAt(C.position),a.updateMatrix();for(var s=0;s<a.geometry.faces.length;s++)a.geometry.faces[s].materialIndex=Math.floor(10*i);t.merge(a.geometry,a.matrix)}var l=new THREE.Mesh(t,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));l.name="heatMapMesh",M.add(l)},this.globeMesh=C,this.runLoginAnimation=function(){M.getObjectByName("globe").material.depthWrite=!0,M.getObjectByName("globe").material.depthTest=!0,M.getObjectByName("globeOverlay").visible=!1},this.timeWarpSpinMove=u,this.enhance=i,this.zoomReset=function(){setTimeout(function(){D=1e3},100)},this},iso2iso3={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",CV:"CPV",KH:"KHM",CM:"CMR",CA:"CAN",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"},iso3iso2={AFG:"AF",ALA:"AX",ALB:"AL",DZA:"DZ",ASM:"AS",AND:"AD",AGO:"AO",AIA:"AI",ATA:"AQ",ATG:"AG",ARG:"AR",ARM:"AM",ABW:"AW",AUS:"AU",AUT:"AT",AZE:"AZ",BHS:"BS",BHR:"BH",BGD:"BD",BRB:"BB",BLR:"BY",BEL:"BE",BLZ:"BZ",BEN:"BJ",BMU:"BM",BTN:"BT",BOL:"BO",BES:"BQ",BIH:"BA",BWA:"BW",BVT:"BV",BRA:"BR",IOT:"IO",BRN:"BN",BGR:"BG",BFA:"BF",BDI:"BI",CPV:"CV",KHM:"KH",CMR:"CM",CAN:"CA",CYM:"KY",CAF:"CF",TCD:"TD",CHL:"CL",CHN:"CN",CXR:"CX",CCK:"CC",COL:"CO",COM:"KM",COG:"CG",COD:"CD",COK:"CK",CRI:"CR",CIV:"CI",HRV:"HR",CUB:"CU",CUW:"CW",CYP:"CY",CZE:"CZ",DNK:"DK",DJI:"DJ",DMA:"DM",DOM:"DO",ECU:"EC",EGY:"EG",SLV:"SV",GNQ:"GQ",ERI:"ER",EST:"EE",ETH:"ET",FLK:"FK",FRO:"FO",FJI:"FJ",FIN:"FI",FRA:"FR",GUF:"GF",PYF:"PF",ATF:"TF",GAB:"GA",GMB:"GM",GEO:"GE",DEU:"DE",GHA:"GH",GIB:"GI",GRC:"GR",GRL:"GL",GRD:"GD",GLP:"GP",GUM:"GU",GTM:"GT",GGY:"GG",GIN:"GN",GNB:"GW",GUY:"GY",HTI:"HT",HMD:"HM",VAT:"VA",HND:"HN",HKG:"HK",HUN:"HU",ISL:"IS",IND:"IN",IDN:"ID",IRN:"IR",IRQ:"IQ",IRL:"IE",IMN:"IM",ISR:"IL",ITA:"IT",JAM:"JM",JPN:"JP",JEY:"JE",JOR:"JO",KAZ:"KZ",KEN:"KE",KIR:"KI",PRK:"KP",KOR:"KR",KWT:"KW",KGZ:"KG",LAO:"LA",LVA:"LV",LBN:"LB",LSO:"LS",LBR:"LR",LBY:"LY",LIE:"LI",LTU:"LT",LUX:"LU",MAC:"MO",MKD:"MK",MDG:"MG",MWI:"MW",MYS:"MY",MDV:"MV",MLI:"ML",MLT:"MT",MHL:"MH",MTQ:"MQ",MRT:"MR",MUS:"MU",MYT:"YT",MEX:"MX",FSM:"FM",MDA:"MD",MCO:"MC",MNG:"MN",MNE:"ME",MSR:"MS",MAR:"MA",MOZ:"MZ",MMR:"MM",NAM:"NA",NRU:"NR",NPL:"NP",NLD:"NL",NCL:"NC",NZL:"NZ",NIC:"NI",NER:"NE",NGA:"NG",NIU:"NU",NFK:"NF",MNP:"MP",NOR:"NO",OMN:"OM",PAK:"PK",PLW:"PW",PSE:"PS",PAN:"PA",PNG:"PG",PRY:"PY",PER:"PE",PHL:"PH",PCN:"PN",POL:"PL",PRT:"PT",PRI:"PR",QAT:"QA",REU:"RE",ROU:"RO",RUS:"RU",RWA:"RW",BLM:"BL",SHN:"SH",KNA:"KN",LCA:"LC",MAF:"MF",SPM:"PM",VCT:"VC",WSM:"WS",SMR:"SM",STP:"ST",SAU:"SA",SEN:"SN",SRB:"RS",SYC:"SC",SLE:"SL",SGP:"SG",SXM:"SX",SVK:"SK",SVN:"SI",SLB:"SB",SOM:"SO",ZAF:"ZA",SGS:"GS",SSD:"SS",ESP:"ES",LKA:"LK",SDN:"SD",SUR:"SR",SJM:"SJ",SWZ:"SZ",SWE:"SE",CHE:"CH",SYR:"SY",TWN:"TW",TJK:"TJ",TZA:"TZ",THA:"TH",TLS:"TL",TGO:"TG",TKL:"TK",TON:"TO",TTO:"TT",TUN:"TN",TUR:"TR",TKM:"TM",TCA:"TC",TUV:"TV",UGA:"UG",UKR:"UA",ARE:"AE",GBR:"GB",USA:"US",UMI:"UM",URY:"UY",UZB:"UZ",VUT:"VU",VEN:"VE",VNM:"VN",VGB:"VG",VIR:"VI",WLF:"WF",ESH:"EH",YEM:"YE",ZMB:"ZM",ZWE:"ZW"},countryNameIso2={Afghanistan:"AF","Aland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua And Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO","Bosnia And Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Congo, Democratic Republic":"CD","Cook Islands":"CK","Costa Rica":"CR","Cote D'Ivoire":"CI",Croatia:"HR",Cuba:"CU",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island & Mcdonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID","Iran, Islamic Republic Of":"IR",Iraq:"IQ",Ireland:"IE","Isle Of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI",Korea:"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR","Libyan Arab Jamahiriya":"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX","Micronesia, Federated States Of":"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","Netherlands Antilles":"AN","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory, Occupied":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA",Reunion:"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthelemy":"BL","Saint Helena":"SH","Saint Kitts And Nevis":"KN","Saint Lucia":"LC","Saint Martin":"MF","Saint Pierre And Miquelon":"PM","Saint Vincent And Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome And Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia And Sandwich Isl.":"GS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard And Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad And Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks And Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE",Vietnam:"VN","Virgin Islands, British":"VG","Virgin Islands, U.S.":"VI","Wallis And Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},iso2CountryName={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},USState2iso={Alabama:"AL",Alaska:"AK","American Samoa":"AS",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE","District Of Columbia":"DC","Federated States Of Micronesia":"FM",Florida:"FL",Georgia:"GA",Guam:"GU",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansas:"KS",Kentucky:"KY",Louisiana:"LA",Maine:"ME","Marshall Islands":"MH",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV","New Hampshire":"NH","New Jersey":"NJ","New Mexico":"NM","New York":"NY","North Carolina":"NC","North Dakota":"ND","Northern Mariana Islands":"MP",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Palau:"PW",Pennsylvania:"PA","Puerto Rico":"PR","Rhode Island":"RI","South Carolina":"SC","South Dakota":"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT","Virgin Islands":"VI",Virginia:"VA",Washington:"WA","West Virginia":"WV",Wisconsin:"WI",Wyoming:"WY"},countryResponseObjects=[],countryResponseUpdatedObjects={},countryTimeLineGraphs={},countryDataFrames=50,countryGraphsMax=10,countryResponseGraphWidth=100,countryResponseGraphHeight=60,countryResponseGraphRadius=Math.min(countryResponseGraphWidth,countryResponseGraphHeight)/2,countryResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),countryResponseGraphArc=d3.svg.arc().outerRadius(.7*countryResponseGraphRadius).innerRadius(.65*countryResponseGraphRadius),countryResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*countryResponseGraphRadius).innerRadius(.4*countryResponseGraphRadius),countryResponseGraphArcInner=d3.svg.arc().outerRadius(.35*countryResponseGraphRadius).innerRadius(.3*countryResponseGraphRadius),countryResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),countryResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),countryResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),valueMobile=0,valueTablet=0,valueMonitor=0,deviceCircleGraphWidth=150,deviceCircleGraphHeight=75,deviceCircleGraphRadius=Math.min(deviceCircleGraphWidth,deviceCircleGraphHeight)/1.5,deviceCircleGraphMobile=d3.select("#deviceCircleGraphMobile").append("svg").append("g"),deviceCircleGraphTablet=d3.select("#deviceCircleGraphTablet").append("svg").append("g"),deviceCircleGraphMonitor=d3.select("#deviceCircleGraphMonitor").append("svg").append("g");deviceCircleGraphMobile.append("g").attr("class","slices"),deviceCircleGraphTablet.append("g").attr("class","slices"),deviceCircleGraphMonitor.append("g").attr("class","slices");var pie=d3.layout.pie().sort(null).value(function(e){return e.value}),key=function(e){return e.data.label},arcDevice=d3.svg.arc().outerRadius(.8*deviceCircleGraphRadius).innerRadius(.78*deviceCircleGraphRadius),outerArcDevice=d3.svg.arc().innerRadius(.9*deviceCircleGraphRadius).outerRadius(.9*deviceCircleGraphRadius);deviceCircleGraphMobile.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphTablet.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphMonitor.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)");var deviceCircleGraphColorMobile=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorTablet=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorMonitor=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),endPointResponseObjects=[],endPointResponseUpdatedObjects={},endPointTimeLineGraphs={},endPointTimeLineResponseTimeGraphs={},endPointDataFrames=50,endPointGraphsMax=6,endPointResponseGraphWidth=100,endPointResponseGraphHeight=60,endPointResponseGraphRadius=Math.min(endPointResponseGraphWidth,endPointResponseGraphHeight)/2,endPointResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),endPointResponseGraphArc=d3.svg.arc().outerRadius(.7*endPointResponseGraphRadius).innerRadius(.65*endPointResponseGraphRadius),endPointResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*endPointResponseGraphRadius).innerRadius(.4*endPointResponseGraphRadius),endPointResponseGraphArcInner=d3.svg.arc().outerRadius(.35*endPointResponseGraphRadius).innerRadius(.3*endPointResponseGraphRadius),endPointResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),endPointResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),endPointResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),graphTotals={},endPointHealthGraphs=[],endPoints={},endPointHealthGraphsFrameCount=0,endPointHealthGraphId,lineGraphs=[];createNewLineGraph("Connections","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Unique IPs","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Success","responseLineGraphs","area","third",color123,"rgba(256,256,256,0.3)",.5),createNewLineGraph("Rejected","responseLineGraphs","area","third",color4xx,"rgba(209, 102, 6,0.3)",.5),createNewLineGraph("Error","responseLineGraphs","area","third",color5xx,"rgba(256,0,0,0.3)",.5);var mapLargeScope="world",mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,map=new Datamap({element:document.getElementById("dataMapContainer"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.1,popupOnHover:!1,highlightOnHover:!1}}),mapLargeWorld=new Datamap({element:document.getElementById("dataMapContainerLargeWorld"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),mapLargeUSA=new Datamap({element:document.getElementById("dataMapContainerLargeUSA"),fills:{defaultFill:"transparent"},data:{},scope:"usa",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}});(responseCodeGraphSvg=d3.select("#responseCodeGraph").append("svg").append("g")).append("g").attr("class","slices"),responseCodeGraphSvg.append("g").attr("class","labels"),responseCodeGraphSvg.append("g").attr("class","lines");var responseCodeGraphWidth=275,responseCodeGraphHeight=150,responseCodeGraphRadius=Math.min(responseCodeGraphWidth,responseCodeGraphHeight)/2,responseCodeGraphArc=d3.svg.arc().outerRadius(.8*responseCodeGraphRadius).innerRadius(.75*responseCodeGraphRadius),responseCodeGraphOuterArc=d3.svg.arc().innerRadius(.9*responseCodeGraphRadius).outerRadius(.9*responseCodeGraphRadius);responseCodeGraphSvg.attr("transform","translate("+responseCodeGraphWidth/2+","+responseCodeGraphHeight/2+")");var responseCodeGraphColor=d3.scale.ordinal().domain(["Success","Rejected","Error"]).range([color123,color4xx,color5xx]),scatterCircleGraphWidth=420,scatterCircleGraphHeight=420,deviceScatterGraph=new Circos({container:"#circleScatterGraph",width:scatterCircleGraphWidth,height:scatterCircleGraphHeight}),scatterCircleGraphInstanceArray=[],deviceScatterData=[],color5xx="#ff0000",color123="#ffffff",color4xx="#d16606",timeLineFirstRun=!0,timeLineGraph=new Rickshaw.Graph({element:document.getElementById("timeLine"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar",unstack:!0},{name:"5xx",color:color5xx,renderer:"bar",unstack:!0},{name:"123xx",color:color123,renderer:"bar",unstack:!0}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),timeLineGraphLatency=new Rickshaw.Graph({element:document.getElementById("timeLineLatency"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"Latency",color:"#00adef",renderer:"line",strokeWidth:1},{name:"LatencyArea",color:"rgba(0,133,199,0.2)",renderer:"area"}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})});(axesTime=new Rickshaw.Graph.Axis.Time({graph:timeLineGraph})).render(),(axes=new Rickshaw.Graph.Axis.Y({graph:timeLineGraph,pixelsPerTick:30,ticksTreatment:"inverse"})).render();var hoverDetail=new Rickshaw.Graph.HoverDetail({graph:timeLineGraph,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}}),hoverDetailLatency=new Rickshaw.Graph.HoverDetail({graph:timeLineGraphLatency,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}});timeLineGraph.update(),timeLineGraphLatency.update();var timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0;timeLineBase.setHours(timeLineBase.getHours()-24),timeLineBase.setMinutes(timeLineBase.getMinutes()-(timeLineBase.getMinutes()-5*Math.ceil(timeLineBase.getMinutes()/5))),timeLineBase.setSeconds(0),timeLineBase.setMilliseconds(0),(timeLineBaseAdjusted=new Date(timeLineBase.getTime())).setMinutes(timeLineBaseAdjusted.getMinutes()+5);for(var timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes(),m=0;m<287;m++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]={},timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=0,55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5;var trafficPointCount=0,apiGatewayCloudWatchLogsPrefix="API-Gateway-Execution-Logs_",apiGatewayObjectTarget=0,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0,apiGatewayInventoryQueue={},loginRegion="us-east-1",credentialExpirationDate,lastMetricCall=0,getAWSInventoryInterval=5e3,getAWSMetricsInterval=3e5,getAWSLoggedMetricsInterval=6e4,getAWSBillingInterval=216e5,getAWSEC2TrafficInterval=5e3,initialLoad=!0,baseUrl="https://pqhzr7kno2.execute-api.us-east-1.amazonaws.com/dev/",a,s,t,s3,cloudWatchLogs,cloudWatchObjects,APIGatewayObjects,appAccountS3,appAccountConf,centroids={Andorra:{lat:42.546245,lon:1.601554},"United Arab Emirates":{lat:23.424076,lon:53.847818},Afghanistan:{lat:33.93911,lon:67.709953},"Antigua and Barbuda":{lat:17.060816,lon:-61.796428},Anguilla:{lat:18.220554,lon:-63.068615},Albania:{lat:41.153332,lon:20.168331},Armenia:{lat:40.069099,lon:45.038189},"Netherlands Antilles":{lat:12.226079,lon:-69.060087},Angola:{lat:-11.202692,lon:17.873887},Antarctica:{lat:-75.250973,lon:-.071389},Argentina:{lat:-38.416097,lon:-63.616672},"American Samoa":{lat:-14.270972,lon:-170.132217},Austria:{lat:47.516231,lon:14.550072},Australia:{lat:-25.274398,lon:133.775136},Aruba:{lat:12.52111,lon:-69.968338},Azerbaijan:{lat:40.143105,lon:47.576927},"Bosnia and Herzegovina":{lat:43.915886,lon:17.679076},Barbados:{lat:13.193887,lon:-59.543198},Bangladesh:{lat:23.684994,lon:90.356331},Belgium:{lat:50.503887,lon:4.469936},"Burkina Faso":{lat:12.238333,lon:-1.561593},Bulgaria:{lat:42.733883,lon:25.48583},Bahrain:{lat:25.930414,lon:50.637772},Burundi:{lat:-3.373056,lon:29.918886},Benin:{lat:9.30769,lon:2.315834},Bermuda:{lat:32.321384,lon:-64.75737},Brunei:{lat:4.535277,lon:114.727669},Bolivia:{lat:-16.290154,lon:-63.588653},Brazil:{lat:-14.235004,lon:-51.92528},Bahamas:{lat:25.03428,lon:-77.39628},Bhutan:{lat:27.514162,lon:90.433601},"Bouvet Island":{lat:-54.423199,lon:3.413194},Botswana:{lat:-22.328474,lon:24.684866},Belarus:{lat:53.709807,lon:27.953389},Belize:{lat:17.189877,lon:-88.49765},Canada:{lat:56.130366,lon:-106.346771},"Cocos [Keeling] Islands":{lat:-12.164165,lon:96.870956},"Congo [DRC]":{lat:-4.038333,lon:21.758664},"Central African Republic":{lat:6.611111,lon:20.939444},"Congo [Republic]":{lat:-.228021,lon:15.827659},Switzerland:{lat:46.818188,lon:8.227512},"Côte d'Ivoire":{lat:7.539989,lon:-5.54708},"Cook Islands":{lat:-21.236736,lon:-159.777671},Chile:{lat:-35.675147,lon:-71.542969},Cameroon:{lat:7.369722,lon:12.354722},China:{lat:35.86166,lon:104.195397},Colombia:{lat:4.570868,lon:-74.297333},"Costa Rica":{lat:9.748917,lon:-83.753428},Cuba:{lat:21.521757,lon:-77.781167},"Cape Verde":{lat:16.002082,lon:-24.013197},"Christmas Island":{lat:-10.447525,lon:105.690449},Cyprus:{lat:35.126413,lon:33.429859},"Czech Republic":{lat:49.817492,lon:15.472962},Germany:{lat:51.165691,lon:10.451526},Djibouti:{lat:11.825138,lon:42.590275},Denmark:{lat:56.26392,lon:9.501785},Dominica:{lat:15.414999,lon:-61.370976},"Dominican Republic":{lat:18.735693,lon:-70.162651},Algeria:{lat:28.033886,lon:1.659626},Ecuador:{lat:-1.831239,lon:-78.183406},Estonia:{lat:58.595272,lon:25.013607},Egypt:{lat:26.820553,lon:30.802498},"Western Sahara":{lat:24.215527,lon:-12.885834},Eritrea:{lat:15.179384,lon:39.782334},Spain:{lat:40.463667,lon:-3.74922},Ethiopia:{lat:9.145,lon:40.489673},Finland:{lat:61.92411,lon:25.748151},Fiji:{lat:-16.578193,lon:179.414413},"Falkland Islands [Islas Malvinas]":{lat:-51.796253,lon:-59.523613},Micronesia:{lat:7.425554,lon:150.550812},"Faroe Islands":{lat:61.892635,lon:-6.911806},France:{lat:46.227638,lon:2.213749},Gabon:{lat:-.803689,lon:11.609444},"United Kingdom":{lat:55.378051,lon:-3.435973},Grenada:{lat:12.262776,lon:-61.604171},Georgia:{lat:42.315407,lon:43.356892},"French Guiana":{lat:3.933889,lon:-53.125782},Guernsey:{lat:49.465691,lon:-2.585278},Ghana:{lat:7.946527,lon:-1.023194},Gibraltar:{lat:36.137741,lon:-5.345374},Greenland:{lat:71.706936,lon:-42.604303},Gambia:{lat:13.443182,lon:-15.310139},Guinea:{lat:9.945587,lon:-9.696645},Guadeloupe:{lat:16.995971,lon:-62.067641},"Equatorial Guinea":{lat:1.650801,lon:10.267895},Greece:{lat:39.074208,lon:21.824312},"South Georgia and the South Sandwich Islands":{lat:-54.429579,lon:-36.587909},Guatemala:{lat:15.783471,lon:-90.230759},Guam:{lat:13.444304,lon:144.793731},"Guinea-Bissau":{lat:11.803749,lon:-15.180413},Guyana:{lat:4.860416,lon:-58.93018},"Gaza Strip":{lat:31.354676,lon:34.308825},"Hong Kong":{lat:22.396428,lon:114.109497},"Heard Island and McDonald Islands":{lat:-53.08181,lon:73.504158},Honduras:{lat:15.199999,lon:-86.241905},Croatia:{lat:45.1,lon:15.2},Haiti:{lat:18.971187,lon:-72.285215},Hungary:{lat:47.162494,lon:19.503304},Indonesia:{lat:-.789275,lon:113.921327},Ireland:{lat:53.41291,lon:-8.24389},Israel:{lat:31.046051,lon:34.851612},"Isle of Man":{lat:54.236107,lon:-4.548056},India:{lat:20.593684,lon:78.96288},"British Indian Ocean Territory":{lat:-6.343194,lon:71.876519},Iraq:{lat:33.223191,lon:43.679291},Iran:{lat:32.427908,lon:53.688046},Iceland:{lat:64.963051,lon:-19.020835},Italy:{lat:41.87194,lon:12.56738},Jersey:{lat:49.214439,lon:-2.13125},Jamaica:{lat:18.109581,lon:-77.297508},Jordan:{lat:30.585164,lon:36.238414},Japan:{lat:36.204824,lon:138.252924},Kenya:{lat:-.023559,lon:37.906193},Kyrgyzstan:{lat:41.20438,lon:74.766098},Cambodia:{lat:12.565679,lon:104.990963},Kiribati:{lat:-3.370417,lon:-168.734039},Comoros:{lat:-11.875001,lon:43.872219},"Saint Kitts and Nevis":{lat:17.357822,lon:-62.782998},"North Korea":{lat:40.339852,lon:127.510093},"South Korea":{lat:35.907757,lon:127.766922},Kuwait:{lat:29.31166,lon:47.481766},"Cayman Islands":{lat:19.513469,lon:-80.566956},Kazakhstan:{lat:48.019573,lon:66.923684},Laos:{lat:19.85627,lon:102.495496},Lebanon:{lat:33.854721,lon:35.862285},"Saint Lucia":{lat:13.909444,lon:-60.978893},Liechtenstein:{lat:47.166,lon:9.555373},"Sri Lanka":{lat:7.873054,lon:80.771797},Liberia:{lat:6.428055,lon:-9.429499},Lesotho:{lat:-29.609988,lon:28.233608},Lithuania:{lat:55.169438,lon:23.881275},Luxembourg:{lat:49.815273,lon:6.129583},Latvia:{lat:56.879635,lon:24.603189},Libya:{lat:26.3351,lon:17.228331},Morocco:{lat:31.791702,lon:-7.09262},Monaco:{lat:43.750298,lon:7.412841},Moldova:{lat:47.411631,lon:28.369885},Montenegro:{lat:42.708678,lon:19.37439},Madagascar:{lat:-18.766947,lon:46.869107},"Marshall Islands":{lat:7.131474,lon:171.184478},"Macedonia [FYROM]":{lat:41.608635,lon:21.745275},Mali:{lat:17.570692,lon:-3.996166},"Myanmar [Burma]":{lat:21.913965,lon:95.956223},Mongolia:{lat:46.862496,lon:103.846656},Macau:{lat:22.198745,lon:113.543873},"Northern Mariana Islands":{lat:17.33083,lon:145.38469},Martinique:{lat:14.641528,lon:-61.024174},Mauritania:{lat:21.00789,lon:-10.940835},Montserrat:{lat:16.742498,lon:-62.187366},Malta:{lat:35.937496,lon:14.375416},Mauritius:{lat:-20.348404,lon:57.552152},Maldives:{lat:3.202778,lon:73.22068},Malawi:{lat:-13.254308,lon:34.301525},Mexico:{lat:23.634501,lon:-102.552784},Malaysia:{lat:4.210484,lon:101.975766},Mozambique:{lat:-18.665695,lon:35.529562},Namibia:{lat:-22.95764,lon:18.49041},"New Caledonia":{lat:-20.904305,lon:165.618042},Niger:{lat:17.607789,lon:8.081666},"Norfolk Island":{lat:-29.040835,lon:167.954712},Nigeria:{lat:9.081999,lon:8.675277},Nicaragua:{lat:12.865416,lon:-85.207229},Netherlands:{lat:52.132633,lon:5.291266},Norway:{lat:60.472024,lon:8.468946},Nepal:{lat:28.394857,lon:84.124008},Nauru:{lat:-.522778,lon:166.931503},Niue:{lat:-19.054445,lon:-169.867233},"New Zealand":{lat:-40.900557,lon:174.885971},Oman:{lat:21.512583,lon:55.923255},Panama:{lat:8.537981,lon:-80.782127},Peru:{lat:-9.189967,lon:-75.015152},"French Polynesia":{lat:-17.679742,lon:-149.406843},"Papua New Guinea":{lat:-6.314993,lon:143.95555},Philippines:{lat:12.879721,lon:121.774017},Pakistan:{lat:30.375321,lon:69.345116},Poland:{lat:51.919438,lon:19.145136},"Saint Pierre and Miquelon":{lat:46.941936,lon:-56.27111},"Pitcairn Islands":{lat:-24.703615,lon:-127.439308},"Puerto Rico":{lat:18.220833,lon:-66.590149},"Palestinian Territories":{lat:31.952162,lon:35.233154},Portugal:{lat:39.399872,lon:-8.224454},Palau:{lat:7.51498,lon:134.58252},Paraguay:{lat:-23.442503,lon:-58.443832},Qatar:{lat:25.354826,lon:51.183884},"Réunion":{lat:-21.115141,lon:55.536384},Romania:{lat:45.943161,lon:24.96676},Serbia:{lat:44.016521,lon:21.005859},Russia:{lat:61.52401,lon:105.318756},Rwanda:{lat:-1.940278,lon:29.873888},"Saudi Arabia":{lat:23.885942,lon:45.079162},"Solomon Islands":{lat:-9.64571,lon:160.156194},Seychelles:{lat:-4.679574,lon:55.491977},Sudan:{lat:12.862807,lon:30.217636},Sweden:{lat:60.128161,lon:18.643501},Singapore:{lat:1.352083,lon:103.819836},"Saint Helena":{lat:-24.143474,lon:-10.030696},Slovenia:{lat:46.151241,lon:14.995463},"Svalbard and Jan Mayen":{lat:77.553604,lon:23.670272},Slovakia:{lat:48.669026,lon:19.699024},"Sierra Leone":{lat:8.460555,lon:-11.779889},"San Marino":{lat:43.94236,lon:12.457777},Senegal:{lat:14.497401,lon:-14.452362},Somalia:{lat:5.152149,lon:46.199616},Suriname:{lat:3.919305,lon:-56.027783},"São Tomé and Príncipe":{lat:.18636,lon:6.613081},"El Salvador":{lat:13.794185,lon:-88.89653},Syria:{lat:34.802075,lon:38.996815},Swaziland:{lat:-26.522503,lon:31.465866},"Turks and Caicos Islands":{lat:21.694025,lon:-71.797928},Chad:{lat:15.454166,lon:18.732207},"French Southern Territories":{lat:-49.280366,lon:69.348557},Togo:{lat:8.619543,lon:.824782},Thailand:{lat:15.870032,lon:100.992541},Tajikistan:{lat:38.861034,lon:71.276093},Tokelau:{lat:-8.967363,lon:-171.855881},"Timor-Leste":{lat:-8.874217,lon:125.727539},Turkmenistan:{lat:38.969719,lon:59.556278},Tunisia:{lat:33.886917,lon:9.537499},Tonga:{lat:-21.178986,lon:-175.198242},Turkey:{lat:38.963745,lon:35.243322},"Trinidad and Tobago":{lat:10.691803,lon:-61.222503},Tuvalu:{lat:-7.109535,lon:177.64933},Taiwan:{lat:23.69781,lon:120.960515},Tanzania:{lat:-6.369028,lon:34.888822},Ukraine:{lat:48.379433,lon:31.16558},Uganda:{lat:1.373333,lon:32.290275},"United States":{lat:37.09024,lon:-95.712891},Uruguay:{lat:-32.522779,lon:-55.765835},Uzbekistan:{lat:41.377491,lon:64.585262},"Vatican City":{lat:41.902916,lon:12.453389},"Saint Vincent and the Grenadines":{lat:12.984305,lon:-61.287228},Venezuela:{lat:6.42375,lon:-66.58973},"British Virgin Islands":{lat:18.420695,lon:-64.639968},"U.S. Virgin Islands":{lat:18.335765,lon:-64.896335},Vietnam:{lat:14.058324,lon:108.277199},Vanuatu:{lat:-15.376706,lon:166.959158},"Wallis and Futuna":{lat:-13.768752,lon:-177.156097},Samoa:{lat:-13.759029,lon:-172.104629},Kosovo:{lat:42.602636,lon:20.902977},Yemen:{lat:15.552727,lon:48.516388},Mayotte:{lat:-12.8275,lon:45.166244},"South Africa":{lat:-30.559482,lon:22.937506},Zambia:{lat:-13.133897,lon:27.849332},Zimbabwe:{lat:-19.015438,lon:29.154857}},timeLineGraphUpdated=!1,endPointResponseObjects=[],endPointResponseUpdatedObjects={},endPointTimeLineGraphs={},endPointTimeLineResponseTimeGraphs={},endPointDataFrames=50,endPointGraphsMax=6,endPointResponseGraphWidth=100,endPointResponseGraphHeight=60,endPointResponseGraphRadius=Math.min(endPointResponseGraphWidth,endPointResponseGraphHeight)/2,endPointResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),endPointResponseGraphArc=d3.svg.arc().outerRadius(.7*endPointResponseGraphRadius).innerRadius(.65*endPointResponseGraphRadius),endPointResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*endPointResponseGraphRadius).innerRadius(.4*endPointResponseGraphRadius),endPointResponseGraphArcInner=d3.svg.arc().outerRadius(.35*endPointResponseGraphRadius).innerRadius(.3*endPointResponseGraphRadius),endPointResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),endPointResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),endPointResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),graphTotals={},endPointHealthGraphs=[],endPoints={},endPointHealthGraphsFrameCount=0,endPointHealthGraphId,lineGraphs=[];createNewLineGraph("Connections","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Unique IPs","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Success","responseLineGraphs","area","third",color123,"rgba(256,256,256,0.3)",.5),createNewLineGraph("Rejected","responseLineGraphs","area","third",color4xx,"rgba(209, 102, 6,0.3)",.5),createNewLineGraph("Error","responseLineGraphs","area","third",color5xx,"rgba(256,0,0,0.3)",.5);var mapLargeScope="world",mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,map=new Datamap({element:document.getElementById("dataMapContainer"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.1,popupOnHover:!1,highlightOnHover:!1}}),mapLargeWorld=new Datamap({element:document.getElementById("dataMapContainerLargeWorld"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),mapLargeUSA=new Datamap({element:document.getElementById("dataMapContainerLargeUSA"),fills:{defaultFill:"transparent"},data:{},scope:"usa",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}});(responseCodeGraphSvg=d3.select("#responseCodeGraph").append("svg").append("g")).append("g").attr("class","slices"),responseCodeGraphSvg.append("g").attr("class","labels"),responseCodeGraphSvg.append("g").attr("class","lines");var responseCodeGraphWidth=275,responseCodeGraphHeight=150,responseCodeGraphRadius=Math.min(responseCodeGraphWidth,responseCodeGraphHeight)/2,responseCodeGraphArc=d3.svg.arc().outerRadius(.8*responseCodeGraphRadius).innerRadius(.75*responseCodeGraphRadius),responseCodeGraphOuterArc=d3.svg.arc().innerRadius(.9*responseCodeGraphRadius).outerRadius(.9*responseCodeGraphRadius);responseCodeGraphSvg.attr("transform","translate("+responseCodeGraphWidth/2+","+responseCodeGraphHeight/2+")");var responseCodeGraphColor=d3.scale.ordinal().domain(["Success","Rejected","Error"]).range([color123,color4xx,color5xx]),scatterCircleGraphWidth=420,scatterCircleGraphHeight=420,deviceScatterGraph=new Circos({container:"#circleScatterGraph",width:scatterCircleGraphWidth,height:scatterCircleGraphHeight}),scatterCircleGraphInstanceArray=[],deviceScatterData=[],color5xx="#ff0000",color123="#ffffff",color4xx="#d16606",timeLineFirstRun=!0,timeLineGraph=new Rickshaw.Graph({element:document.getElementById("timeLine"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar",unstack:!0},{name:"5xx",color:color5xx,renderer:"bar",unstack:!0},{name:"123xx",color:color123,renderer:"bar",unstack:!0}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),timeLineGraphLatency=new Rickshaw.Graph({element:document.getElementById("timeLineLatency"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"Latency",color:"#00adef",renderer:"line",strokeWidth:1},{name:"LatencyArea",color:"rgba(0,133,199,0.2)",renderer:"area"}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})});(axesTime=new Rickshaw.Graph.Axis.Time({graph:timeLineGraph})).render(),(axes=new Rickshaw.Graph.Axis.Y({graph:timeLineGraph,pixelsPerTick:30,ticksTreatment:"inverse"})).render();var hoverDetail=new Rickshaw.Graph.HoverDetail({graph:timeLineGraph,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}}),hoverDetailLatency=new Rickshaw.Graph.HoverDetail({graph:timeLineGraphLatency,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}});timeLineGraph.update(),timeLineGraphLatency.update();var timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0,timeLineBase=new Date;timeLineBase.setHours(timeLineBase.getHours()-24),timeLineBase.setMinutes(timeLineBase.getMinutes()-(timeLineBase.getMinutes()-5*Math.ceil(timeLineBase.getMinutes()/5))),timeLineBase.setSeconds(0),timeLineBase.setMilliseconds(0);var timeLineBaseAdjusted=new Date(timeLineBase.getTime());timeLineBaseAdjusted.setMinutes(timeLineBaseAdjusted.getMinutes()+5);for(var timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes(),m=0;m<287;m++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]={},timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=0,55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5;var trafficPointCount=0,apiGatewayCloudWatchLogsPrefix="API-Gateway-Execution-Logs_",apiGatewayObjectTarget=0,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0,apiGatewayInventoryQueue={},loginRegion="us-east-1",credentialExpirationDate,lastMetricCall=0,getAWSInventoryInterval=5e3,getAWSMetricsInterval=3e5,getAWSLoggedMetricsInterval=6e4,getAWSBillingInterval=216e5,getAWSEC2TrafficInterval=5e3,initialLoad=!0,baseUrl="https://pqhzr7kno2.execute-api.us-east-1.amazonaws.com/dev/",a,s,t,s3,cloudWatchLogs,cloudWatchObjects,APIGatewayObjects,appAccountS3,appAccountConf,centroids={Andorra:{lat:42.546245,lon:1.601554},"United Arab Emirates":{lat:23.424076,lon:53.847818},Afghanistan:{lat:33.93911,lon:67.709953},"Antigua and Barbuda":{lat:17.060816,lon:-61.796428},Anguilla:{lat:18.220554,lon:-63.068615},Albania:{lat:41.153332,lon:20.168331},Armenia:{lat:40.069099,lon:45.038189},"Netherlands Antilles":{lat:12.226079,lon:-69.060087},Angola:{lat:-11.202692,lon:17.873887},Antarctica:{lat:-75.250973,lon:-.071389},Argentina:{lat:-38.416097,lon:-63.616672},"American Samoa":{lat:-14.270972,lon:-170.132217},Austria:{lat:47.516231,lon:14.550072},Australia:{lat:-25.274398,lon:133.775136},Aruba:{lat:12.52111,lon:-69.968338},Azerbaijan:{lat:40.143105,lon:47.576927},"Bosnia and Herzegovina":{lat:43.915886,lon:17.679076},Barbados:{lat:13.193887,lon:-59.543198},Bangladesh:{lat:23.684994,lon:90.356331},Belgium:{lat:50.503887,lon:4.469936},"Burkina Faso":{lat:12.238333,lon:-1.561593},Bulgaria:{lat:42.733883,lon:25.48583},Bahrain:{lat:25.930414,lon:50.637772},Burundi:{lat:-3.373056,lon:29.918886},Benin:{lat:9.30769,lon:2.315834},Bermuda:{lat:32.321384,lon:-64.75737},Brunei:{lat:4.535277,lon:114.727669},Bolivia:{lat:-16.290154,lon:-63.588653},Brazil:{lat:-14.235004,lon:-51.92528},Bahamas:{lat:25.03428,lon:-77.39628},Bhutan:{lat:27.514162,lon:90.433601},"Bouvet Island":{lat:-54.423199,lon:3.413194},Botswana:{lat:-22.328474,lon:24.684866},Belarus:{lat:53.709807,lon:27.953389},Belize:{lat:17.189877,lon:-88.49765},Canada:{lat:56.130366,lon:-106.346771},"Cocos [Keeling] Islands":{lat:-12.164165,lon:96.870956},"Congo [DRC]":{lat:-4.038333,lon:21.758664},"Central African Republic":{lat:6.611111,lon:20.939444},"Congo [Republic]":{lat:-.228021,lon:15.827659},Switzerland:{lat:46.818188,lon:8.227512},"Côte d'Ivoire":{lat:7.539989,lon:-5.54708},"Cook Islands":{lat:-21.236736,lon:-159.777671},Chile:{lat:-35.675147,lon:-71.542969},Cameroon:{lat:7.369722,lon:12.354722},China:{lat:35.86166,lon:104.195397},Colombia:{lat:4.570868,lon:-74.297333},"Costa Rica":{lat:9.748917,lon:-83.753428},Cuba:{lat:21.521757,lon:-77.781167},"Cape Verde":{lat:16.002082,lon:-24.013197},"Christmas Island":{lat:-10.447525,lon:105.690449},Cyprus:{lat:35.126413,lon:33.429859},"Czech Republic":{lat:49.817492,lon:15.472962},Germany:{lat:51.165691,lon:10.451526},Djibouti:{lat:11.825138,lon:42.590275},Denmark:{lat:56.26392,lon:9.501785},Dominica:{lat:15.414999,lon:-61.370976},"Dominican Republic":{lat:18.735693,lon:-70.162651},Algeria:{lat:28.033886,lon:1.659626},Ecuador:{lat:-1.831239,lon:-78.183406},Estonia:{lat:58.595272,lon:25.013607},Egypt:{lat:26.820553,lon:30.802498},"Western Sahara":{lat:24.215527,lon:-12.885834},Eritrea:{lat:15.179384,lon:39.782334},Spain:{lat:40.463667,lon:-3.74922},Ethiopia:{lat:9.145,lon:40.489673},Finland:{lat:61.92411,lon:25.748151},Fiji:{lat:-16.578193,lon:179.414413},"Falkland Islands [Islas Malvinas]":{lat:-51.796253,lon:-59.523613},Micronesia:{lat:7.425554,lon:150.550812},"Faroe Islands":{lat:61.892635,lon:-6.911806},France:{lat:46.227638,lon:2.213749},Gabon:{lat:-.803689,lon:11.609444},"United Kingdom":{lat:55.378051,lon:-3.435973},Grenada:{lat:12.262776,lon:-61.604171},Georgia:{lat:42.315407,lon:43.356892},"French Guiana":{lat:3.933889,lon:-53.125782},Guernsey:{lat:49.465691,lon:-2.585278},Ghana:{lat:7.946527,lon:-1.023194},Gibraltar:{lat:36.137741,lon:-5.345374},Greenland:{lat:71.706936,lon:-42.604303},Gambia:{lat:13.443182,lon:-15.310139},Guinea:{lat:9.945587,lon:-9.696645},Guadeloupe:{lat:16.995971,lon:-62.067641},"Equatorial Guinea":{lat:1.650801,lon:10.267895},Greece:{lat:39.074208,lon:21.824312},"South Georgia and the South Sandwich Islands":{lat:-54.429579,lon:-36.587909},Guatemala:{lat:15.783471,lon:-90.230759},Guam:{lat:13.444304,lon:144.793731},"Guinea-Bissau":{lat:11.803749,lon:-15.180413},Guyana:{lat:4.860416,lon:-58.93018},"Gaza Strip":{lat:31.354676,lon:34.308825},"Hong Kong":{lat:22.396428,lon:114.109497},"Heard Island and McDonald Islands":{lat:-53.08181,lon:73.504158},Honduras:{lat:15.199999,lon:-86.241905},Croatia:{lat:45.1,lon:15.2},Haiti:{lat:18.971187,lon:-72.285215},Hungary:{lat:47.162494,lon:19.503304},Indonesia:{lat:-.789275,lon:113.921327},Ireland:{lat:53.41291,lon:-8.24389},Israel:{lat:31.046051,lon:34.851612},"Isle of Man":{lat:54.236107,lon:-4.548056},India:{lat:20.593684,lon:78.96288},"British Indian Ocean Territory":{lat:-6.343194,lon:71.876519},Iraq:{lat:33.223191,lon:43.679291},Iran:{lat:32.427908,lon:53.688046},Iceland:{lat:64.963051,lon:-19.020835},Italy:{lat:41.87194,lon:12.56738},Jersey:{lat:49.214439,lon:-2.13125},Jamaica:{lat:18.109581,lon:-77.297508},Jordan:{lat:30.585164,lon:36.238414},Japan:{lat:36.204824,lon:138.252924},Kenya:{lat:-.023559,lon:37.906193},Kyrgyzstan:{lat:41.20438,lon:74.766098},Cambodia:{lat:12.565679,lon:104.990963},Kiribati:{lat:-3.370417,lon:-168.734039},Comoros:{lat:-11.875001,lon:43.872219},"Saint Kitts and Nevis":{lat:17.357822,lon:-62.782998},"North Korea":{lat:40.339852,lon:127.510093},"South Korea":{lat:35.907757,lon:127.766922},Kuwait:{lat:29.31166,lon:47.481766},"Cayman Islands":{lat:19.513469,lon:-80.566956},Kazakhstan:{lat:48.019573,lon:66.923684},Laos:{lat:19.85627,lon:102.495496},Lebanon:{lat:33.854721,lon:35.862285},"Saint Lucia":{lat:13.909444,lon:-60.978893},Liechtenstein:{lat:47.166,lon:9.555373},"Sri Lanka":{lat:7.873054,lon:80.771797},Liberia:{lat:6.428055,lon:-9.429499},Lesotho:{lat:-29.609988,lon:28.233608},Lithuania:{lat:55.169438,lon:23.881275},Luxembourg:{lat:49.815273,lon:6.129583},Latvia:{lat:56.879635,lon:24.603189},Libya:{lat:26.3351,lon:17.228331},Morocco:{lat:31.791702,lon:-7.09262},Monaco:{lat:43.750298,lon:7.412841},Moldova:{lat:47.411631,lon:28.369885},Montenegro:{lat:42.708678,lon:19.37439},Madagascar:{lat:-18.766947,lon:46.869107},"Marshall Islands":{lat:7.131474,lon:171.184478},"Macedonia [FYROM]":{lat:41.608635,lon:21.745275},Mali:{lat:17.570692,lon:-3.996166},"Myanmar [Burma]":{lat:21.913965,lon:95.956223},Mongolia:{lat:46.862496,lon:103.846656},Macau:{lat:22.198745,lon:113.543873},"Northern Mariana Islands":{lat:17.33083,lon:145.38469},Martinique:{lat:14.641528,lon:-61.024174},Mauritania:{lat:21.00789,lon:-10.940835},Montserrat:{lat:16.742498,lon:-62.187366},Malta:{lat:35.937496,lon:14.375416},Mauritius:{lat:-20.348404,lon:57.552152},Maldives:{lat:3.202778,lon:73.22068},Malawi:{lat:-13.254308,lon:34.301525},Mexico:{lat:23.634501,lon:-102.552784},Malaysia:{lat:4.210484,lon:101.975766},Mozambique:{lat:-18.665695,lon:35.529562},Namibia:{lat:-22.95764,lon:18.49041},"New Caledonia":{lat:-20.904305,lon:165.618042},Niger:{lat:17.607789,lon:8.081666},"Norfolk Island":{lat:-29.040835,lon:167.954712},Nigeria:{lat:9.081999,lon:8.675277},Nicaragua:{lat:12.865416,lon:-85.207229},Netherlands:{lat:52.132633,lon:5.291266},Norway:{lat:60.472024,lon:8.468946},Nepal:{lat:28.394857,lon:84.124008},Nauru:{lat:-.522778,lon:166.931503},Niue:{lat:-19.054445,lon:-169.867233},"New Zealand":{lat:-40.900557,lon:174.885971},Oman:{lat:21.512583,lon:55.923255},Panama:{lat:8.537981,lon:-80.782127},Peru:{lat:-9.189967,lon:-75.015152},"French Polynesia":{lat:-17.679742,lon:-149.406843},"Papua New Guinea":{lat:-6.314993,lon:143.95555},Philippines:{lat:12.879721,lon:121.774017},Pakistan:{lat:30.375321,lon:69.345116},Poland:{lat:51.919438,lon:19.145136},"Saint Pierre and Miquelon":{lat:46.941936,lon:-56.27111},"Pitcairn Islands":{lat:-24.703615,lon:-127.439308},"Puerto Rico":{lat:18.220833,lon:-66.590149},"Palestinian Territories":{lat:31.952162,lon:35.233154},Portugal:{lat:39.399872,lon:-8.224454},Palau:{lat:7.51498,lon:134.58252},Paraguay:{lat:-23.442503,lon:-58.443832},Qatar:{lat:25.354826,lon:51.183884},"Réunion":{lat:-21.115141,lon:55.536384},Romania:{lat:45.943161,lon:24.96676},Serbia:{lat:44.016521,lon:21.005859},Russia:{lat:61.52401,lon:105.318756},Rwanda:{lat:-1.940278,lon:29.873888},"Saudi Arabia":{lat:23.885942,lon:45.079162},"Solomon Islands":{lat:-9.64571,lon:160.156194},Seychelles:{lat:-4.679574,lon:55.491977},Sudan:{lat:12.862807,lon:30.217636},Sweden:{lat:60.128161,lon:18.643501},Singapore:{lat:1.352083,lon:103.819836},"Saint Helena":{lat:-24.143474,lon:-10.030696},Slovenia:{lat:46.151241,lon:14.995463},"Svalbard and Jan Mayen":{lat:77.553604,lon:23.670272},Slovakia:{lat:48.669026,lon:19.699024},"Sierra Leone":{lat:8.460555,lon:-11.779889},"San Marino":{lat:43.94236,lon:12.457777},Senegal:{lat:14.497401,lon:-14.452362},Somalia:{lat:5.152149,lon:46.199616},Suriname:{lat:3.919305,lon:-56.027783},"São Tomé and Príncipe":{lat:.18636,lon:6.613081},"El Salvador":{lat:13.794185,lon:-88.89653},Syria:{lat:34.802075,lon:38.996815},Swaziland:{lat:-26.522503,lon:31.465866},"Turks and Caicos Islands":{lat:21.694025,lon:-71.797928},Chad:{lat:15.454166,lon:18.732207},"French Southern Territories":{lat:-49.280366,lon:69.348557},Togo:{lat:8.619543,lon:.824782},Thailand:{lat:15.870032,lon:100.992541},Tajikistan:{lat:38.861034,lon:71.276093},Tokelau:{lat:-8.967363,lon:-171.855881},"Timor-Leste":{lat:-8.874217,lon:125.727539},Turkmenistan:{lat:38.969719,lon:59.556278},Tunisia:{lat:33.886917,lon:9.537499},Tonga:{lat:-21.178986,lon:-175.198242},Turkey:{lat:38.963745,lon:35.243322},"Trinidad and Tobago":{lat:10.691803,lon:-61.222503},Tuvalu:{lat:-7.109535,lon:177.64933},Taiwan:{lat:23.69781,lon:120.960515},Tanzania:{lat:-6.369028,lon:34.888822},Ukraine:{lat:48.379433,lon:31.16558},Uganda:{lat:1.373333,lon:32.290275},"United States":{lat:37.09024,lon:-95.712891},Uruguay:{lat:-32.522779,lon:-55.765835},Uzbekistan:{lat:41.377491,lon:64.585262},"Vatican City":{lat:41.902916,lon:12.453389},"Saint Vincent and the Grenadines":{lat:12.984305,lon:-61.287228},Venezuela:{lat:6.42375,lon:-66.58973},"British Virgin Islands":{lat:18.420695,lon:-64.639968},"U.S. Virgin Islands":{lat:18.335765,lon:-64.896335},Vietnam:{lat:14.058324,lon:108.277199},Vanuatu:{lat:-15.376706,lon:166.959158},"Wallis and Futuna":{lat:-13.768752,lon:-177.156097},Samoa:{lat:-13.759029,lon:-172.104629},Kosovo:{lat:42.602636,lon:20.902977},Yemen:{lat:15.552727,lon:48.516388},Mayotte:{lat:-12.8275,lon:45.166244},"South Africa":{lat:-30.559482,lon:22.937506},Zambia:{lat:-13.133897,lon:27.849332},Zimbabwe:{lat:-19.015438,lon:29.154857}},timeLineGraphUpdated=!1,endPointResponseObjects=[],endPointResponseUpdatedObjects={},endPointTimeLineGraphs={},endPointTimeLineResponseTimeGraphs={},endPointDataFrames=50,endPointGraphsMax=6,endPointResponseGraphWidth=100,endPointResponseGraphHeight=60,endPointResponseGraphRadius=Math.min(endPointResponseGraphWidth,endPointResponseGraphHeight)/2,endPointResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),endPointResponseGraphArc=d3.svg.arc().outerRadius(.7*endPointResponseGraphRadius).innerRadius(.65*endPointResponseGraphRadius),endPointResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*endPointResponseGraphRadius).innerRadius(.4*endPointResponseGraphRadius),endPointResponseGraphArcInner=d3.svg.arc().outerRadius(.35*endPointResponseGraphRadius).innerRadius(.3*endPointResponseGraphRadius),endPointResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),endPointResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),endPointResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),graphTotals={},endPointHealthGraphs=[],endPoints={},endPointHealthGraphsFrameCount=0,endPointHealthGraphId,lineGraphs=[];createNewLineGraph("Connections","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Unique IPs","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Success","responseLineGraphs","area","third",color123,"rgba(256,256,256,0.3)",.5),createNewLineGraph("Rejected","responseLineGraphs","area","third",color4xx,"rgba(209, 102, 6,0.3)",.5),createNewLineGraph("Error","responseLineGraphs","area","third",color5xx,"rgba(256,0,0,0.3)",.5);var mapLargeScope="world",mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,map=new Datamap({element:document.getElementById("dataMapContainer"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.1,popupOnHover:!1,highlightOnHover:!1}}),mapLargeWorld=new Datamap({element:document.getElementById("dataMapContainerLargeWorld"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),mapLargeUSA=new Datamap({element:document.getElementById("dataMapContainerLargeUSA"),fills:{defaultFill:"transparent"},data:{},scope:"usa",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}});(responseCodeGraphSvg=d3.select("#responseCodeGraph").append("svg").append("g")).append("g").attr("class","slices"),responseCodeGraphSvg.append("g").attr("class","labels"),responseCodeGraphSvg.append("g").attr("class","lines");var responseCodeGraphWidth=275,responseCodeGraphHeight=150,responseCodeGraphRadius=Math.min(responseCodeGraphWidth,responseCodeGraphHeight)/2,responseCodeGraphArc=d3.svg.arc().outerRadius(.8*responseCodeGraphRadius).innerRadius(.75*responseCodeGraphRadius),responseCodeGraphOuterArc=d3.svg.arc().innerRadius(.9*responseCodeGraphRadius).outerRadius(.9*responseCodeGraphRadius);responseCodeGraphSvg.attr("transform","translate("+responseCodeGraphWidth/2+","+responseCodeGraphHeight/2+")");var responseCodeGraphColor=d3.scale.ordinal().domain(["Success","Rejected","Error"]).range([color123,color4xx,color5xx]),scatterCircleGraphWidth=420,scatterCircleGraphHeight=420,deviceScatterGraph=new Circos({container:"#circleScatterGraph",width:scatterCircleGraphWidth,height:scatterCircleGraphHeight}),scatterCircleGraphInstanceArray=[],deviceScatterData=[],Shaders={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 1 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = 0;","gl_Position = 0;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = 0;","gl_FragColor = 0;","}"].join("\n")}},ShadersOverlay={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 0.5 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.6 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.1 - dot( vNormal, vec3( 0, 2.1, 0.0 ) ), 8.0 );","gl_FragColor = vec4( 0, 0.5, 1, 0.8 ) * intensity;","}"].join("\n")}},color5xx="#ff0000",color123="#ffffff",color4xx="#d16606",timeLineFirstRun=!0,timeLineGraph=new Rickshaw.Graph({element:document.getElementById("timeLine"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar",unstack:!0},{name:"5xx",color:color5xx,renderer:"bar",unstack:!0},{name:"123xx",color:color123,renderer:"bar",unstack:!0}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),timeLineGraphLatency=new Rickshaw.Graph({element:document.getElementById("timeLineLatency"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"Latency",color:"#00adef",renderer:"line",strokeWidth:1},{name:"LatencyArea",color:"rgba(0,133,199,0.2)",renderer:"area"}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})});(axesTime=new Rickshaw.Graph.Axis.Time({graph:timeLineGraph})).render(),(axes=new Rickshaw.Graph.Axis.Y({graph:timeLineGraph,pixelsPerTick:30,ticksTreatment:"inverse"})).render();var hoverDetail=new Rickshaw.Graph.HoverDetail({graph:timeLineGraph,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}}),hoverDetailLatency=new Rickshaw.Graph.HoverDetail({graph:timeLineGraphLatency,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}});timeLineGraph.update(),timeLineGraphLatency.update();var timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0;(timeLineBase=new Date).setHours(timeLineBase.getHours()-24),timeLineBase.setMinutes(timeLineBase.getMinutes()-(timeLineBase.getMinutes()-5*Math.ceil(timeLineBase.getMinutes()/5))),timeLineBase.setSeconds(0),timeLineBase.setMilliseconds(0),(timeLineBaseAdjusted=new Date(timeLineBase.getTime())).setMinutes(timeLineBaseAdjusted.getMinutes()+5);for(var timeLineBaseDays=timeLineBase.getDate(),timeLineBaseHours=timeLineBase.getHours(),timeLineBaseMinutes=timeLineBase.getMinutes(),m=0;m<287;m++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]={},timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=0,55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5;var trafficPointCount=0,apiGatewayCloudWatchLogsPrefix="API-Gateway-Execution-Logs_",apiGatewayObjectTarget=0,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0,apiGatewayInventoryQueue={},loginRegion="us-east-1",credentialExpirationDate,lastMetricCall=0,getAWSInventoryInterval=5e3,getAWSMetricsInterval=3e5,getAWSLoggedMetricsInterval=6e4,getAWSBillingInterval=216e5,getAWSEC2TrafficInterval=5e3,initialLoad=!0,baseUrl="https://pqhzr7kno2.execute-api.us-east-1.amazonaws.com/dev/",a,s,t,s3,cloudWatchLogs,cloudWatchObjects,APIGatewayObjects,appAccountS3,appAccountConf,centroids={Andorra:{lat:42.546245,lon:1.601554},"United Arab Emirates":{lat:23.424076,lon:53.847818},Afghanistan:{lat:33.93911,lon:67.709953},"Antigua and Barbuda":{lat:17.060816,lon:-61.796428},Anguilla:{lat:18.220554,lon:-63.068615},Albania:{lat:41.153332,lon:20.168331},Armenia:{lat:40.069099,lon:45.038189},"Netherlands Antilles":{lat:12.226079,lon:-69.060087},Angola:{lat:-11.202692,lon:17.873887},Antarctica:{lat:-75.250973,lon:-.071389},Argentina:{lat:-38.416097,lon:-63.616672},"American Samoa":{lat:-14.270972,lon:-170.132217},Austria:{lat:47.516231,lon:14.550072},Australia:{lat:-25.274398,lon:133.775136},Aruba:{lat:12.52111,lon:-69.968338},Azerbaijan:{lat:40.143105,lon:47.576927},"Bosnia and Herzegovina":{lat:43.915886,lon:17.679076},Barbados:{lat:13.193887,lon:-59.543198},Bangladesh:{lat:23.684994,lon:90.356331},Belgium:{lat:50.503887,lon:4.469936},"Burkina Faso":{lat:12.238333,lon:-1.561593},Bulgaria:{lat:42.733883,lon:25.48583},Bahrain:{lat:25.930414,lon:50.637772},Burundi:{lat:-3.373056,lon:29.918886},Benin:{lat:9.30769,lon:2.315834},Bermuda:{lat:32.321384,lon:-64.75737},Brunei:{lat:4.535277,lon:114.727669},Bolivia:{lat:-16.290154,lon:-63.588653},Brazil:{lat:-14.235004,lon:-51.92528},Bahamas:{lat:25.03428,lon:-77.39628},Bhutan:{lat:27.514162,lon:90.433601},"Bouvet Island":{lat:-54.423199,lon:3.413194},Botswana:{lat:-22.328474,lon:24.684866},Belarus:{lat:53.709807,lon:27.953389},Belize:{lat:17.189877,lon:-88.49765},Canada:{lat:56.130366,lon:-106.346771},"Cocos [Keeling] Islands":{lat:-12.164165,lon:96.870956},"Congo [DRC]":{lat:-4.038333,lon:21.758664},"Central African Republic":{lat:6.611111,lon:20.939444},"Congo [Republic]":{lat:-.228021,lon:15.827659},Switzerland:{lat:46.818188,lon:8.227512},"Côte d'Ivoire":{lat:7.539989,lon:-5.54708},"Cook Islands":{lat:-21.236736,lon:-159.777671},Chile:{lat:-35.675147,lon:-71.542969},Cameroon:{lat:7.369722,lon:12.354722},China:{lat:35.86166,lon:104.195397},Colombia:{lat:4.570868,lon:-74.297333},"Costa Rica":{lat:9.748917,lon:-83.753428},Cuba:{lat:21.521757,lon:-77.781167},"Cape Verde":{lat:16.002082,lon:-24.013197},"Christmas Island":{lat:-10.447525,lon:105.690449},Cyprus:{lat:35.126413,lon:33.429859},"Czech Republic":{lat:49.817492,lon:15.472962},Germany:{lat:51.165691,lon:10.451526},Djibouti:{lat:11.825138,lon:42.590275},Denmark:{lat:56.26392,lon:9.501785},Dominica:{lat:15.414999,lon:-61.370976},"Dominican Republic":{lat:18.735693,lon:-70.162651},Algeria:{lat:28.033886,lon:1.659626},Ecuador:{lat:-1.831239,lon:-78.183406},Estonia:{lat:58.595272,lon:25.013607},Egypt:{lat:26.820553,lon:30.802498},"Western Sahara":{lat:24.215527,lon:-12.885834},Eritrea:{lat:15.179384,lon:39.782334},Spain:{lat:40.463667,lon:-3.74922},Ethiopia:{lat:9.145,lon:40.489673},Finland:{lat:61.92411,lon:25.748151},Fiji:{lat:-16.578193,lon:179.414413},"Falkland Islands [Islas Malvinas]":{lat:-51.796253,lon:-59.523613},Micronesia:{lat:7.425554,lon:150.550812},"Faroe Islands":{lat:61.892635,lon:-6.911806},France:{lat:46.227638,lon:2.213749},Gabon:{lat:-.803689,lon:11.609444},"United Kingdom":{lat:55.378051,lon:-3.435973},Grenada:{lat:12.262776,lon:-61.604171},Georgia:{lat:42.315407,lon:43.356892},"French Guiana":{lat:3.933889,lon:-53.125782},Guernsey:{lat:49.465691,lon:-2.585278},Ghana:{lat:7.946527,lon:-1.023194},Gibraltar:{lat:36.137741,lon:-5.345374},Greenland:{lat:71.706936,lon:-42.604303},Gambia:{lat:13.443182,lon:-15.310139},Guinea:{lat:9.945587,lon:-9.696645},Guadeloupe:{lat:16.995971,lon:-62.067641},"Equatorial Guinea":{lat:1.650801,lon:10.267895},Greece:{lat:39.074208,lon:21.824312},"South Georgia and the South Sandwich Islands":{lat:-54.429579,lon:-36.587909},Guatemala:{lat:15.783471,lon:-90.230759},Guam:{lat:13.444304,lon:144.793731},"Guinea-Bissau":{lat:11.803749,lon:-15.180413},Guyana:{lat:4.860416,lon:-58.93018},"Gaza Strip":{lat:31.354676,lon:34.308825},"Hong Kong":{lat:22.396428,lon:114.109497},"Heard Island and McDonald Islands":{lat:-53.08181,lon:73.504158},Honduras:{lat:15.199999,lon:-86.241905},Croatia:{lat:45.1,lon:15.2},Haiti:{lat:18.971187,lon:-72.285215},Hungary:{lat:47.162494,lon:19.503304},Indonesia:{lat:-.789275,lon:113.921327},Ireland:{lat:53.41291,lon:-8.24389},Israel:{lat:31.046051,lon:34.851612},"Isle of Man":{lat:54.236107,lon:-4.548056},India:{lat:20.593684,lon:78.96288},"British Indian Ocean Territory":{lat:-6.343194,lon:71.876519},Iraq:{lat:33.223191,lon:43.679291},Iran:{lat:32.427908,lon:53.688046},Iceland:{lat:64.963051,lon:-19.020835},Italy:{lat:41.87194,lon:12.56738},Jersey:{lat:49.214439,lon:-2.13125},Jamaica:{lat:18.109581,lon:-77.297508},Jordan:{lat:30.585164,lon:36.238414},Japan:{lat:36.204824,lon:138.252924},Kenya:{lat:-.023559,lon:37.906193},Kyrgyzstan:{lat:41.20438,lon:74.766098},Cambodia:{lat:12.565679,lon:104.990963},Kiribati:{lat:-3.370417,lon:-168.734039},Comoros:{lat:-11.875001,lon:43.872219},"Saint Kitts and Nevis":{lat:17.357822,lon:-62.782998},"North Korea":{lat:40.339852,lon:127.510093},"South Korea":{lat:35.907757,lon:127.766922},Kuwait:{lat:29.31166,lon:47.481766},"Cayman Islands":{lat:19.513469,lon:-80.566956},Kazakhstan:{lat:48.019573,lon:66.923684},Laos:{lat:19.85627,lon:102.495496},Lebanon:{lat:33.854721,lon:35.862285},"Saint Lucia":{lat:13.909444,lon:-60.978893},Liechtenstein:{lat:47.166,lon:9.555373},"Sri Lanka":{lat:7.873054,lon:80.771797},Liberia:{lat:6.428055,lon:-9.429499},Lesotho:{lat:-29.609988,lon:28.233608},Lithuania:{lat:55.169438,lon:23.881275},Luxembourg:{lat:49.815273,lon:6.129583},Latvia:{lat:56.879635,lon:24.603189},Libya:{lat:26.3351,lon:17.228331},Morocco:{lat:31.791702,lon:-7.09262},Monaco:{lat:43.750298,lon:7.412841},Moldova:{lat:47.411631,lon:28.369885},Montenegro:{lat:42.708678,lon:19.37439},Madagascar:{lat:-18.766947,lon:46.869107},"Marshall Islands":{lat:7.131474,lon:171.184478},"Macedonia [FYROM]":{lat:41.608635,lon:21.745275},Mali:{lat:17.570692,lon:-3.996166},"Myanmar [Burma]":{lat:21.913965,lon:95.956223},Mongolia:{lat:46.862496,lon:103.846656},Macau:{lat:22.198745,lon:113.543873},"Northern Mariana Islands":{lat:17.33083,lon:145.38469},Martinique:{lat:14.641528,lon:-61.024174},Mauritania:{lat:21.00789,lon:-10.940835},Montserrat:{lat:16.742498,lon:-62.187366},Malta:{lat:35.937496,lon:14.375416},Mauritius:{lat:-20.348404,lon:57.552152},Maldives:{lat:3.202778,lon:73.22068},Malawi:{lat:-13.254308,lon:34.301525},Mexico:{lat:23.634501,lon:-102.552784},Malaysia:{lat:4.210484,lon:101.975766},Mozambique:{lat:-18.665695,lon:35.529562},Namibia:{lat:-22.95764,lon:18.49041},"New Caledonia":{lat:-20.904305,lon:165.618042},Niger:{lat:17.607789,lon:8.081666},"Norfolk Island":{lat:-29.040835,lon:167.954712},Nigeria:{lat:9.081999,lon:8.675277},Nicaragua:{lat:12.865416,lon:-85.207229},Netherlands:{lat:52.132633,lon:5.291266},Norway:{lat:60.472024,lon:8.468946},Nepal:{lat:28.394857,lon:84.124008},Nauru:{lat:-.522778,lon:166.931503},Niue:{lat:-19.054445,lon:-169.867233},"New Zealand":{lat:-40.900557,lon:174.885971},Oman:{lat:21.512583,lon:55.923255},Panama:{lat:8.537981,lon:-80.782127},Peru:{lat:-9.189967,lon:-75.015152},"French Polynesia":{lat:-17.679742,lon:-149.406843},"Papua New Guinea":{lat:-6.314993,lon:143.95555},Philippines:{lat:12.879721,lon:121.774017},Pakistan:{lat:30.375321,lon:69.345116},Poland:{lat:51.919438,lon:19.145136},"Saint Pierre and Miquelon":{lat:46.941936,lon:-56.27111},"Pitcairn Islands":{lat:-24.703615,lon:-127.439308},"Puerto Rico":{lat:18.220833,lon:-66.590149},"Palestinian Territories":{lat:31.952162,lon:35.233154},Portugal:{lat:39.399872,lon:-8.224454},Palau:{lat:7.51498,lon:134.58252},Paraguay:{lat:-23.442503,lon:-58.443832},Qatar:{lat:25.354826,lon:51.183884},"Réunion":{lat:-21.115141,lon:55.536384},Romania:{lat:45.943161,lon:24.96676},Serbia:{lat:44.016521,lon:21.005859},Russia:{lat:61.52401,lon:105.318756},Rwanda:{lat:-1.940278,lon:29.873888},"Saudi Arabia":{lat:23.885942,lon:45.079162},"Solomon Islands":{lat:-9.64571,lon:160.156194},Seychelles:{lat:-4.679574,lon:55.491977},Sudan:{lat:12.862807,lon:30.217636},Sweden:{lat:60.128161,lon:18.643501},Singapore:{lat:1.352083,lon:103.819836},"Saint Helena":{lat:-24.143474,lon:-10.030696},Slovenia:{lat:46.151241,lon:14.995463},"Svalbard and Jan Mayen":{lat:77.553604,lon:23.670272},Slovakia:{lat:48.669026,lon:19.699024},"Sierra Leone":{lat:8.460555,lon:-11.779889},"San Marino":{lat:43.94236,lon:12.457777},Senegal:{lat:14.497401,lon:-14.452362},Somalia:{lat:5.152149,lon:46.199616},Suriname:{lat:3.919305,lon:-56.027783},"São Tomé and Príncipe":{lat:.18636,lon:6.613081},"El Salvador":{lat:13.794185,lon:-88.89653},Syria:{lat:34.802075,lon:38.996815},Swaziland:{lat:-26.522503,lon:31.465866},"Turks and Caicos Islands":{lat:21.694025,lon:-71.797928},Chad:{lat:15.454166,lon:18.732207},"French Southern Territories":{lat:-49.280366,lon:69.348557},Togo:{lat:8.619543,lon:.824782},Thailand:{lat:15.870032,lon:100.992541},Tajikistan:{lat:38.861034,lon:71.276093},Tokelau:{lat:-8.967363,lon:-171.855881},"Timor-Leste":{lat:-8.874217,lon:125.727539},Turkmenistan:{lat:38.969719,lon:59.556278},Tunisia:{lat:33.886917,lon:9.537499},Tonga:{lat:-21.178986,lon:-175.198242},Turkey:{lat:38.963745,lon:35.243322},"Trinidad and Tobago":{lat:10.691803,lon:-61.222503},Tuvalu:{lat:-7.109535,lon:177.64933},Taiwan:{lat:23.69781,lon:120.960515},Tanzania:{lat:-6.369028,lon:34.888822},Ukraine:{lat:48.379433,lon:31.16558},Uganda:{lat:1.373333,lon:32.290275},"United States":{lat:37.09024,lon:-95.712891},Uruguay:{lat:-32.522779,lon:-55.765835},Uzbekistan:{lat:41.377491,lon:64.585262},"Vatican City":{lat:41.902916,lon:12.453389},"Saint Vincent and the Grenadines":{lat:12.984305,lon:-61.287228},Venezuela:{lat:6.42375,lon:-66.58973},"British Virgin Islands":{lat:18.420695,lon:-64.639968},"U.S. Virgin Islands":{lat:18.335765,lon:-64.896335},Vietnam:{lat:14.058324,lon:108.277199},Vanuatu:{lat:-15.376706,lon:166.959158},"Wallis and Futuna":{lat:-13.768752,lon:-177.156097},Samoa:{lat:-13.759029,lon:-172.104629},Kosovo:{lat:42.602636,lon:20.902977},Yemen:{lat:15.552727,lon:48.516388},Mayotte:{lat:-12.8275,lon:45.166244},"South Africa":{lat:-30.559482,lon:22.937506},Zambia:{lat:-13.133897,lon:27.849332},Zimbabwe:{lat:-19.015438,lon:29.154857}},timeLineGraphUpdated=!1,iso2iso3={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",CV:"CPV",KH:"KHM",CM:"CMR",CA:"CAN",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"},iso3iso2={AFG:"AF",ALA:"AX",ALB:"AL",DZA:"DZ",ASM:"AS",AND:"AD",AGO:"AO",AIA:"AI",ATA:"AQ",ATG:"AG",ARG:"AR",ARM:"AM",ABW:"AW",AUS:"AU",AUT:"AT",AZE:"AZ",BHS:"BS",BHR:"BH",BGD:"BD",BRB:"BB",BLR:"BY",BEL:"BE",BLZ:"BZ",BEN:"BJ",BMU:"BM",BTN:"BT",BOL:"BO",BES:"BQ",BIH:"BA",BWA:"BW",BVT:"BV",BRA:"BR",IOT:"IO",BRN:"BN",BGR:"BG",BFA:"BF",BDI:"BI",CPV:"CV",KHM:"KH",CMR:"CM",CAN:"CA",CYM:"KY",CAF:"CF",TCD:"TD",CHL:"CL",CHN:"CN",CXR:"CX",CCK:"CC",COL:"CO",COM:"KM",COG:"CG",COD:"CD",COK:"CK",CRI:"CR",CIV:"CI",HRV:"HR",CUB:"CU",CUW:"CW",CYP:"CY",CZE:"CZ",DNK:"DK",DJI:"DJ",DMA:"DM",DOM:"DO",ECU:"EC",EGY:"EG",SLV:"SV",GNQ:"GQ",ERI:"ER",EST:"EE",ETH:"ET",FLK:"FK",FRO:"FO",FJI:"FJ",FIN:"FI",FRA:"FR",GUF:"GF",PYF:"PF",ATF:"TF",GAB:"GA",GMB:"GM",GEO:"GE",DEU:"DE",GHA:"GH",GIB:"GI",GRC:"GR",GRL:"GL",GRD:"GD",GLP:"GP",GUM:"GU",GTM:"GT",GGY:"GG",GIN:"GN",GNB:"GW",GUY:"GY",HTI:"HT",HMD:"HM",VAT:"VA",HND:"HN",HKG:"HK",HUN:"HU",ISL:"IS",IND:"IN",IDN:"ID",IRN:"IR",IRQ:"IQ",IRL:"IE",IMN:"IM",ISR:"IL",ITA:"IT",JAM:"JM",JPN:"JP",JEY:"JE",JOR:"JO",KAZ:"KZ",KEN:"KE",KIR:"KI",PRK:"KP",KOR:"KR",KWT:"KW",KGZ:"KG",LAO:"LA",LVA:"LV",LBN:"LB",LSO:"LS",LBR:"LR",LBY:"LY",LIE:"LI",LTU:"LT",LUX:"LU",MAC:"MO",MKD:"MK",MDG:"MG",MWI:"MW",MYS:"MY",MDV:"MV",MLI:"ML",MLT:"MT",MHL:"MH",MTQ:"MQ",MRT:"MR",MUS:"MU",MYT:"YT",MEX:"MX",FSM:"FM",MDA:"MD",MCO:"MC",MNG:"MN",MNE:"ME",MSR:"MS",MAR:"MA",MOZ:"MZ",MMR:"MM",NAM:"NA",NRU:"NR",NPL:"NP",NLD:"NL",NCL:"NC",NZL:"NZ",NIC:"NI",NER:"NE",NGA:"NG",NIU:"NU",NFK:"NF",MNP:"MP",NOR:"NO",OMN:"OM",PAK:"PK",PLW:"PW",PSE:"PS",PAN:"PA",PNG:"PG",PRY:"PY",PER:"PE",PHL:"PH",PCN:"PN",POL:"PL",PRT:"PT",PRI:"PR",QAT:"QA",REU:"RE",ROU:"RO",RUS:"RU",RWA:"RW",BLM:"BL",SHN:"SH",KNA:"KN",LCA:"LC",MAF:"MF",SPM:"PM",VCT:"VC",WSM:"WS",SMR:"SM",STP:"ST",SAU:"SA",SEN:"SN",SRB:"RS",SYC:"SC",SLE:"SL",SGP:"SG",SXM:"SX",SVK:"SK",SVN:"SI",SLB:"SB",SOM:"SO",ZAF:"ZA",SGS:"GS",SSD:"SS",ESP:"ES",LKA:"LK",SDN:"SD",SUR:"SR",SJM:"SJ",SWZ:"SZ",SWE:"SE",CHE:"CH",SYR:"SY",TWN:"TW",TJK:"TJ",TZA:"TZ",THA:"TH",TLS:"TL",TGO:"TG",TKL:"TK",TON:"TO",TTO:"TT",TUN:"TN",TUR:"TR",TKM:"TM",TCA:"TC",TUV:"TV",UGA:"UG",UKR:"UA",ARE:"AE",GBR:"GB",USA:"US",UMI:"UM",URY:"UY",UZB:"UZ",VUT:"VU",VEN:"VE",VNM:"VN",VGB:"VG",VIR:"VI",WLF:"WF",ESH:"EH",YEM:"YE",ZMB:"ZM",ZWE:"ZW"},countryNameIso2={Afghanistan:"AF","Aland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua And Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO","Bosnia And Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Congo, Democratic Republic":"CD","Cook Islands":"CK","Costa Rica":"CR","Cote D'Ivoire":"CI",Croatia:"HR",Cuba:"CU",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island & Mcdonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID","Iran, Islamic Republic Of":"IR",Iraq:"IQ",Ireland:"IE","Isle Of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI",Korea:"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR","Libyan Arab Jamahiriya":"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX","Micronesia, Federated States Of":"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","Netherlands Antilles":"AN","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory, Occupied":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA",Reunion:"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthelemy":"BL","Saint Helena":"SH","Saint Kitts And Nevis":"KN","Saint Lucia":"LC","Saint Martin":"MF","Saint Pierre And Miquelon":"PM","Saint Vincent And Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome And Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia And Sandwich Isl.":"GS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard And Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad And Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks And Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE",Vietnam:"VN","Virgin Islands, British":"VG","Virgin Islands, U.S.":"VI","Wallis And Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},iso2CountryName={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},USState2iso={Alabama:"AL",Alaska:"AK","American Samoa":"AS",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE","District Of Columbia":"DC","Federated States Of Micronesia":"FM",Florida:"FL",Georgia:"GA",Guam:"GU",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansas:"KS",Kentucky:"KY",Louisiana:"LA",Maine:"ME","Marshall Islands":"MH",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV","New Hampshire":"NH","New Jersey":"NJ","New Mexico":"NM","New York":"NY","North Carolina":"NC","North Dakota":"ND","Northern Mariana Islands":"MP",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Palau:"PW",Pennsylvania:"PA","Puerto Rico":"PR","Rhode Island":"RI","South Carolina":"SC","South Dakota":"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT","Virgin Islands":"VI",Virginia:"VA",Washington:"WA","West Virginia":"WV",Wisconsin:"WI",Wyoming:"WY"},countryResponseObjects=[],countryResponseUpdatedObjects={},countryTimeLineGraphs={},countryDataFrames=50,countryGraphsMax=10,countryResponseGraphWidth=100,countryResponseGraphHeight=60,countryResponseGraphRadius=Math.min(countryResponseGraphWidth,countryResponseGraphHeight)/2,countryResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),countryResponseGraphArc=d3.svg.arc().outerRadius(.7*countryResponseGraphRadius).innerRadius(.65*countryResponseGraphRadius),countryResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*countryResponseGraphRadius).innerRadius(.4*countryResponseGraphRadius),countryResponseGraphArcInner=d3.svg.arc().outerRadius(.35*countryResponseGraphRadius).innerRadius(.3*countryResponseGraphRadius),countryResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),countryResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),countryResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),valueMobile=0,valueTablet=0,valueMonitor=0,deviceCircleGraphWidth=150,deviceCircleGraphHeight=75,deviceCircleGraphRadius=Math.min(deviceCircleGraphWidth,deviceCircleGraphHeight)/1.5,deviceCircleGraphMobile=d3.select("#deviceCircleGraphMobile").append("svg").append("g"),deviceCircleGraphTablet=d3.select("#deviceCircleGraphTablet").append("svg").append("g"),deviceCircleGraphMonitor=d3.select("#deviceCircleGraphMonitor").append("svg").append("g");deviceCircleGraphMobile.append("g").attr("class","slices"),deviceCircleGraphTablet.append("g").attr("class","slices"),deviceCircleGraphMonitor.append("g").attr("class","slices");var pie=d3.layout.pie().sort(null).value(function(e){return e.value}),key=function(e){return e.data.label},arcDevice=d3.svg.arc().outerRadius(.8*deviceCircleGraphRadius).innerRadius(.78*deviceCircleGraphRadius),outerArcDevice=d3.svg.arc().innerRadius(.9*deviceCircleGraphRadius).outerRadius(.9*deviceCircleGraphRadius);deviceCircleGraphMobile.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphTablet.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphMonitor.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)");var deviceCircleGraphColorMobile=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorTablet=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorMonitor=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),Shaders={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 1 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = 0;","gl_Position = 0;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = 0;","gl_FragColor = 0;","}"].join("\n")}},ShadersOverlay={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 0.5 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.6 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.1 - dot( vNormal, vec3( 0, 2.1, 0.0 ) ), 8.0 );","gl_FragColor = vec4( 0, 0.5, 1, 0.8 ) * intensity;","}"].join("\n")}},Globe=function(){function e(e,n,t,a){var i=(90-e)*Math.PI/180,o=(180-n)*Math.PI/180;N.aws.regions[a].pivot.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var r=new THREE.PlaneGeometry(0,0,1);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var s=new THREE.Mesh(r,t);s.position.x=L*Math.sin(i)*Math.cos(o),s.position.y=L*Math.cos(i),s.position.z=L*Math.sin(i)*Math.sin(o),s.scale.z=Math.max(1,.1),s.lookAt(C.position),s.name=a,s.type="region",M.add(s),s.add(N.aws.regions[a].pivot);var l=new THREE.Object3D;l.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,E/2)),N.aws.regions[a].pivot.add(l),r=new THREE.ConeGeometry(3,E,4,1,!0,Math.PI/4,2*Math.PI);var c=new THREE.MeshBasicMaterial({map:K,transparent:!0,depthWrite:!1,depthTest:!1,opacity:.3}),d=new THREE.Mesh(r,c);d.name=a+"Cone",M.add(d),l.add(d),l.rotation.x+=H,(r=new THREE.PlaneGeometry(1,1,1)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E-2));var u=new THREE.Mesh(r,t);s.add(u)}function n(e){var n=[];for(var a in inventory)for(var i in inventory[a])inventory[a][i].Region==e&&n.push(inventory[a][i]);var o,r,s,l=Math.ceil(Math.sqrt(n.length)),c=Math.round(Math.sqrt(n.length)),d=M.getObjectByName(e),u=4*l,p=4*c,m=0,h=0,g=0,y=0,f=!1,v=0,T=0;for(o=0;o<n.length;o++){for(s=!1,v=1==c?4*m-(4*c-4):4*m-(4*c-4)/2,T=1==l?4*g-(4*l-4):4*g-(4*l-4)/2,r=0;r<d.children[0].children.length;r++)if(d.children[0].children[r].name==n[o].id){d.children[0].children[r].position.x=v,d.children[0].children[r].position.y=T,s=!0;break}s||t(n[o],v,T),m>h&&(h=m),g>y&&(y=g),g>m?f?g==m+1?(f=!1,m++,g=0):m++:(m++,g=0):g<m?g++:g==m&&(f||(g++,m=0,f=!0))}p<4&&(p=4),u<4&&(u=4),d.children[1].scale.set(p+2,u+2,1)}function t(e,n,t){var a,i,o=new THREE.MeshLambertMaterial({map:y(e),transparent:!0,side:THREE.DoubleSide,opacity:.9});if("elb"==e.type){a=1,i=new THREE.Geometry,o.wireframe=!0;var r=new THREE.OctahedronGeometry(1.4,2);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-2.5));var s=new THREE.Mesh(r,o),l={left:0,center:0,right:0},c={left:0,center:0,right:0};c.center=-1.4,c.left=c.center,c.right=c.center,l.left=.8,l.right=-.8;var d=new THREE.BoxGeometry(.1,.6,.5);d.applyMatrix((new THREE.Matrix4).makeTranslation(l.center,c.center,-2.5));var u=new THREE.Mesh(d,o),p=new THREE.BoxGeometry(.1,.6,.5);p.applyMatrix((new THREE.Matrix4).makeTranslation(l.left,c.left,-2.5));var m=new THREE.Mesh(p,o),h=new THREE.BoxGeometry(.1,.6,.5);h.applyMatrix((new THREE.Matrix4).makeTranslation(l.right,c.right,-2.5));var g=new THREE.Mesh(h,o),f=new THREE.BoxGeometry(.1,.6,.5);f.applyMatrix((new THREE.Matrix4).makeTranslation(-l.center,-c.center,-2.5));var v=new THREE.Mesh(f,o);i.merge(s.geometry,s.matrix),i.merge(u.geometry,u.matrix),i.merge(m.geometry,m.matrix),i.merge(g.geometry,g.matrix),i.merge(v.geometry,v.matrix)}else"apigateway"==e.type&&(a=3,(i=new THREE.TorusGeometry(1.5,.2,10,28)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5)),o.wireframe=!0);var T=new THREE.Mesh(i,o);T.scale.z=Math.max(a,.1),T.lookAt(C.position),T.name=e.id,T.type=e.type,T.position.x=n,T.position.y=t,T.position.z=0,M.add(T),void 0!=e.Region&&N.aws.regions[e.Region].pivot.add(T),inventory[e.type][e.id].mesh=T,M.updateMatrixWorld(!0)}function a(e){var n=document.createElement("canvas");return n.width=256,n.height=256,n.getContext("2d").fillStyle=e,n.getContext("2d").fillRect(0,0,256,256),new THREE.CanvasTexture(n)}function i(){new Audio("sounds/Tick-DeepFrozenApps-397275646.mp3").play(),document.getElementById("enhanceFrame").style.display="block",setTimeout(function(){document.getElementById("enhanceFrame").style.display="none",h((D-210)/1.5)},100)}function o(e){e.preventDefault(),A=!0,G.addEventListener("mousemove",r,!1),G.addEventListener("mouseup",s,!1),G.addEventListener("mouseout",l,!1),x.x=-e.clientX,x.y=e.clientY,B.x=P.x,B.y=P.y}function r(e){I.x=e.clientX/window.innerWidth*2-1,I.y=-e.clientY/window.innerHeight*2+1,A&&(S=O/1e3,P.x=B.x+.005*(-e.clientX-x.x)*S,P.y=B.y+.005*(e.clientY-x.y)*S,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y)}function s(e){A=!1,G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function l(e){G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function c(e){return e.preventDefault(),R&&h(.3*e.wheelDeltaY),!1}function d(e){switch(e.keyCode){case 13:"password"==document.activeElement.id&&loginAndLoadInventory(),e.preventDefault();break;case 16:holdingShift=!0,e.preventDefault();break;case 17:toggleRotate(),e.preventDefault();break;case 18:holdingAlt=!0,e.preventDefault();break;case 37:holdingAlt?P.x-=3:P.x-=.1,e.preventDefault();break;case 38:holdingShift?(P.y+=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(20),e.preventDefault();break;case 39:holdingAlt?P.x+=3:P.x+=.1,e.preventDefault();break;case 40:holdingShift?(P.y-=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(-20),e.preventDefault();break;default:new Audio("sounds/Pen_Clicks-Simon_Craggs-514025171.mp3").play()}}function u(e){void 0==e?e=20:e--,0!=e?setTimeout(function(){P.x+=e/3,u(e)},10):startRotation()}function p(e){switch(e.keyCode){case 16:holdingShift=!1,e.preventDefault();break;case 18:holdingAlt=!1,e.preventDefault()}}function m(e){v.aspect=window.innerWidth/window.innerHeight,v.updateProjectionMatrix(),T.setSize(window.innerWidth,window.innerHeight)}function h(e){e>0?(slidePanes("out"),stopRotation()):slidePanes("in"),D=(D=(D-=e)>1e3?1e3:D)<210?210:D}function g(){w.x+=.1*(P.x-w.x),w.y+=.1*(P.y-w.y),O+=.3*(D-O),v.position.x=O*Math.sin(w.x)*Math.cos(w.y),v.position.y=O*Math.sin(w.y),v.position.z=O*Math.cos(w.x)*Math.cos(w.y),v.lookAt(C.position),rotate&&(P.x-=.001),T.render(M,v),frames++}function y(e){return"fail"==e.health?W:"running"==e.status?void 0!=e.cpu&&void 0!=e.cpu.Average?e.cpu.Average>=0&&e.cpu.Average<75?F:e.cpu.Average>=75&&e.cpu.Average<90?j:V:F:"pending"==e.status||"rebooting"==e.status||"creating"==e.status?K:"stopped"==e.status?Q:"stopping"==e.status||"shutting-down"==e.status?Z:void 0}function f(e,n,t){var a=!0;D=1e3,Math.abs(v.position.x-e)>500||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.03,a=!1):Math.abs(v.position.x-e)>400||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.01,a=!1):(Math.abs(v.position.x-e)>100||t>0&&v.position.z<0||t<0&&v.position.z>0)&&(P.x-=.001,a=!1),Math.abs(v.position.y-n)>100&&(v.position.y<n?P.y+=.01:P.y-=.01,a=!1),a?stopRotation():setTimeout(function(){f(e,n,t)},10)}var v,M,T,C,R,S,G=document.getElementById("container"),b="images/",L=200,A=!1,E=15,I=(new THREE.Raycaster,new THREE.Vector2),x={x:0,y:0},w={x:0,y:0},P={x:3*Math.PI/2.5,y:Math.PI/7},B={x:0,y:0},O=1e5,D=1e3,H=Math.PI/2,N={},k=document.createElement("canvas");k.width=256,k.height=256;var U=k.getContext("2d").createLinearGradient(256,0,256,256);U.addColorStop(0,"#0080ff"),U.addColorStop(.2,"#0065ff"),U.addColorStop(.5,"#0055ff"),U.addColorStop(.8,"#0065ff"),U.addColorStop(1,"#0080ff"),k.getContext("2d").fillStyle=U,k.getContext("2d").fillRect(0,0,256,256);var F=new THREE.CanvasTexture(k),W=(a("rgb(256,256,256)"),a("rgb(256,0,0)")),j=a("rgb(256,256,0)"),V=a("rgb(179, 71, 0)"),K=a("rgb(256,256,256)"),Q=a("rgb(50,50,50)"),Z=Q,J=a("rgb(0, 173, 239)"),z=null,Y=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.3}),_=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.4}),q=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.45}),X=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.5}),$=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.55}),ee=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.6}),ne=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.65}),te=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.7}),ae=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.75}),ie=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.8}),oe=new THREE.CircleGeometry(.5,20),re=new THREE.Mesh(oe,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));return re.scale.set(1.1,1.1,1.1),new THREE.Object3D,function(){var n,t,a;(v=new THREE.PerspectiveCamera(20,window.innerWidth/window.innerHeight,1,1e4)).position.z=O,M=new THREE.Scene;var r=new THREE.PointLight(16777215,.25,1e6);r.position.set(0,1e4,0),M.add(r);var s=new THREE.PointLight(16777215,.25,1e6);s.position.set(0,-1e4,0),M.add(s);var l=new THREE.PointLight(16777215,2,1e6);l.position.set(1e4,0,0),M.add(l);var u=new THREE.PointLight(16777215,2,1e6);u.position.set(-1e4,0,0),M.add(u);var h=new THREE.PointLight(16777215,2,1e6);h.position.set(0,0,1e4),M.add(h);var g=new THREE.PointLight(16777215,2,1e6);g.position.set(0,0,-1e4),M.add(g),M.add(re);var y=new THREE.SphereGeometry(L,100,100);n=Shaders.earth,(t=THREE.UniformsUtils.clone(n.uniforms)).texture.value=THREE.ImageUtils.loadTexture(b+"earth_large-8192x4096.jpg"),a=new THREE.ShaderMaterial({uniforms:t,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,transparent:!0,wireframe:!1,depthWrite:!1,depthTest:!1,opacity:.9}),(C=new THREE.Mesh(y,a)).rotation.y=Math.PI,C.name="globe",M.add(C),a=new THREE.MeshBasicMaterial({map:J,transparent:!0,wireframe:!0,depthWrite:!1,depthTest:!1,opacity:.02});var f=new THREE.SphereGeometry(L-1,100,100),S=new THREE.Mesh(f,a);S.name="meshGlobeUnderlay",M.add(S);var A=ShadersOverlay.earth,E=THREE.UniformsUtils.clone(A.uniforms);E.texture.value=THREE.ImageUtils.loadTexture(b+"stars.jpg"),z=new THREE.ShaderMaterial({uniforms:E,vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,transparent:!0,wireframe:!1,side:THREE.BackSide,opacity:.2});var I=new THREE.SphereGeometry(L+400,20,20),x=new THREE.Mesh(I,z);x.rotation.y=Math.PI,x.name="globeOverlay",M.add(x);var w=new THREE.MeshBasicMaterial({map:K,transparent:!0,side:THREE.DoubleSide,depthWrite:!1,depthTest:!1,opacity:.2});N.aws={},N.aws.regions={},N.aws.regions["us-east-1"]={lat:37,lon:-77,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-east-2"]={lat:40,lon:-83,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-1"]={lat:44,lon:-120,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-2"]={lat:39,lon:-122,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ca-central-1"]={lat:46,lon:-75,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-1"]={lat:53,lon:-8,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-2"]={lat:51.5,lon:0,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-central-1"]={lat:50,lon:8.5,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-1"]={lat:35.7,lon:139.7,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-2"]={lat:37.5,lon:127,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-1"]={lat:1.3,lon:104,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-2"]={lat:-33.8,lon:150,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-south-1"]={lat:19,lon:73,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["sa-east-1"]={lat:-23.5,lon:-46.5,pivot:new THREE.Object3D,point:new THREE.Geometry};for(var P in N)for(var B in N[P].regions)e(N[P].regions[B].lat,N[P].regions[B].lon,w,B);(T=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),T.domElement.style.position="absolute",G.appendChild(T.domElement),G.addEventListener("mousedown",o,!1),G.addEventListener("dblclick",i,!1),G.addEventListener("mousewheel",c,!1),document.addEventListener("keydown",d,!1),document.addEventListener("keyup",p,!1),window.addEventListener("resize",m,!1),G.addEventListener("mouseover",function(){G.style.cursor="all-scroll",R=!0},!1),G.addEventListener("mouseout",function(){R=!1},!1)}(),setInterval(function(){requestAnimationFrame(g)},1e3/60),window.addEventListener("mousemove",r,!1),window.requestAnimationFrame(g),this.load=function(e,t){if(t.length>0){window.data=t;for(var a=[],i=0;i<t.length;i++)if("billing"==e){var o=new Date,r=month[o.getMonth()];document.getElementById("billingTotal").innerHTML="$"+t[i]+" ("+r+")"}else if("traffic"==e)for(var s=0;s<t[i].connections.length;s++)addTrafficEvent(t[i].id,t[i].connections[s]);else{if("apigateway"==t[i].type)t[i]=translateApiGateway(t[i]);else{if("elb"!=t[i].type)continue;t[i]=translateElb(t[i])}if("terminated"==t[i].status)void 0!=inventory[t[i].type]&&void 0!=inventory[t[i].type][t[i].id]&&delete inventory[t[i].type][t[i].id];else{void 0==inventory[t[i].type]&&(inventory[t[i].type]={}),void 0==inventory[t[i].type][t[i].id]&&(inventory[t[i].type][t[i].id]={},inventory[t[i].type][t[i].id]=t[i],a.push(t[i]));for(var l=0;l<inventoryFields.length;l++)t[i][inventoryFields[l]]instanceof Array?void 0!=t[i][inventoryFields[l]]&&JSON.stringify(t[i][inventoryFields[l]])!=JSON.stringify(inventory[t[i].type][t[i].id][inventoryFields[l]])&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]]):void 0!=t[i][inventoryFields[l]]&&t[i][inventoryFields[l]]!=inventory[t[i].type][t[i].id][inventoryFields[l]]&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]],inventory[t[i].type][t[i].id].mesh.material.map=y(t[i]))}}if(a.length>0)for(var c in N.aws.regions)n(c),firstInventorySetLoaded||(getInitialTimeLineData(),firstInventorySetLoaded=!0);document.body.style.backgroundImage="none"}},this.elementShadowIntensity=2,this.scene=M,this.setCameraPosition=f,this.clouds=N,this.globeRadius=L,this.regionOffset=E,this.updateHeatMap=function(){void 0!=M.getObjectByName("heatMapMesh")&&M.remove(M.getObjectByName("heatMapMesh"));var e=null,n=null,t=new THREE.Geometry,a=new THREE.Mesh(oe),i=0,o=0;for(var r in heatMapHistory){(o=heatMapHistory[r].count-heatMapAverage)<1&&(o=1),i=Math.floor(scaleBetween(o,1,99,1,heatMapHigh))/100,e=(90-heatMapHistory[r].lat)*Math.PI/180,n=(180-heatMapHistory[r].lon)*Math.PI/180,a.position.x=L*Math.sin(e)*Math.cos(n),a.position.y=L*Math.cos(e),a.position.z=L*Math.sin(e)*Math.sin(n),a.lookAt(C.position),a.updateMatrix();for(var s=0;s<a.geometry.faces.length;s++)a.geometry.faces[s].materialIndex=Math.floor(10*i);t.merge(a.geometry,a.matrix)}var l=new THREE.Mesh(t,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));l.name="heatMapMesh",M.add(l)},this.globeMesh=C,this.runLoginAnimation=function(){M.getObjectByName("globe").material.depthWrite=!0,M.getObjectByName("globe").material.depthTest=!0,M.getObjectByName("globeOverlay").visible=!1},this.showTraffic=showTraffic,this.timeWarpSpinMove=u,this.enhance=i,this.zoomReset=function(){setTimeout(function(){D=1e3},100)},this},iso2iso3={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",CV:"CPV",KH:"KHM",CM:"CMR",CA:"CAN",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"},iso3iso2={AFG:"AF",ALA:"AX",ALB:"AL",DZA:"DZ",ASM:"AS",AND:"AD",AGO:"AO",AIA:"AI",ATA:"AQ",ATG:"AG",ARG:"AR",ARM:"AM",ABW:"AW",AUS:"AU",AUT:"AT",AZE:"AZ",BHS:"BS",BHR:"BH",BGD:"BD",BRB:"BB",BLR:"BY",BEL:"BE",BLZ:"BZ",BEN:"BJ",BMU:"BM",BTN:"BT",BOL:"BO",BES:"BQ",BIH:"BA",BWA:"BW",BVT:"BV",BRA:"BR",IOT:"IO",BRN:"BN",BGR:"BG",BFA:"BF",BDI:"BI",CPV:"CV",KHM:"KH",CMR:"CM",CAN:"CA",CYM:"KY",CAF:"CF",TCD:"TD",CHL:"CL",CHN:"CN",CXR:"CX",CCK:"CC",COL:"CO",COM:"KM",COG:"CG",COD:"CD",COK:"CK",CRI:"CR",CIV:"CI",HRV:"HR",CUB:"CU",CUW:"CW",CYP:"CY",CZE:"CZ",DNK:"DK",DJI:"DJ",DMA:"DM",DOM:"DO",ECU:"EC",EGY:"EG",SLV:"SV",GNQ:"GQ",ERI:"ER",EST:"EE",ETH:"ET",FLK:"FK",FRO:"FO",FJI:"FJ",FIN:"FI",FRA:"FR",GUF:"GF",PYF:"PF",ATF:"TF",GAB:"GA",GMB:"GM",GEO:"GE",DEU:"DE",GHA:"GH",GIB:"GI",GRC:"GR",GRL:"GL",GRD:"GD",GLP:"GP",GUM:"GU",GTM:"GT",GGY:"GG",GIN:"GN",GNB:"GW",GUY:"GY",HTI:"HT",HMD:"HM",VAT:"VA",HND:"HN",HKG:"HK",HUN:"HU",ISL:"IS",IND:"IN",IDN:"ID",IRN:"IR",IRQ:"IQ",IRL:"IE",IMN:"IM",ISR:"IL",ITA:"IT",JAM:"JM",JPN:"JP",JEY:"JE",JOR:"JO",KAZ:"KZ",KEN:"KE",KIR:"KI",PRK:"KP",KOR:"KR",KWT:"KW",KGZ:"KG",LAO:"LA",LVA:"LV",LBN:"LB",LSO:"LS",LBR:"LR",LBY:"LY",LIE:"LI",LTU:"LT",LUX:"LU",MAC:"MO",MKD:"MK",MDG:"MG",MWI:"MW",MYS:"MY",MDV:"MV",MLI:"ML",MLT:"MT",MHL:"MH",MTQ:"MQ",MRT:"MR",MUS:"MU",MYT:"YT",MEX:"MX",FSM:"FM",MDA:"MD",MCO:"MC",MNG:"MN",MNE:"ME",MSR:"MS",MAR:"MA",MOZ:"MZ",MMR:"MM",NAM:"NA",NRU:"NR",NPL:"NP",NLD:"NL",NCL:"NC",NZL:"NZ",NIC:"NI",NER:"NE",NGA:"NG",NIU:"NU",NFK:"NF",MNP:"MP",NOR:"NO",OMN:"OM",PAK:"PK",PLW:"PW",PSE:"PS",PAN:"PA",PNG:"PG",PRY:"PY",PER:"PE",PHL:"PH",PCN:"PN",POL:"PL",PRT:"PT",PRI:"PR",QAT:"QA",REU:"RE",ROU:"RO",RUS:"RU",RWA:"RW",BLM:"BL",SHN:"SH",KNA:"KN",LCA:"LC",MAF:"MF",SPM:"PM",VCT:"VC",WSM:"WS",SMR:"SM",STP:"ST",SAU:"SA",SEN:"SN",SRB:"RS",SYC:"SC",SLE:"SL",SGP:"SG",SXM:"SX",SVK:"SK",SVN:"SI",SLB:"SB",SOM:"SO",ZAF:"ZA",SGS:"GS",SSD:"SS",ESP:"ES",LKA:"LK",SDN:"SD",SUR:"SR",SJM:"SJ",SWZ:"SZ",SWE:"SE",CHE:"CH",SYR:"SY",TWN:"TW",TJK:"TJ",TZA:"TZ",THA:"TH",TLS:"TL",TGO:"TG",TKL:"TK",TON:"TO",TTO:"TT",TUN:"TN",TUR:"TR",TKM:"TM",TCA:"TC",TUV:"TV",UGA:"UG",UKR:"UA",ARE:"AE",GBR:"GB",USA:"US",UMI:"UM",URY:"UY",UZB:"UZ",VUT:"VU",VEN:"VE",VNM:"VN",VGB:"VG",VIR:"VI",WLF:"WF",ESH:"EH",YEM:"YE",ZMB:"ZM",ZWE:"ZW"},countryNameIso2={Afghanistan:"AF","Aland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua And Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO","Bosnia And Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Congo, Democratic Republic":"CD","Cook Islands":"CK","Costa Rica":"CR","Cote D'Ivoire":"CI",Croatia:"HR",Cuba:"CU",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island & Mcdonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID","Iran, Islamic Republic Of":"IR",Iraq:"IQ",Ireland:"IE","Isle Of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI",Korea:"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR","Libyan Arab Jamahiriya":"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX","Micronesia, Federated States Of":"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","Netherlands Antilles":"AN","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory, Occupied":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA",Reunion:"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthelemy":"BL","Saint Helena":"SH","Saint Kitts And Nevis":"KN","Saint Lucia":"LC","Saint Martin":"MF","Saint Pierre And Miquelon":"PM","Saint Vincent And Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome And Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia And Sandwich Isl.":"GS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard And Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad And Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks And Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE",Vietnam:"VN","Virgin Islands, British":"VG","Virgin Islands, U.S.":"VI","Wallis And Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},iso2CountryName={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},USState2iso={Alabama:"AL",Alaska:"AK","American Samoa":"AS",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE","District Of Columbia":"DC","Federated States Of Micronesia":"FM",Florida:"FL",Georgia:"GA",Guam:"GU",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansas:"KS",Kentucky:"KY",Louisiana:"LA",Maine:"ME","Marshall Islands":"MH",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV","New Hampshire":"NH","New Jersey":"NJ","New Mexico":"NM","New York":"NY","North Carolina":"NC","North Dakota":"ND","Northern Mariana Islands":"MP",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Palau:"PW",Pennsylvania:"PA","Puerto Rico":"PR","Rhode Island":"RI","South Carolina":"SC","South Dakota":"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT","Virgin Islands":"VI",Virginia:"VA",Washington:"WA","West Virginia":"WV",Wisconsin:"WI",Wyoming:"WY"},countryResponseObjects=[],countryResponseUpdatedObjects={},countryTimeLineGraphs={},countryDataFrames=50,countryGraphsMax=10,countryResponseGraphWidth=100,countryResponseGraphHeight=60,countryResponseGraphRadius=Math.min(countryResponseGraphWidth,countryResponseGraphHeight)/2,countryResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),countryResponseGraphArc=d3.svg.arc().outerRadius(.7*countryResponseGraphRadius).innerRadius(.65*countryResponseGraphRadius),countryResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*countryResponseGraphRadius).innerRadius(.4*countryResponseGraphRadius),countryResponseGraphArcInner=d3.svg.arc().outerRadius(.35*countryResponseGraphRadius).innerRadius(.3*countryResponseGraphRadius),countryResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),countryResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),countryResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),valueMobile=0,valueTablet=0,valueMonitor=0,deviceCircleGraphWidth=150,deviceCircleGraphHeight=75,deviceCircleGraphRadius=Math.min(deviceCircleGraphWidth,deviceCircleGraphHeight)/1.5,deviceCircleGraphMobile=d3.select("#deviceCircleGraphMobile").append("svg").append("g"),deviceCircleGraphTablet=d3.select("#deviceCircleGraphTablet").append("svg").append("g"),deviceCircleGraphMonitor=d3.select("#deviceCircleGraphMonitor").append("svg").append("g");deviceCircleGraphMobile.append("g").attr("class","slices"),deviceCircleGraphTablet.append("g").attr("class","slices"),deviceCircleGraphMonitor.append("g").attr("class","slices");var pie=d3.layout.pie().sort(null).value(function(e){return e.value}),key=function(e){return e.data.label},arcDevice=d3.svg.arc().outerRadius(.8*deviceCircleGraphRadius).innerRadius(.78*deviceCircleGraphRadius),outerArcDevice=d3.svg.arc().innerRadius(.9*deviceCircleGraphRadius).outerRadius(.9*deviceCircleGraphRadius);deviceCircleGraphMobile.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphTablet.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphMonitor.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)");var deviceCircleGraphColorMobile=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorTablet=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorMonitor=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),Shaders={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 1 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = 0;","gl_Position = 0;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = 0;","gl_FragColor = 0;","}"].join("\n")}},ShadersOverlay={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 0.5 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.6 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.1 - dot( vNormal, vec3( 0, 2.1, 0.0 ) ), 8.0 );","gl_FragColor = vec4( 0, 0.5, 1, 0.8 ) * intensity;","}"].join("\n")}},Globe=function(){function e(e,n,t,a){var i=(90-e)*Math.PI/180,o=(180-n)*Math.PI/180;N.aws.regions[a].pivot.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var r=new THREE.PlaneGeometry(0,0,1);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var s=new THREE.Mesh(r,t);s.position.x=L*Math.sin(i)*Math.cos(o),s.position.y=L*Math.cos(i),s.position.z=L*Math.sin(i)*Math.sin(o),s.scale.z=Math.max(1,.1),s.lookAt(C.position),s.name=a,s.type="region",M.add(s),s.add(N.aws.regions[a].pivot);var l=new THREE.Object3D;l.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,E/2)),N.aws.regions[a].pivot.add(l),r=new THREE.ConeGeometry(3,E,4,1,!0,Math.PI/4,2*Math.PI);var c=new THREE.MeshBasicMaterial({map:K,transparent:!0,depthWrite:!1,depthTest:!1,opacity:.3}),d=new THREE.Mesh(r,c);d.name=a+"Cone",M.add(d),l.add(d),l.rotation.x+=H,(r=new THREE.PlaneGeometry(1,1,1)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E-2));var u=new THREE.Mesh(r,t);s.add(u)}function n(e){var n=[];for(var a in inventory)for(var i in inventory[a])inventory[a][i].Region==e&&n.push(inventory[a][i]);var o,r,s,l=Math.ceil(Math.sqrt(n.length)),c=Math.round(Math.sqrt(n.length)),d=M.getObjectByName(e),u=4*l,p=4*c,m=0,h=0,g=0,y=0,f=!1,v=0,T=0;for(o=0;o<n.length;o++){for(s=!1,v=1==c?4*m-(4*c-4):4*m-(4*c-4)/2,T=1==l?4*g-(4*l-4):4*g-(4*l-4)/2,r=0;r<d.children[0].children.length;r++)if(d.children[0].children[r].name==n[o].id){d.children[0].children[r].position.x=v,d.children[0].children[r].position.y=T,s=!0;break}s||t(n[o],v,T),m>h&&(h=m),g>y&&(y=g),g>m?f?g==m+1?(f=!1,m++,g=0):m++:(m++,g=0):g<m?g++:g==m&&(f||(g++,m=0,f=!0))}p<4&&(p=4),u<4&&(u=4),d.children[1].scale.set(p+2,u+2,1)}function t(e,n,t){var a,i,o=new THREE.MeshLambertMaterial({map:y(e),transparent:!0,side:THREE.DoubleSide,opacity:.9});if("elb"==e.type){a=1,i=new THREE.Geometry,o.wireframe=!0;var r=new THREE.OctahedronGeometry(1.4,2);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-2.5));var s=new THREE.Mesh(r,o),l={left:0,center:0,right:0},c={left:0,center:0,right:0};c.center=-1.4,c.left=c.center,c.right=c.center,l.left=.8,l.right=-.8;var d=new THREE.BoxGeometry(.1,.6,.5);d.applyMatrix((new THREE.Matrix4).makeTranslation(l.center,c.center,-2.5));var u=new THREE.Mesh(d,o),p=new THREE.BoxGeometry(.1,.6,.5);p.applyMatrix((new THREE.Matrix4).makeTranslation(l.left,c.left,-2.5));var m=new THREE.Mesh(p,o),h=new THREE.BoxGeometry(.1,.6,.5);h.applyMatrix((new THREE.Matrix4).makeTranslation(l.right,c.right,-2.5));var g=new THREE.Mesh(h,o),f=new THREE.BoxGeometry(.1,.6,.5);f.applyMatrix((new THREE.Matrix4).makeTranslation(-l.center,-c.center,-2.5));var v=new THREE.Mesh(f,o);i.merge(s.geometry,s.matrix),i.merge(u.geometry,u.matrix),i.merge(m.geometry,m.matrix),i.merge(g.geometry,g.matrix),i.merge(v.geometry,v.matrix)}else"apigateway"==e.type&&(a=3,(i=new THREE.TorusGeometry(1.5,.2,10,28)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5)),o.wireframe=!0);var T=new THREE.Mesh(i,o);T.scale.z=Math.max(a,.1),T.lookAt(C.position),T.name=e.id,T.type=e.type,T.position.x=n,T.position.y=t,T.position.z=0,M.add(T),void 0!=e.Region&&N.aws.regions[e.Region].pivot.add(T),inventory[e.type][e.id].mesh=T,M.updateMatrixWorld(!0)}function a(e){var n=document.createElement("canvas");return n.width=256,n.height=256,n.getContext("2d").fillStyle=e,n.getContext("2d").fillRect(0,0,256,256),new THREE.CanvasTexture(n)}function i(){new Audio("sounds/Tick-DeepFrozenApps-397275646.mp3").play(),document.getElementById("enhanceFrame").style.display="block",setTimeout(function(){document.getElementById("enhanceFrame").style.display="none",h((D-210)/1.5)},100)}function o(e){e.preventDefault(),A=!0,G.addEventListener("mousemove",r,!1),G.addEventListener("mouseup",s,!1),G.addEventListener("mouseout",l,!1),x.x=-e.clientX,x.y=e.clientY,B.x=P.x,B.y=P.y}function r(e){I.x=e.clientX/window.innerWidth*2-1,I.y=-e.clientY/window.innerHeight*2+1,A&&(S=O/1e3,P.x=B.x+.005*(-e.clientX-x.x)*S,P.y=B.y+.005*(e.clientY-x.y)*S,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y)}function s(e){A=!1,G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function l(e){G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function c(e){return e.preventDefault(),R&&h(.3*e.wheelDeltaY),!1}function d(e){switch(e.keyCode){case 13:"password"==document.activeElement.id&&loginAndLoadInventory(),e.preventDefault();break;case 16:holdingShift=!0,e.preventDefault();break;case 17:toggleRotate(),e.preventDefault();break;case 18:holdingAlt=!0,e.preventDefault();break;case 37:holdingAlt?P.x-=3:P.x-=.1,e.preventDefault();break;case 38:holdingShift?(P.y+=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(20),e.preventDefault();break;case 39:holdingAlt?P.x+=3:P.x+=.1,e.preventDefault();break;case 40:holdingShift?(P.y-=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(-20),e.preventDefault();break;default:new Audio("sounds/Pen_Clicks-Simon_Craggs-514025171.mp3").play()}}function u(e){void 0==e?e=20:e--,0!=e?setTimeout(function(){P.x+=e/3,u(e)},10):startRotation()}function p(e){switch(e.keyCode){case 16:holdingShift=!1,e.preventDefault();break;case 18:holdingAlt=!1,e.preventDefault()}}function m(e){v.aspect=window.innerWidth/window.innerHeight,v.updateProjectionMatrix(),T.setSize(window.innerWidth,window.innerHeight)}function h(e){e>0?(slidePanes("out"),stopRotation()):slidePanes("in"),D=(D=(D-=e)>1e3?1e3:D)<210?210:D}function g(){w.x+=.1*(P.x-w.x),w.y+=.1*(P.y-w.y),O+=.3*(D-O),v.position.x=O*Math.sin(w.x)*Math.cos(w.y),v.position.y=O*Math.sin(w.y),v.position.z=O*Math.cos(w.x)*Math.cos(w.y),v.lookAt(C.position),rotate&&(P.x-=.001),T.render(M,v),frames++}function y(e){return"fail"==e.health?W:"running"==e.status?void 0!=e.cpu&&void 0!=e.cpu.Average?e.cpu.Average>=0&&e.cpu.Average<75?F:e.cpu.Average>=75&&e.cpu.Average<90?j:V:F:"pending"==e.status||"rebooting"==e.status||"creating"==e.status?K:"stopped"==e.status?Q:"stopping"==e.status||"shutting-down"==e.status?Z:void 0}function f(e,n,t){var a=!0;D=1e3,Math.abs(v.position.x-e)>500||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.03,a=!1):Math.abs(v.position.x-e)>400||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.01,a=!1):(Math.abs(v.position.x-e)>100||t>0&&v.position.z<0||t<0&&v.position.z>0)&&(P.x-=.001,a=!1),Math.abs(v.position.y-n)>100&&(v.position.y<n?P.y+=.01:P.y-=.01,a=!1),a?stopRotation():setTimeout(function(){f(e,n,t)},10)}var v,M,T,C,R,S,G=document.getElementById("container"),b="images/",L=200,A=!1,E=15,I=(new THREE.Raycaster,new THREE.Vector2),x={x:0,y:0},w={x:0,y:0},P={x:3*Math.PI/2.5,y:Math.PI/7},B={x:0,y:0},O=1e5,D=1e3,H=Math.PI/2,N={},k=document.createElement("canvas");k.width=256,k.height=256;var U=k.getContext("2d").createLinearGradient(256,0,256,256);U.addColorStop(0,"#0080ff"),U.addColorStop(.2,"#0065ff"),U.addColorStop(.5,"#0055ff"),U.addColorStop(.8,"#0065ff"),U.addColorStop(1,"#0080ff"),k.getContext("2d").fillStyle=U,k.getContext("2d").fillRect(0,0,256,256);var F=new THREE.CanvasTexture(k),W=(a("rgb(256,256,256)"),a("rgb(256,0,0)")),j=a("rgb(256,256,0)"),V=a("rgb(179, 71, 0)"),K=a("rgb(256,256,256)"),Q=a("rgb(50,50,50)"),Z=Q,J=a("rgb(0, 173, 239)"),z=null,Y=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.3}),_=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.4}),q=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.45}),X=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.5}),$=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.55}),ee=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.6}),ne=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.65}),te=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.7}),ae=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.75}),ie=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.8}),oe=new THREE.CircleGeometry(.5,20),re=new THREE.Mesh(oe,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));return re.scale.set(1.1,1.1,1.1),new THREE.Object3D,function(){var n,t,a;(v=new THREE.PerspectiveCamera(20,window.innerWidth/window.innerHeight,1,1e4)).position.z=O,M=new THREE.Scene;var r=new THREE.PointLight(16777215,.25,1e6);r.position.set(0,1e4,0),M.add(r);var s=new THREE.PointLight(16777215,.25,1e6);s.position.set(0,-1e4,0),M.add(s);var l=new THREE.PointLight(16777215,2,1e6);l.position.set(1e4,0,0),M.add(l);var u=new THREE.PointLight(16777215,2,1e6);u.position.set(-1e4,0,0),M.add(u);var h=new THREE.PointLight(16777215,2,1e6);h.position.set(0,0,1e4),M.add(h);var g=new THREE.PointLight(16777215,2,1e6);g.position.set(0,0,-1e4),M.add(g),M.add(re);var y=new THREE.SphereGeometry(L,100,100);n=Shaders.earth,(t=THREE.UniformsUtils.clone(n.uniforms)).texture.value=THREE.ImageUtils.loadTexture(b+"earth_large-8192x4096.jpg"),a=new THREE.ShaderMaterial({uniforms:t,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,transparent:!0,wireframe:!1,depthWrite:!1,depthTest:!1,opacity:.9}),(C=new THREE.Mesh(y,a)).rotation.y=Math.PI,C.name="globe",M.add(C),a=new THREE.MeshBasicMaterial({map:J,transparent:!0,wireframe:!0,depthWrite:!1,depthTest:!1,opacity:.02});var f=new THREE.SphereGeometry(L-1,100,100),S=new THREE.Mesh(f,a);S.name="meshGlobeUnderlay",M.add(S);var A=ShadersOverlay.earth,E=THREE.UniformsUtils.clone(A.uniforms);E.texture.value=THREE.ImageUtils.loadTexture(b+"stars.jpg"),z=new THREE.ShaderMaterial({uniforms:E,vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,transparent:!0,wireframe:!1,side:THREE.BackSide,opacity:.2});var I=new THREE.SphereGeometry(L+400,20,20),x=new THREE.Mesh(I,z);x.rotation.y=Math.PI,x.name="globeOverlay",M.add(x);var w=new THREE.MeshBasicMaterial({map:K,transparent:!0,side:THREE.DoubleSide,depthWrite:!1,depthTest:!1,opacity:.2});N.aws={},N.aws.regions={},N.aws.regions["us-east-1"]={lat:37,lon:-77,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-east-2"]={lat:40,lon:-83,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-1"]={lat:44,lon:-120,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-2"]={lat:39,lon:-122,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ca-central-1"]={lat:46,lon:-75,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-1"]={lat:53,lon:-8,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-2"]={lat:51.5,lon:0,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-central-1"]={lat:50,lon:8.5,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-1"]={lat:35.7,lon:139.7,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-2"]={lat:37.5,lon:127,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-1"]={lat:1.3,lon:104,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-2"]={lat:-33.8,lon:150,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-south-1"]={lat:19,lon:73,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["sa-east-1"]={lat:-23.5,lon:-46.5,pivot:new THREE.Object3D,point:new THREE.Geometry};for(var P in N)for(var B in N[P].regions)e(N[P].regions[B].lat,N[P].regions[B].lon,w,B);(T=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),T.domElement.style.position="absolute",G.appendChild(T.domElement),G.addEventListener("mousedown",o,!1),G.addEventListener("dblclick",i,!1),G.addEventListener("mousewheel",c,!1),document.addEventListener("keydown",d,!1),document.addEventListener("keyup",p,!1),window.addEventListener("resize",m,!1),G.addEventListener("mouseover",function(){G.style.cursor="all-scroll",R=!0},!1),G.addEventListener("mouseout",function(){R=!1},!1)}(),setInterval(function(){requestAnimationFrame(g)},1e3/60),window.addEventListener("mousemove",r,!1),window.requestAnimationFrame(g),this.load=function(e,t){if(t.length>0){window.data=t;for(var a=[],i=0;i<t.length;i++)if("billing"==e){var o=new Date,r=month[o.getMonth()];document.getElementById("billingTotal").innerHTML="$"+t[i]+" ("+r+")"}else if("traffic"==e)for(var s=0;s<t[i].connections.length;s++)addTrafficEvent(t[i].id,t[i].connections[s]);else{if("apigateway"==t[i].type)t[i]=translateApiGateway(t[i]);else{if("elb"!=t[i].type)continue;t[i]=translateElb(t[i])}if("terminated"==t[i].status)void 0!=inventory[t[i].type]&&void 0!=inventory[t[i].type][t[i].id]&&delete inventory[t[i].type][t[i].id];else{void 0==inventory[t[i].type]&&(inventory[t[i].type]={}),void 0==inventory[t[i].type][t[i].id]&&(inventory[t[i].type][t[i].id]={},inventory[t[i].type][t[i].id]=t[i],a.push(t[i]));for(var l=0;l<inventoryFields.length;l++)t[i][inventoryFields[l]]instanceof Array?void 0!=t[i][inventoryFields[l]]&&JSON.stringify(t[i][inventoryFields[l]])!=JSON.stringify(inventory[t[i].type][t[i].id][inventoryFields[l]])&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]]):void 0!=t[i][inventoryFields[l]]&&t[i][inventoryFields[l]]!=inventory[t[i].type][t[i].id][inventoryFields[l]]&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]],inventory[t[i].type][t[i].id].mesh.material.map=y(t[i]))}}if(a.length>0)for(var c in N.aws.regions)n(c),firstInventorySetLoaded||(getInitialTimeLineData(),firstInventorySetLoaded=!0);document.body.style.backgroundImage="none"}},this.elementShadowIntensity=2,this.scene=M,this.setCameraPosition=f,this.clouds=N,this.globeRadius=L,this.regionOffset=E,this.updateHeatMap=function(){void 0!=M.getObjectByName("heatMapMesh")&&M.remove(M.getObjectByName("heatMapMesh"));var e=null,n=null,t=new THREE.Geometry,a=new THREE.Mesh(oe),i=0,o=0;for(var r in heatMapHistory){(o=heatMapHistory[r].count-heatMapAverage)<1&&(o=1),i=Math.floor(scaleBetween(o,1,99,1,heatMapHigh))/100,e=(90-heatMapHistory[r].lat)*Math.PI/180,n=(180-heatMapHistory[r].lon)*Math.PI/180,a.position.x=L*Math.sin(e)*Math.cos(n),a.position.y=L*Math.cos(e),a.position.z=L*Math.sin(e)*Math.sin(n),a.lookAt(C.position),a.updateMatrix();for(var s=0;s<a.geometry.faces.length;s++)a.geometry.faces[s].materialIndex=Math.floor(10*i);t.merge(a.geometry,a.matrix)}var l=new THREE.Mesh(t,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));l.name="heatMapMesh",M.add(l)},this.globeMesh=C,this.runLoginAnimation=function(){M.getObjectByName("globe").material.depthWrite=!0,M.getObjectByName("globe").material.depthTest=!0,M.getObjectByName("globeOverlay").visible=!1},this.timeWarpSpinMove=u,this.enhance=i,this.zoomReset=function(){setTimeout(function(){D=1e3},100)},this},iso2iso3={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",CV:"CPV",KH:"KHM",CM:"CMR",CA:"CAN",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"},iso3iso2={AFG:"AF",ALA:"AX",ALB:"AL",DZA:"DZ",ASM:"AS",AND:"AD",AGO:"AO",AIA:"AI",ATA:"AQ",ATG:"AG",ARG:"AR",ARM:"AM",ABW:"AW",AUS:"AU",AUT:"AT",AZE:"AZ",BHS:"BS",BHR:"BH",BGD:"BD",BRB:"BB",BLR:"BY",BEL:"BE",BLZ:"BZ",BEN:"BJ",BMU:"BM",BTN:"BT",BOL:"BO",BES:"BQ",BIH:"BA",BWA:"BW",BVT:"BV",BRA:"BR",IOT:"IO",BRN:"BN",BGR:"BG",BFA:"BF",BDI:"BI",CPV:"CV",KHM:"KH",CMR:"CM",CAN:"CA",CYM:"KY",CAF:"CF",TCD:"TD",CHL:"CL",CHN:"CN",CXR:"CX",CCK:"CC",COL:"CO",COM:"KM",COG:"CG",COD:"CD",COK:"CK",CRI:"CR",CIV:"CI",HRV:"HR",CUB:"CU",CUW:"CW",CYP:"CY",CZE:"CZ",DNK:"DK",DJI:"DJ",DMA:"DM",DOM:"DO",ECU:"EC",EGY:"EG",SLV:"SV",GNQ:"GQ",ERI:"ER",EST:"EE",ETH:"ET",FLK:"FK",FRO:"FO",FJI:"FJ",FIN:"FI",FRA:"FR",GUF:"GF",PYF:"PF",ATF:"TF",GAB:"GA",GMB:"GM",GEO:"GE",DEU:"DE",GHA:"GH",GIB:"GI",GRC:"GR",GRL:"GL",GRD:"GD",GLP:"GP",GUM:"GU",GTM:"GT",GGY:"GG",GIN:"GN",GNB:"GW",GUY:"GY",HTI:"HT",HMD:"HM",VAT:"VA",HND:"HN",HKG:"HK",HUN:"HU",ISL:"IS",IND:"IN",IDN:"ID",IRN:"IR",IRQ:"IQ",IRL:"IE",IMN:"IM",ISR:"IL",ITA:"IT",JAM:"JM",JPN:"JP",JEY:"JE",JOR:"JO",KAZ:"KZ",KEN:"KE",KIR:"KI",PRK:"KP",KOR:"KR",KWT:"KW",KGZ:"KG",LAO:"LA",LVA:"LV",LBN:"LB",LSO:"LS",LBR:"LR",LBY:"LY",LIE:"LI",LTU:"LT",LUX:"LU",MAC:"MO",MKD:"MK",MDG:"MG",MWI:"MW",MYS:"MY",MDV:"MV",MLI:"ML",MLT:"MT",MHL:"MH",MTQ:"MQ",MRT:"MR",MUS:"MU",MYT:"YT",MEX:"MX",FSM:"FM",MDA:"MD",MCO:"MC",MNG:"MN",MNE:"ME",MSR:"MS",MAR:"MA",MOZ:"MZ",MMR:"MM",NAM:"NA",NRU:"NR",NPL:"NP",NLD:"NL",NCL:"NC",NZL:"NZ",NIC:"NI",NER:"NE",NGA:"NG",NIU:"NU",NFK:"NF",MNP:"MP",NOR:"NO",OMN:"OM",PAK:"PK",PLW:"PW",PSE:"PS",PAN:"PA",PNG:"PG",PRY:"PY",PER:"PE",PHL:"PH",PCN:"PN",POL:"PL",PRT:"PT",PRI:"PR",QAT:"QA",REU:"RE",ROU:"RO",RUS:"RU",RWA:"RW",BLM:"BL",SHN:"SH",KNA:"KN",LCA:"LC",MAF:"MF",SPM:"PM",VCT:"VC",WSM:"WS",SMR:"SM",STP:"ST",SAU:"SA",SEN:"SN",SRB:"RS",SYC:"SC",SLE:"SL",SGP:"SG",SXM:"SX",SVK:"SK",SVN:"SI",SLB:"SB",SOM:"SO",ZAF:"ZA",SGS:"GS",SSD:"SS",ESP:"ES",LKA:"LK",SDN:"SD",SUR:"SR",SJM:"SJ",SWZ:"SZ",SWE:"SE",CHE:"CH",SYR:"SY",TWN:"TW",TJK:"TJ",TZA:"TZ",THA:"TH",TLS:"TL",TGO:"TG",TKL:"TK",TON:"TO",TTO:"TT",TUN:"TN",TUR:"TR",TKM:"TM",TCA:"TC",TUV:"TV",UGA:"UG",UKR:"UA",ARE:"AE",GBR:"GB",USA:"US",UMI:"UM",URY:"UY",UZB:"UZ",VUT:"VU",VEN:"VE",VNM:"VN",VGB:"VG",VIR:"VI",WLF:"WF",ESH:"EH",YEM:"YE",ZMB:"ZM",ZWE:"ZW"},countryNameIso2={Afghanistan:"AF","Aland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua And Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO","Bosnia And Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Congo, Democratic Republic":"CD","Cook Islands":"CK","Costa Rica":"CR","Cote D'Ivoire":"CI",Croatia:"HR",Cuba:"CU",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island & Mcdonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID","Iran, Islamic Republic Of":"IR",Iraq:"IQ",Ireland:"IE","Isle Of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI",Korea:"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR","Libyan Arab Jamahiriya":"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX","Micronesia, Federated States Of":"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","Netherlands Antilles":"AN","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory, Occupied":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA",Reunion:"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthelemy":"BL","Saint Helena":"SH","Saint Kitts And Nevis":"KN","Saint Lucia":"LC","Saint Martin":"MF","Saint Pierre And Miquelon":"PM","Saint Vincent And Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome And Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia And Sandwich Isl.":"GS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard And Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad And Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks And Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE",Vietnam:"VN","Virgin Islands, British":"VG","Virgin Islands, U.S.":"VI","Wallis And Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},iso2CountryName={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},USState2iso={Alabama:"AL",Alaska:"AK","American Samoa":"AS",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE","District Of Columbia":"DC","Federated States Of Micronesia":"FM",Florida:"FL",Georgia:"GA",Guam:"GU",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansas:"KS",Kentucky:"KY",Louisiana:"LA",Maine:"ME","Marshall Islands":"MH",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV","New Hampshire":"NH","New Jersey":"NJ","New Mexico":"NM","New York":"NY","North Carolina":"NC","North Dakota":"ND","Northern Mariana Islands":"MP",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Palau:"PW",Pennsylvania:"PA","Puerto Rico":"PR","Rhode Island":"RI","South Carolina":"SC","South Dakota":"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT","Virgin Islands":"VI",Virginia:"VA",Washington:"WA","West Virginia":"WV",Wisconsin:"WI",Wyoming:"WY"},countryResponseObjects=[],countryResponseUpdatedObjects={},countryTimeLineGraphs={},countryDataFrames=50,countryGraphsMax=10,countryResponseGraphWidth=100,countryResponseGraphHeight=60,countryResponseGraphRadius=Math.min(countryResponseGraphWidth,countryResponseGraphHeight)/2,countryResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),countryResponseGraphArc=d3.svg.arc().outerRadius(.7*countryResponseGraphRadius).innerRadius(.65*countryResponseGraphRadius),countryResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*countryResponseGraphRadius).innerRadius(.4*countryResponseGraphRadius),countryResponseGraphArcInner=d3.svg.arc().outerRadius(.35*countryResponseGraphRadius).innerRadius(.3*countryResponseGraphRadius),countryResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),countryResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),countryResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),valueMobile=0,valueTablet=0,valueMonitor=0,deviceCircleGraphWidth=150,deviceCircleGraphHeight=75,deviceCircleGraphRadius=Math.min(deviceCircleGraphWidth,deviceCircleGraphHeight)/1.5,deviceCircleGraphMobile=d3.select("#deviceCircleGraphMobile").append("svg").append("g"),deviceCircleGraphTablet=d3.select("#deviceCircleGraphTablet").append("svg").append("g"),deviceCircleGraphMonitor=d3.select("#deviceCircleGraphMonitor").append("svg").append("g");deviceCircleGraphMobile.append("g").attr("class","slices"),deviceCircleGraphTablet.append("g").attr("class","slices"),deviceCircleGraphMonitor.append("g").attr("class","slices");var pie=d3.layout.pie().sort(null).value(function(e){return e.value}),key=function(e){return e.data.label},arcDevice=d3.svg.arc().outerRadius(.8*deviceCircleGraphRadius).innerRadius(.78*deviceCircleGraphRadius),outerArcDevice=d3.svg.arc().innerRadius(.9*deviceCircleGraphRadius).outerRadius(.9*deviceCircleGraphRadius);deviceCircleGraphMobile.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphTablet.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphMonitor.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)");var deviceCircleGraphColorMobile=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorTablet=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorMonitor=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),endPointResponseObjects=[],endPointResponseUpdatedObjects={},endPointTimeLineGraphs={},endPointTimeLineResponseTimeGraphs={},endPointDataFrames=50,endPointGraphsMax=6,endPointResponseGraphWidth=100,endPointResponseGraphHeight=60,endPointResponseGraphRadius=Math.min(endPointResponseGraphWidth,endPointResponseGraphHeight)/2,endPointResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),endPointResponseGraphArc=d3.svg.arc().outerRadius(.7*endPointResponseGraphRadius).innerRadius(.65*endPointResponseGraphRadius),endPointResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*endPointResponseGraphRadius).innerRadius(.4*endPointResponseGraphRadius),endPointResponseGraphArcInner=d3.svg.arc().outerRadius(.35*endPointResponseGraphRadius).innerRadius(.3*endPointResponseGraphRadius),endPointResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),endPointResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),endPointResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),graphTotals={},endPointHealthGraphs=[],endPoints={},endPointHealthGraphsFrameCount=0,endPointHealthGraphId,lineGraphs=[];createNewLineGraph("Connections","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Unique IPs","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Success","responseLineGraphs","area","third",color123,"rgba(256,256,256,0.3)",.5),createNewLineGraph("Rejected","responseLineGraphs","area","third",color4xx,"rgba(209, 102, 6,0.3)",.5),createNewLineGraph("Error","responseLineGraphs","area","third",color5xx,"rgba(256,0,0,0.3)",.5);var mapLargeScope="world",mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,map=new Datamap({element:document.getElementById("dataMapContainer"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.1,popupOnHover:!1,highlightOnHover:!1}}),mapLargeWorld=new Datamap({element:document.getElementById("dataMapContainerLargeWorld"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),mapLargeUSA=new Datamap({element:document.getElementById("dataMapContainerLargeUSA"),fills:{defaultFill:"transparent"},data:{},scope:"usa",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}});(responseCodeGraphSvg=d3.select("#responseCodeGraph").append("svg").append("g")).append("g").attr("class","slices"),responseCodeGraphSvg.append("g").attr("class","labels"),responseCodeGraphSvg.append("g").attr("class","lines");var responseCodeGraphWidth=275,responseCodeGraphHeight=150,responseCodeGraphRadius=Math.min(responseCodeGraphWidth,responseCodeGraphHeight)/2,responseCodeGraphArc=d3.svg.arc().outerRadius(.8*responseCodeGraphRadius).innerRadius(.75*responseCodeGraphRadius),responseCodeGraphOuterArc=d3.svg.arc().innerRadius(.9*responseCodeGraphRadius).outerRadius(.9*responseCodeGraphRadius);responseCodeGraphSvg.attr("transform","translate("+responseCodeGraphWidth/2+","+responseCodeGraphHeight/2+")");var responseCodeGraphColor=d3.scale.ordinal().domain(["Success","Rejected","Error"]).range([color123,color4xx,color5xx]),scatterCircleGraphWidth=420,scatterCircleGraphHeight=420,deviceScatterGraph=new Circos({container:"#circleScatterGraph",width:scatterCircleGraphWidth,height:scatterCircleGraphHeight}),scatterCircleGraphInstanceArray=[],deviceScatterData=[],color5xx="#ff0000",color123="#ffffff",color4xx="#d16606",timeLineFirstRun=!0,timeLineGraph=new Rickshaw.Graph({element:document.getElementById("timeLine"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar",unstack:!0},{name:"5xx",color:color5xx,renderer:"bar",unstack:!0},{name:"123xx",color:color123,renderer:"bar",unstack:!0}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),timeLineGraphLatency=new Rickshaw.Graph({element:document.getElementById("timeLineLatency"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"Latency",color:"#00adef",renderer:"line",strokeWidth:1},{name:"LatencyArea",color:"rgba(0,133,199,0.2)",renderer:"area"}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})});(axesTime=new Rickshaw.Graph.Axis.Time({graph:timeLineGraph})).render(),(axes=new Rickshaw.Graph.Axis.Y({graph:timeLineGraph,pixelsPerTick:30,ticksTreatment:"inverse"})).render();var hoverDetail=new Rickshaw.Graph.HoverDetail({graph:timeLineGraph,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}}),hoverDetailLatency=new Rickshaw.Graph.HoverDetail({graph:timeLineGraphLatency,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}});timeLineGraph.update(),timeLineGraphLatency.update();for(var timeLineInitialDataCount=[],timeLineInitialDataCountCalls=0,timeLineInitialDataCountResponses=0,timeLineInitialData4xx=[],timeLineInitialData4xxCalls=0,timeLineInitialData4xxResponses=0,timeLineInitialData5xx=[],timeLineInitialData5xxCalls=0,timeLineInitialData5xxResponses=0,timeLineInitialDataLatency=[],timeLineInitialDataLatencyCalls=0,timeLineInitialDataLatencyResponses=0,timeLineQueue={},timeLineCallBackCount=0,m=0;m<287;m++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]={},timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=0,55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5;var trafficPointCount=0,apiGatewayCloudWatchLogsPrefix="API-Gateway-Execution-Logs_",apiGatewayObjectTarget=0,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0,apiGatewayInventoryQueue={},loginRegion="us-east-1",credentialExpirationDate,lastMetricCall=0,getAWSInventoryInterval=5e3,getAWSMetricsInterval=3e5,getAWSLoggedMetricsInterval=6e4,getAWSBillingInterval=216e5,getAWSEC2TrafficInterval=5e3,initialLoad=!0,baseUrl="https://pqhzr7kno2.execute-api.us-east-1.amazonaws.com/dev/",a,s,t,s3,cloudWatchLogs,cloudWatchObjects,APIGatewayObjects,appAccountS3,appAccountConf,centroids={Andorra:{lat:42.546245,lon:1.601554},"United Arab Emirates":{lat:23.424076,lon:53.847818},Afghanistan:{lat:33.93911,lon:67.709953},"Antigua and Barbuda":{lat:17.060816,lon:-61.796428},Anguilla:{lat:18.220554,lon:-63.068615},Albania:{lat:41.153332,lon:20.168331},Armenia:{lat:40.069099,lon:45.038189},"Netherlands Antilles":{lat:12.226079,lon:-69.060087},Angola:{lat:-11.202692,lon:17.873887},Antarctica:{lat:-75.250973,lon:-.071389},Argentina:{lat:-38.416097,lon:-63.616672},"American Samoa":{lat:-14.270972,lon:-170.132217},Austria:{lat:47.516231,lon:14.550072},Australia:{lat:-25.274398,lon:133.775136},Aruba:{lat:12.52111,lon:-69.968338},Azerbaijan:{lat:40.143105,lon:47.576927},"Bosnia and Herzegovina":{lat:43.915886,lon:17.679076},Barbados:{lat:13.193887,lon:-59.543198},Bangladesh:{lat:23.684994,lon:90.356331},Belgium:{lat:50.503887,lon:4.469936},"Burkina Faso":{lat:12.238333,lon:-1.561593},Bulgaria:{lat:42.733883,lon:25.48583},Bahrain:{lat:25.930414,lon:50.637772},Burundi:{lat:-3.373056,lon:29.918886},Benin:{lat:9.30769,lon:2.315834},Bermuda:{lat:32.321384,lon:-64.75737},Brunei:{lat:4.535277,lon:114.727669},Bolivia:{lat:-16.290154,lon:-63.588653},Brazil:{lat:-14.235004,lon:-51.92528},Bahamas:{lat:25.03428,lon:-77.39628},Bhutan:{lat:27.514162,lon:90.433601},"Bouvet Island":{lat:-54.423199,lon:3.413194},Botswana:{lat:-22.328474,lon:24.684866},Belarus:{lat:53.709807,lon:27.953389},Belize:{lat:17.189877,lon:-88.49765},Canada:{lat:56.130366,lon:-106.346771},"Cocos [Keeling] Islands":{lat:-12.164165,lon:96.870956},"Congo [DRC]":{lat:-4.038333,lon:21.758664},"Central African Republic":{lat:6.611111,lon:20.939444},"Congo [Republic]":{lat:-.228021,lon:15.827659},Switzerland:{lat:46.818188,lon:8.227512},"Côte d'Ivoire":{lat:7.539989,lon:-5.54708},"Cook Islands":{lat:-21.236736,lon:-159.777671},Chile:{lat:-35.675147,lon:-71.542969},Cameroon:{lat:7.369722,lon:12.354722},China:{lat:35.86166,lon:104.195397},Colombia:{lat:4.570868,lon:-74.297333},"Costa Rica":{lat:9.748917,lon:-83.753428},Cuba:{lat:21.521757,lon:-77.781167},"Cape Verde":{lat:16.002082,lon:-24.013197},"Christmas Island":{lat:-10.447525,lon:105.690449},Cyprus:{lat:35.126413,lon:33.429859},"Czech Republic":{lat:49.817492,lon:15.472962},Germany:{lat:51.165691,lon:10.451526},Djibouti:{lat:11.825138,lon:42.590275},Denmark:{lat:56.26392,lon:9.501785},Dominica:{lat:15.414999,lon:-61.370976},"Dominican Republic":{lat:18.735693,lon:-70.162651},Algeria:{lat:28.033886,lon:1.659626},Ecuador:{lat:-1.831239,lon:-78.183406},Estonia:{lat:58.595272,lon:25.013607},Egypt:{lat:26.820553,lon:30.802498},"Western Sahara":{lat:24.215527,lon:-12.885834},Eritrea:{lat:15.179384,lon:39.782334},Spain:{lat:40.463667,lon:-3.74922},Ethiopia:{lat:9.145,lon:40.489673},Finland:{lat:61.92411,lon:25.748151},Fiji:{lat:-16.578193,lon:179.414413},"Falkland Islands [Islas Malvinas]":{lat:-51.796253,lon:-59.523613},Micronesia:{lat:7.425554,lon:150.550812},"Faroe Islands":{lat:61.892635,lon:-6.911806},France:{lat:46.227638,lon:2.213749},Gabon:{lat:-.803689,lon:11.609444},"United Kingdom":{lat:55.378051,lon:-3.435973},Grenada:{lat:12.262776,lon:-61.604171},Georgia:{lat:42.315407,lon:43.356892},"French Guiana":{lat:3.933889,lon:-53.125782},Guernsey:{lat:49.465691,lon:-2.585278},Ghana:{lat:7.946527,lon:-1.023194},Gibraltar:{lat:36.137741,lon:-5.345374},Greenland:{lat:71.706936,lon:-42.604303},Gambia:{lat:13.443182,lon:-15.310139},Guinea:{lat:9.945587,lon:-9.696645},Guadeloupe:{lat:16.995971,lon:-62.067641},"Equatorial Guinea":{lat:1.650801,lon:10.267895},Greece:{lat:39.074208,lon:21.824312},"South Georgia and the South Sandwich Islands":{lat:-54.429579,lon:-36.587909},Guatemala:{lat:15.783471,lon:-90.230759},Guam:{lat:13.444304,lon:144.793731},"Guinea-Bissau":{lat:11.803749,lon:-15.180413},Guyana:{lat:4.860416,lon:-58.93018},"Gaza Strip":{lat:31.354676,lon:34.308825},"Hong Kong":{lat:22.396428,lon:114.109497},"Heard Island and McDonald Islands":{lat:-53.08181,lon:73.504158},Honduras:{lat:15.199999,lon:-86.241905},Croatia:{lat:45.1,lon:15.2},Haiti:{lat:18.971187,lon:-72.285215},Hungary:{lat:47.162494,lon:19.503304},Indonesia:{lat:-.789275,lon:113.921327},Ireland:{lat:53.41291,lon:-8.24389},Israel:{lat:31.046051,lon:34.851612},"Isle of Man":{lat:54.236107,lon:-4.548056},India:{lat:20.593684,lon:78.96288},"British Indian Ocean Territory":{lat:-6.343194,lon:71.876519},Iraq:{lat:33.223191,lon:43.679291},Iran:{lat:32.427908,lon:53.688046},Iceland:{lat:64.963051,lon:-19.020835},Italy:{lat:41.87194,lon:12.56738},Jersey:{lat:49.214439,lon:-2.13125},Jamaica:{lat:18.109581,lon:-77.297508},Jordan:{lat:30.585164,lon:36.238414},Japan:{lat:36.204824,lon:138.252924},Kenya:{lat:-.023559,lon:37.906193},Kyrgyzstan:{lat:41.20438,lon:74.766098},Cambodia:{lat:12.565679,lon:104.990963},Kiribati:{lat:-3.370417,lon:-168.734039},Comoros:{lat:-11.875001,lon:43.872219},"Saint Kitts and Nevis":{lat:17.357822,lon:-62.782998},"North Korea":{lat:40.339852,lon:127.510093},"South Korea":{lat:35.907757,lon:127.766922},Kuwait:{lat:29.31166,lon:47.481766},"Cayman Islands":{lat:19.513469,lon:-80.566956},Kazakhstan:{lat:48.019573,lon:66.923684},Laos:{lat:19.85627,lon:102.495496},Lebanon:{lat:33.854721,lon:35.862285},"Saint Lucia":{lat:13.909444,lon:-60.978893},Liechtenstein:{lat:47.166,lon:9.555373},"Sri Lanka":{lat:7.873054,lon:80.771797},Liberia:{lat:6.428055,lon:-9.429499},Lesotho:{lat:-29.609988,lon:28.233608},Lithuania:{lat:55.169438,lon:23.881275},Luxembourg:{lat:49.815273,lon:6.129583},Latvia:{lat:56.879635,lon:24.603189},Libya:{lat:26.3351,lon:17.228331},Morocco:{lat:31.791702,lon:-7.09262},Monaco:{lat:43.750298,lon:7.412841},Moldova:{lat:47.411631,lon:28.369885},Montenegro:{lat:42.708678,lon:19.37439},Madagascar:{lat:-18.766947,lon:46.869107},"Marshall Islands":{lat:7.131474,lon:171.184478},"Macedonia [FYROM]":{lat:41.608635,lon:21.745275},Mali:{lat:17.570692,lon:-3.996166},"Myanmar [Burma]":{lat:21.913965,lon:95.956223},Mongolia:{lat:46.862496,lon:103.846656},Macau:{lat:22.198745,lon:113.543873},"Northern Mariana Islands":{lat:17.33083,lon:145.38469},Martinique:{lat:14.641528,lon:-61.024174},Mauritania:{lat:21.00789,lon:-10.940835},Montserrat:{lat:16.742498,lon:-62.187366},Malta:{lat:35.937496,lon:14.375416},Mauritius:{lat:-20.348404,lon:57.552152},Maldives:{lat:3.202778,lon:73.22068},Malawi:{lat:-13.254308,lon:34.301525},Mexico:{lat:23.634501,lon:-102.552784},Malaysia:{lat:4.210484,lon:101.975766},Mozambique:{lat:-18.665695,lon:35.529562},Namibia:{lat:-22.95764,lon:18.49041},"New Caledonia":{lat:-20.904305,lon:165.618042},Niger:{lat:17.607789,lon:8.081666},"Norfolk Island":{lat:-29.040835,lon:167.954712},Nigeria:{lat:9.081999,lon:8.675277},Nicaragua:{lat:12.865416,lon:-85.207229},Netherlands:{lat:52.132633,lon:5.291266},Norway:{lat:60.472024,lon:8.468946},Nepal:{lat:28.394857,lon:84.124008},Nauru:{lat:-.522778,lon:166.931503},Niue:{lat:-19.054445,lon:-169.867233},"New Zealand":{lat:-40.900557,lon:174.885971},Oman:{lat:21.512583,lon:55.923255},Panama:{lat:8.537981,lon:-80.782127},Peru:{lat:-9.189967,lon:-75.015152},"French Polynesia":{lat:-17.679742,lon:-149.406843},"Papua New Guinea":{lat:-6.314993,lon:143.95555},Philippines:{lat:12.879721,lon:121.774017},Pakistan:{lat:30.375321,lon:69.345116},Poland:{lat:51.919438,lon:19.145136},"Saint Pierre and Miquelon":{lat:46.941936,lon:-56.27111},"Pitcairn Islands":{lat:-24.703615,lon:-127.439308},"Puerto Rico":{lat:18.220833,lon:-66.590149},"Palestinian Territories":{lat:31.952162,lon:35.233154},Portugal:{lat:39.399872,lon:-8.224454},Palau:{lat:7.51498,lon:134.58252},Paraguay:{lat:-23.442503,lon:-58.443832},Qatar:{lat:25.354826,lon:51.183884},"Réunion":{lat:-21.115141,lon:55.536384},Romania:{lat:45.943161,lon:24.96676},Serbia:{lat:44.016521,lon:21.005859},Russia:{lat:61.52401,lon:105.318756},Rwanda:{lat:-1.940278,lon:29.873888},"Saudi Arabia":{lat:23.885942,lon:45.079162},"Solomon Islands":{lat:-9.64571,lon:160.156194},Seychelles:{lat:-4.679574,lon:55.491977},Sudan:{lat:12.862807,lon:30.217636},Sweden:{lat:60.128161,lon:18.643501},Singapore:{lat:1.352083,lon:103.819836},"Saint Helena":{lat:-24.143474,lon:-10.030696},Slovenia:{lat:46.151241,lon:14.995463},"Svalbard and Jan Mayen":{lat:77.553604,lon:23.670272},Slovakia:{lat:48.669026,lon:19.699024},"Sierra Leone":{lat:8.460555,lon:-11.779889},"San Marino":{lat:43.94236,lon:12.457777},Senegal:{lat:14.497401,lon:-14.452362},Somalia:{lat:5.152149,lon:46.199616},Suriname:{lat:3.919305,lon:-56.027783},"São Tomé and Príncipe":{lat:.18636,lon:6.613081},"El Salvador":{lat:13.794185,lon:-88.89653},Syria:{lat:34.802075,lon:38.996815},Swaziland:{lat:-26.522503,lon:31.465866},"Turks and Caicos Islands":{lat:21.694025,lon:-71.797928},Chad:{lat:15.454166,lon:18.732207},"French Southern Territories":{lat:-49.280366,lon:69.348557},Togo:{lat:8.619543,lon:.824782},Thailand:{lat:15.870032,lon:100.992541},Tajikistan:{lat:38.861034,lon:71.276093},Tokelau:{lat:-8.967363,lon:-171.855881},"Timor-Leste":{lat:-8.874217,lon:125.727539},Turkmenistan:{lat:38.969719,lon:59.556278},Tunisia:{lat:33.886917,lon:9.537499},Tonga:{lat:-21.178986,lon:-175.198242},Turkey:{lat:38.963745,lon:35.243322},"Trinidad and Tobago":{lat:10.691803,lon:-61.222503},Tuvalu:{lat:-7.109535,lon:177.64933},Taiwan:{lat:23.69781,lon:120.960515},Tanzania:{lat:-6.369028,lon:34.888822},Ukraine:{lat:48.379433,lon:31.16558},Uganda:{lat:1.373333,lon:32.290275},"United States":{lat:37.09024,lon:-95.712891},Uruguay:{lat:-32.522779,lon:-55.765835},Uzbekistan:{lat:41.377491,lon:64.585262},"Vatican City":{lat:41.902916,lon:12.453389},"Saint Vincent and the Grenadines":{lat:12.984305,lon:-61.287228},Venezuela:{lat:6.42375,lon:-66.58973},"British Virgin Islands":{lat:18.420695,lon:-64.639968},"U.S. Virgin Islands":{lat:18.335765,lon:-64.896335},Vietnam:{lat:14.058324,lon:108.277199},Vanuatu:{lat:-15.376706,lon:166.959158},"Wallis and Futuna":{lat:-13.768752,lon:-177.156097},Samoa:{lat:-13.759029,lon:-172.104629},Kosovo:{lat:42.602636,lon:20.902977},Yemen:{lat:15.552727,lon:48.516388},Mayotte:{lat:-12.8275,lon:45.166244},"South Africa":{lat:-30.559482,lon:22.937506},Zambia:{lat:-13.133897,lon:27.849332},Zimbabwe:{lat:-19.015438,lon:29.154857}},timeLineGraphUpdated=!1,Shaders={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 1 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = 0;","gl_Position = 0;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = 0;","gl_FragColor = 0;","}"].join("\n")}},ShadersOverlay={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 0.5 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.6 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.1 - dot( vNormal, vec3( 0, 2.1, 0.0 ) ), 8.0 );","gl_FragColor = vec4( 0, 0.5, 1, 0.8 ) * intensity;","}"].join("\n")}},Globe=function(){function e(e,n,t,a){var i=(90-e)*Math.PI/180,o=(180-n)*Math.PI/180;N.aws.regions[a].pivot.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var r=new THREE.PlaneGeometry(0,0,1);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var s=new THREE.Mesh(r,t);s.position.x=L*Math.sin(i)*Math.cos(o),s.position.y=L*Math.cos(i),s.position.z=L*Math.sin(i)*Math.sin(o),s.scale.z=Math.max(1,.1),s.lookAt(C.position),s.name=a,s.type="region",M.add(s),s.add(N.aws.regions[a].pivot);var l=new THREE.Object3D;l.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,E/2)),N.aws.regions[a].pivot.add(l),r=new THREE.ConeGeometry(3,E,4,1,!0,Math.PI/4,2*Math.PI);var c=new THREE.MeshBasicMaterial({map:K,transparent:!0,depthWrite:!1,depthTest:!1,opacity:.3}),d=new THREE.Mesh(r,c);d.name=a+"Cone",M.add(d),l.add(d),l.rotation.x+=H,(r=new THREE.PlaneGeometry(1,1,1)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E-2));var u=new THREE.Mesh(r,t);s.add(u)}function n(e){var n=[];for(var a in inventory)for(var i in inventory[a])inventory[a][i].Region==e&&n.push(inventory[a][i]);var o,r,s,l=Math.ceil(Math.sqrt(n.length)),c=Math.round(Math.sqrt(n.length)),d=M.getObjectByName(e),u=4*l,p=4*c,m=0,h=0,g=0,y=0,f=!1,v=0,T=0;for(o=0;o<n.length;o++){for(s=!1,v=1==c?4*m-(4*c-4):4*m-(4*c-4)/2,T=1==l?4*g-(4*l-4):4*g-(4*l-4)/2,r=0;r<d.children[0].children.length;r++)if(d.children[0].children[r].name==n[o].id){d.children[0].children[r].position.x=v,d.children[0].children[r].position.y=T,s=!0;break}s||t(n[o],v,T),m>h&&(h=m),g>y&&(y=g),g>m?f?g==m+1?(f=!1,m++,g=0):m++:(m++,g=0):g<m?g++:g==m&&(f||(g++,m=0,f=!0))}p<4&&(p=4),u<4&&(u=4),d.children[1].scale.set(p+2,u+2,1)}function t(e,n,t){var a,i,o=new THREE.MeshLambertMaterial({map:y(e),transparent:!0,side:THREE.DoubleSide,opacity:.9});if("elb"==e.type){a=1,i=new THREE.Geometry,o.wireframe=!0;var r=new THREE.OctahedronGeometry(1.4,2);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-2.5));var s=new THREE.Mesh(r,o),l={left:0,center:0,right:0},c={left:0,center:0,right:0};c.center=-1.4,c.left=c.center,c.right=c.center,l.left=.8,l.right=-.8;var d=new THREE.BoxGeometry(.1,.6,.5);d.applyMatrix((new THREE.Matrix4).makeTranslation(l.center,c.center,-2.5));var u=new THREE.Mesh(d,o),p=new THREE.BoxGeometry(.1,.6,.5);p.applyMatrix((new THREE.Matrix4).makeTranslation(l.left,c.left,-2.5));var m=new THREE.Mesh(p,o),h=new THREE.BoxGeometry(.1,.6,.5);h.applyMatrix((new THREE.Matrix4).makeTranslation(l.right,c.right,-2.5));var g=new THREE.Mesh(h,o),f=new THREE.BoxGeometry(.1,.6,.5);f.applyMatrix((new THREE.Matrix4).makeTranslation(-l.center,-c.center,-2.5));var v=new THREE.Mesh(f,o);i.merge(s.geometry,s.matrix),i.merge(u.geometry,u.matrix),i.merge(m.geometry,m.matrix),i.merge(g.geometry,g.matrix),i.merge(v.geometry,v.matrix)}else"apigateway"==e.type&&(a=3,(i=new THREE.TorusGeometry(1.5,.2,10,28)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5)),o.wireframe=!0);var T=new THREE.Mesh(i,o);T.scale.z=Math.max(a,.1),T.lookAt(C.position),T.name=e.id,T.type=e.type,T.position.x=n,T.position.y=t,T.position.z=0,M.add(T),void 0!=e.Region&&N.aws.regions[e.Region].pivot.add(T),inventory[e.type][e.id].mesh=T,M.updateMatrixWorld(!0)}function a(e){var n=document.createElement("canvas");return n.width=256,n.height=256,n.getContext("2d").fillStyle=e,n.getContext("2d").fillRect(0,0,256,256),new THREE.CanvasTexture(n)}function i(){new Audio("sounds/Tick-DeepFrozenApps-397275646.mp3").play(),document.getElementById("enhanceFrame").style.display="block",setTimeout(function(){document.getElementById("enhanceFrame").style.display="none",h((D-210)/1.5)},100)}function o(e){e.preventDefault(),A=!0,G.addEventListener("mousemove",r,!1),G.addEventListener("mouseup",s,!1),G.addEventListener("mouseout",l,!1),x.x=-e.clientX,x.y=e.clientY,B.x=P.x,B.y=P.y}function r(e){I.x=e.clientX/window.innerWidth*2-1,I.y=-e.clientY/window.innerHeight*2+1,A&&(S=O/1e3,P.x=B.x+.005*(-e.clientX-x.x)*S,P.y=B.y+.005*(e.clientY-x.y)*S,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y)}function s(e){A=!1,G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function l(e){G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function c(e){return e.preventDefault(),R&&h(.3*e.wheelDeltaY),!1}function d(e){switch(e.keyCode){case 13:"password"==document.activeElement.id&&loginAndLoadInventory(),e.preventDefault();break;case 16:holdingShift=!0,e.preventDefault();break;case 17:toggleRotate(),e.preventDefault();break;case 18:holdingAlt=!0,e.preventDefault();break;case 37:holdingAlt?P.x-=3:P.x-=.1,e.preventDefault();break;case 38:holdingShift?(P.y+=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(20),e.preventDefault();break;case 39:holdingAlt?P.x+=3:P.x+=.1,e.preventDefault();break;case 40:holdingShift?(P.y-=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(-20),e.preventDefault();break;default:new Audio("sounds/Pen_Clicks-Simon_Craggs-514025171.mp3").play()}}function u(e){void 0==e?e=20:e--,0!=e?setTimeout(function(){P.x+=e/3,u(e)},10):startRotation()}function p(e){switch(e.keyCode){case 16:holdingShift=!1,e.preventDefault();break;case 18:holdingAlt=!1,e.preventDefault()}}function m(e){v.aspect=window.innerWidth/window.innerHeight,v.updateProjectionMatrix(),T.setSize(window.innerWidth,window.innerHeight)}function h(e){e>0?(slidePanes("out"),stopRotation()):slidePanes("in"),D=(D=(D-=e)>1e3?1e3:D)<210?210:D}function g(){w.x+=.1*(P.x-w.x),w.y+=.1*(P.y-w.y),O+=.3*(D-O),v.position.x=O*Math.sin(w.x)*Math.cos(w.y),v.position.y=O*Math.sin(w.y),v.position.z=O*Math.cos(w.x)*Math.cos(w.y),v.lookAt(C.position),rotate&&(P.x-=.001),T.render(M,v),frames++}function y(e){return"fail"==e.health?W:"running"==e.status?void 0!=e.cpu&&void 0!=e.cpu.Average?e.cpu.Average>=0&&e.cpu.Average<75?F:e.cpu.Average>=75&&e.cpu.Average<90?j:V:F:"pending"==e.status||"rebooting"==e.status||"creating"==e.status?K:"stopped"==e.status?Q:"stopping"==e.status||"shutting-down"==e.status?Z:void 0}function f(e,n,t){var a=!0;D=1e3,Math.abs(v.position.x-e)>500||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.03,a=!1):Math.abs(v.position.x-e)>400||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.01,a=!1):(Math.abs(v.position.x-e)>100||t>0&&v.position.z<0||t<0&&v.position.z>0)&&(P.x-=.001,a=!1),Math.abs(v.position.y-n)>100&&(v.position.y<n?P.y+=.01:P.y-=.01,a=!1),a?stopRotation():setTimeout(function(){f(e,n,t)},10)}var v,M,T,C,R,S,G=document.getElementById("container"),b="images/",L=200,A=!1,E=15,I=(new THREE.Raycaster,new THREE.Vector2),x={x:0,y:0},w={x:0,y:0},P={x:3*Math.PI/2.5,y:Math.PI/7},B={x:0,y:0},O=1e5,D=1e3,H=Math.PI/2,N={},k=document.createElement("canvas");k.width=256,k.height=256;var U=k.getContext("2d").createLinearGradient(256,0,256,256);U.addColorStop(0,"#0080ff"),U.addColorStop(.2,"#0065ff"),U.addColorStop(.5,"#0055ff"),U.addColorStop(.8,"#0065ff"),U.addColorStop(1,"#0080ff"),k.getContext("2d").fillStyle=U,k.getContext("2d").fillRect(0,0,256,256);var F=new THREE.CanvasTexture(k),W=(a("rgb(256,256,256)"),a("rgb(256,0,0)")),j=a("rgb(256,256,0)"),V=a("rgb(179, 71, 0)"),K=a("rgb(256,256,256)"),Q=a("rgb(50,50,50)"),Z=Q,J=a("rgb(0, 173, 239)"),z=null,Y=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.3}),_=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.4}),q=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.45}),X=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.5}),$=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.55}),ee=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.6}),ne=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.65}),te=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.7}),ae=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.75}),ie=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.8}),oe=new THREE.CircleGeometry(.5,20),re=new THREE.Mesh(oe,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));return re.scale.set(1.1,1.1,1.1),new THREE.Object3D,function(){var n,t,a;(v=new THREE.PerspectiveCamera(20,window.innerWidth/window.innerHeight,1,1e4)).position.z=O,M=new THREE.Scene;var r=new THREE.PointLight(16777215,.25,1e6);r.position.set(0,1e4,0),M.add(r);var s=new THREE.PointLight(16777215,.25,1e6);s.position.set(0,-1e4,0),M.add(s);var l=new THREE.PointLight(16777215,2,1e6);l.position.set(1e4,0,0),M.add(l);var u=new THREE.PointLight(16777215,2,1e6);u.position.set(-1e4,0,0),M.add(u);var h=new THREE.PointLight(16777215,2,1e6);h.position.set(0,0,1e4),M.add(h);var g=new THREE.PointLight(16777215,2,1e6);g.position.set(0,0,-1e4),M.add(g),M.add(re);var y=new THREE.SphereGeometry(L,100,100);n=Shaders.earth,(t=THREE.UniformsUtils.clone(n.uniforms)).texture.value=THREE.ImageUtils.loadTexture(b+"earth_large-8192x4096.jpg"),a=new THREE.ShaderMaterial({uniforms:t,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,transparent:!0,wireframe:!1,depthWrite:!1,depthTest:!1,opacity:.9}),(C=new THREE.Mesh(y,a)).rotation.y=Math.PI,C.name="globe",M.add(C),a=new THREE.MeshBasicMaterial({map:J,transparent:!0,wireframe:!0,depthWrite:!1,depthTest:!1,opacity:.02});var f=new THREE.SphereGeometry(L-1,100,100),S=new THREE.Mesh(f,a);S.name="meshGlobeUnderlay",M.add(S);var A=ShadersOverlay.earth,E=THREE.UniformsUtils.clone(A.uniforms);E.texture.value=THREE.ImageUtils.loadTexture(b+"stars.jpg"),z=new THREE.ShaderMaterial({uniforms:E,vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,transparent:!0,wireframe:!1,side:THREE.BackSide,opacity:.2});var I=new THREE.SphereGeometry(L+400,20,20),x=new THREE.Mesh(I,z);x.rotation.y=Math.PI,x.name="globeOverlay",M.add(x);var w=new THREE.MeshBasicMaterial({map:K,transparent:!0,side:THREE.DoubleSide,depthWrite:!1,depthTest:!1,opacity:.2});N.aws={},N.aws.regions={},N.aws.regions["us-east-1"]={lat:37,lon:-77,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-east-2"]={lat:40,lon:-83,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-1"]={lat:44,lon:-120,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-2"]={lat:39,lon:-122,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ca-central-1"]={lat:46,lon:-75,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-1"]={lat:53,lon:-8,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-2"]={lat:51.5,lon:0,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-central-1"]={lat:50,lon:8.5,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-1"]={lat:35.7,lon:139.7,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-2"]={lat:37.5,lon:127,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-1"]={lat:1.3,lon:104,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-2"]={lat:-33.8,lon:150,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-south-1"]={lat:19,lon:73,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["sa-east-1"]={lat:-23.5,lon:-46.5,pivot:new THREE.Object3D,point:new THREE.Geometry};for(var P in N)for(var B in N[P].regions)e(N[P].regions[B].lat,N[P].regions[B].lon,w,B);(T=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),T.domElement.style.position="absolute",G.appendChild(T.domElement),G.addEventListener("mousedown",o,!1),G.addEventListener("dblclick",i,!1),G.addEventListener("mousewheel",c,!1),document.addEventListener("keydown",d,!1),document.addEventListener("keyup",p,!1),window.addEventListener("resize",m,!1),G.addEventListener("mouseover",function(){G.style.cursor="all-scroll",R=!0},!1),G.addEventListener("mouseout",function(){R=!1},!1)}(),setInterval(function(){requestAnimationFrame(g)},1e3/60),window.addEventListener("mousemove",r,!1),window.requestAnimationFrame(g),this.load=function(e,t){if(t.length>0){window.data=t;for(var a=[],i=0;i<t.length;i++)if("billing"==e){var o=new Date,r=month[o.getMonth()];document.getElementById("billingTotal").innerHTML="$"+t[i]+" ("+r+")"}else if("traffic"==e)for(var s=0;s<t[i].connections.length;s++)addTrafficEvent(t[i].id,t[i].connections[s]);else{if("apigateway"==t[i].type)t[i]=translateApiGateway(t[i]);else{if("elb"!=t[i].type)continue;t[i]=translateElb(t[i])}if("terminated"==t[i].status)void 0!=inventory[t[i].type]&&void 0!=inventory[t[i].type][t[i].id]&&delete inventory[t[i].type][t[i].id];else{void 0==inventory[t[i].type]&&(inventory[t[i].type]={}),void 0==inventory[t[i].type][t[i].id]&&(inventory[t[i].type][t[i].id]={},inventory[t[i].type][t[i].id]=t[i],a.push(t[i]));for(var l=0;l<inventoryFields.length;l++)t[i][inventoryFields[l]]instanceof Array?void 0!=t[i][inventoryFields[l]]&&JSON.stringify(t[i][inventoryFields[l]])!=JSON.stringify(inventory[t[i].type][t[i].id][inventoryFields[l]])&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]]):void 0!=t[i][inventoryFields[l]]&&t[i][inventoryFields[l]]!=inventory[t[i].type][t[i].id][inventoryFields[l]]&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]],inventory[t[i].type][t[i].id].mesh.material.map=y(t[i]))}}if(a.length>0)for(var c in N.aws.regions)n(c),firstInventorySetLoaded||(getInitialTimeLineData(),firstInventorySetLoaded=!0);document.body.style.backgroundImage="none"}},this.elementShadowIntensity=2,this.scene=M,this.setCameraPosition=f,this.clouds=N,this.globeRadius=L,this.regionOffset=E,this.updateHeatMap=function(){void 0!=M.getObjectByName("heatMapMesh")&&M.remove(M.getObjectByName("heatMapMesh"));var e=null,n=null,t=new THREE.Geometry,a=new THREE.Mesh(oe),i=0,o=0;for(var r in heatMapHistory){(o=heatMapHistory[r].count-heatMapAverage)<1&&(o=1),i=Math.floor(scaleBetween(o,1,99,1,heatMapHigh))/100,e=(90-heatMapHistory[r].lat)*Math.PI/180,n=(180-heatMapHistory[r].lon)*Math.PI/180,a.position.x=L*Math.sin(e)*Math.cos(n),a.position.y=L*Math.cos(e),a.position.z=L*Math.sin(e)*Math.sin(n),a.lookAt(C.position),a.updateMatrix();for(var s=0;s<a.geometry.faces.length;s++)a.geometry.faces[s].materialIndex=Math.floor(10*i);t.merge(a.geometry,a.matrix)}var l=new THREE.Mesh(t,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));l.name="heatMapMesh",M.add(l)},this.globeMesh=C,this.runLoginAnimation=function(){M.getObjectByName("globe").material.depthWrite=!0,M.getObjectByName("globe").material.depthTest=!0,M.getObjectByName("globeOverlay").visible=!1},this.timeWarpSpinMove=u,this.enhance=i,this.zoomReset=function(){setTimeout(function(){D=1e3},100)},this},iso2iso3={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",CV:"CPV",KH:"KHM",CM:"CMR",CA:"CAN",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"},iso3iso2={AFG:"AF",ALA:"AX",ALB:"AL",DZA:"DZ",ASM:"AS",AND:"AD",AGO:"AO",AIA:"AI",ATA:"AQ",ATG:"AG",ARG:"AR",ARM:"AM",ABW:"AW",AUS:"AU",AUT:"AT",AZE:"AZ",BHS:"BS",BHR:"BH",BGD:"BD",BRB:"BB",BLR:"BY",BEL:"BE",BLZ:"BZ",BEN:"BJ",BMU:"BM",BTN:"BT",BOL:"BO",BES:"BQ",BIH:"BA",BWA:"BW",BVT:"BV",BRA:"BR",IOT:"IO",BRN:"BN",BGR:"BG",BFA:"BF",BDI:"BI",CPV:"CV",KHM:"KH",CMR:"CM",CAN:"CA",CYM:"KY",CAF:"CF",TCD:"TD",CHL:"CL",CHN:"CN",CXR:"CX",CCK:"CC",COL:"CO",COM:"KM",COG:"CG",COD:"CD",COK:"CK",CRI:"CR",CIV:"CI",HRV:"HR",CUB:"CU",CUW:"CW",CYP:"CY",CZE:"CZ",DNK:"DK",DJI:"DJ",DMA:"DM",DOM:"DO",ECU:"EC",EGY:"EG",SLV:"SV",GNQ:"GQ",ERI:"ER",EST:"EE",ETH:"ET",FLK:"FK",FRO:"FO",FJI:"FJ",FIN:"FI",FRA:"FR",GUF:"GF",PYF:"PF",ATF:"TF",GAB:"GA",GMB:"GM",GEO:"GE",DEU:"DE",GHA:"GH",GIB:"GI",GRC:"GR",GRL:"GL",GRD:"GD",GLP:"GP",GUM:"GU",GTM:"GT",GGY:"GG",GIN:"GN",GNB:"GW",GUY:"GY",HTI:"HT",HMD:"HM",VAT:"VA",HND:"HN",HKG:"HK",HUN:"HU",ISL:"IS",IND:"IN",IDN:"ID",IRN:"IR",IRQ:"IQ",IRL:"IE",IMN:"IM",ISR:"IL",ITA:"IT",JAM:"JM",JPN:"JP",JEY:"JE",JOR:"JO",KAZ:"KZ",KEN:"KE",KIR:"KI",PRK:"KP",KOR:"KR",KWT:"KW",KGZ:"KG",LAO:"LA",LVA:"LV",LBN:"LB",LSO:"LS",LBR:"LR",LBY:"LY",LIE:"LI",LTU:"LT",LUX:"LU",MAC:"MO",MKD:"MK",MDG:"MG",MWI:"MW",MYS:"MY",MDV:"MV",MLI:"ML",MLT:"MT",MHL:"MH",MTQ:"MQ",MRT:"MR",MUS:"MU",MYT:"YT",MEX:"MX",FSM:"FM",MDA:"MD",MCO:"MC",MNG:"MN",MNE:"ME",MSR:"MS",MAR:"MA",MOZ:"MZ",MMR:"MM",NAM:"NA",NRU:"NR",NPL:"NP",NLD:"NL",NCL:"NC",NZL:"NZ",NIC:"NI",NER:"NE",NGA:"NG",NIU:"NU",NFK:"NF",MNP:"MP",NOR:"NO",OMN:"OM",PAK:"PK",PLW:"PW",PSE:"PS",PAN:"PA",PNG:"PG",PRY:"PY",PER:"PE",PHL:"PH",PCN:"PN",POL:"PL",PRT:"PT",PRI:"PR",QAT:"QA",REU:"RE",ROU:"RO",RUS:"RU",RWA:"RW",BLM:"BL",SHN:"SH",KNA:"KN",LCA:"LC",MAF:"MF",SPM:"PM",VCT:"VC",WSM:"WS",SMR:"SM",STP:"ST",SAU:"SA",SEN:"SN",SRB:"RS",SYC:"SC",SLE:"SL",SGP:"SG",SXM:"SX",SVK:"SK",SVN:"SI",SLB:"SB",SOM:"SO",ZAF:"ZA",SGS:"GS",SSD:"SS",ESP:"ES",LKA:"LK",SDN:"SD",SUR:"SR",SJM:"SJ",SWZ:"SZ",SWE:"SE",CHE:"CH",SYR:"SY",TWN:"TW",TJK:"TJ",TZA:"TZ",THA:"TH",TLS:"TL",TGO:"TG",TKL:"TK",TON:"TO",TTO:"TT",TUN:"TN",TUR:"TR",TKM:"TM",TCA:"TC",TUV:"TV",UGA:"UG",UKR:"UA",ARE:"AE",GBR:"GB",USA:"US",UMI:"UM",URY:"UY",UZB:"UZ",VUT:"VU",VEN:"VE",VNM:"VN",VGB:"VG",VIR:"VI",WLF:"WF",ESH:"EH",YEM:"YE",ZMB:"ZM",ZWE:"ZW"},countryNameIso2={Afghanistan:"AF","Aland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua And Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO","Bosnia And Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Congo, Democratic Republic":"CD","Cook Islands":"CK","Costa Rica":"CR","Cote D'Ivoire":"CI",Croatia:"HR",Cuba:"CU",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island & Mcdonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID","Iran, Islamic Republic Of":"IR",Iraq:"IQ",Ireland:"IE","Isle Of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI",Korea:"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR","Libyan Arab Jamahiriya":"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX","Micronesia, Federated States Of":"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","Netherlands Antilles":"AN","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory, Occupied":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA",Reunion:"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthelemy":"BL","Saint Helena":"SH","Saint Kitts And Nevis":"KN","Saint Lucia":"LC","Saint Martin":"MF","Saint Pierre And Miquelon":"PM","Saint Vincent And Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome And Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia And Sandwich Isl.":"GS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard And Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad And Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks And Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE",Vietnam:"VN","Virgin Islands, British":"VG","Virgin Islands, U.S.":"VI","Wallis And Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},iso2CountryName={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},USState2iso={Alabama:"AL",Alaska:"AK","American Samoa":"AS",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE","District Of Columbia":"DC","Federated States Of Micronesia":"FM",Florida:"FL",Georgia:"GA",Guam:"GU",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansas:"KS",Kentucky:"KY",Louisiana:"LA",Maine:"ME","Marshall Islands":"MH",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV","New Hampshire":"NH","New Jersey":"NJ","New Mexico":"NM","New York":"NY","North Carolina":"NC","North Dakota":"ND","Northern Mariana Islands":"MP",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Palau:"PW",Pennsylvania:"PA","Puerto Rico":"PR","Rhode Island":"RI","South Carolina":"SC","South Dakota":"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT","Virgin Islands":"VI",Virginia:"VA",Washington:"WA","West Virginia":"WV",Wisconsin:"WI",Wyoming:"WY"},countryResponseObjects=[],countryResponseUpdatedObjects={},countryTimeLineGraphs={},countryDataFrames=50,countryGraphsMax=10,countryResponseGraphWidth=100,countryResponseGraphHeight=60,countryResponseGraphRadius=Math.min(countryResponseGraphWidth,countryResponseGraphHeight)/2,countryResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),countryResponseGraphArc=d3.svg.arc().outerRadius(.7*countryResponseGraphRadius).innerRadius(.65*countryResponseGraphRadius),countryResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*countryResponseGraphRadius).innerRadius(.4*countryResponseGraphRadius),countryResponseGraphArcInner=d3.svg.arc().outerRadius(.35*countryResponseGraphRadius).innerRadius(.3*countryResponseGraphRadius),countryResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),countryResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),countryResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),valueMobile=0,valueTablet=0,valueMonitor=0,deviceCircleGraphWidth=150,deviceCircleGraphHeight=75,deviceCircleGraphRadius=Math.min(deviceCircleGraphWidth,deviceCircleGraphHeight)/1.5,deviceCircleGraphMobile=d3.select("#deviceCircleGraphMobile").append("svg").append("g"),deviceCircleGraphTablet=d3.select("#deviceCircleGraphTablet").append("svg").append("g"),deviceCircleGraphMonitor=d3.select("#deviceCircleGraphMonitor").append("svg").append("g");deviceCircleGraphMobile.append("g").attr("class","slices"),deviceCircleGraphTablet.append("g").attr("class","slices"),deviceCircleGraphMonitor.append("g").attr("class","slices");var pie=d3.layout.pie().sort(null).value(function(e){return e.value}),key=function(e){return e.data.label},arcDevice=d3.svg.arc().outerRadius(.8*deviceCircleGraphRadius).innerRadius(.78*deviceCircleGraphRadius),outerArcDevice=d3.svg.arc().innerRadius(.9*deviceCircleGraphRadius).outerRadius(.9*deviceCircleGraphRadius);deviceCircleGraphMobile.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphTablet.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)"),deviceCircleGraphMonitor.attr("transform","scale(-1,1) translate("+-deviceCircleGraphWidth/2.8+","+deviceCircleGraphHeight/1.4+") rotate(180)");var deviceCircleGraphColorMobile=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorTablet=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),deviceCircleGraphColorMonitor=d3.scale.ordinal().domain(["background","value"]).range(["trasparent","#00ADEF"]),endPointResponseObjects=[],endPointResponseUpdatedObjects={},endPointTimeLineGraphs={},endPointTimeLineResponseTimeGraphs={},endPointDataFrames=50,endPointGraphsMax=6,endPointResponseGraphWidth=100,endPointResponseGraphHeight=60,endPointResponseGraphRadius=Math.min(endPointResponseGraphWidth,endPointResponseGraphHeight)/2,endPointResponseGraphPie=d3.layout.pie().sort(null).value(function(e){return e.value}),endPointResponseGraphArc=d3.svg.arc().outerRadius(.7*endPointResponseGraphRadius).innerRadius(.65*endPointResponseGraphRadius),endPointResponseGraphArcMiddle=d3.svg.arc().outerRadius(.65*endPointResponseGraphRadius).innerRadius(.4*endPointResponseGraphRadius),endPointResponseGraphArcInner=d3.svg.arc().outerRadius(.35*endPointResponseGraphRadius).innerRadius(.3*endPointResponseGraphRadius),endPointResponseGraphColorInner=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.5)","rgba(209, 102, 6,0.6)","rgba(256,0,0,0.5)"]),endPointResponseGraphColorMiddle=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,0.7)","rgba(209, 102, 6,0.8)","rgba(256,0,0,0.7)"]),endPointResponseGraphColorOutter=d3.scale.ordinal().domain(["123","4xx","5xx"]).range(["rgba(256,256,256,1)","rgba(209, 102, 6,1)","rgba(256,0,0,1)"]),graphTotals={},endPointHealthGraphs=[],endPoints={},endPointHealthGraphsFrameCount=0,endPointHealthGraphId,lineGraphs=[];createNewLineGraph("Connections","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Unique IPs","trafficLineGraphs","area","half","#00adef","rgba(0,133,199,0.3)",1),createNewLineGraph("Success","responseLineGraphs","area","third",color123,"rgba(256,256,256,0.3)",.5),createNewLineGraph("Rejected","responseLineGraphs","area","third",color4xx,"rgba(209, 102, 6,0.3)",.5),createNewLineGraph("Error","responseLineGraphs","area","third",color5xx,"rgba(256,0,0,0.3)",.5);var mapLargeScope="world",mapDataSet={},mapDataSetUSA={},mapMinValue=0,mapMaxValue=0,mapMinValueUSA=0,mapMaxValueUSA=0,map=new Datamap({element:document.getElementById("dataMapContainer"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.1,popupOnHover:!1,highlightOnHover:!1}}),mapLargeWorld=new Datamap({element:document.getElementById("dataMapContainerLargeWorld"),fills:{defaultFill:"transparent"},data:{},scope:"world",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}}),mapLargeUSA=new Datamap({element:document.getElementById("dataMapContainerLargeUSA"),fills:{defaultFill:"transparent"},data:{},scope:"usa",responsive:!1,geographyConfig:{borderColor:"#00ADEF",borderWidth:.7,highlightBorderWidth:.7,highlightFillColor:function(e){return"#00adef"},highlightBorderColor:"#00ADEF",popupTemplate:function(e,n){return null==n||void 0==n.numberOfThings?['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>0</strong>","</div>"].join(""):['<div class="hoverinfo">',"<strong>",e.properties.name,"</strong>","<br>Connections: <strong>",numberWithCommas(n.numberOfThings),"</strong>","</div>"].join("")}},done:function(e){e.svg.call(d3.behavior.zoom().scaleExtent([1,50]).on("zoom",function(){e.svg.selectAll("g").attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}))}});(responseCodeGraphSvg=d3.select("#responseCodeGraph").append("svg").append("g")).append("g").attr("class","slices"),responseCodeGraphSvg.append("g").attr("class","labels"),responseCodeGraphSvg.append("g").attr("class","lines");var responseCodeGraphWidth=275,responseCodeGraphHeight=150,responseCodeGraphRadius=Math.min(responseCodeGraphWidth,responseCodeGraphHeight)/2,responseCodeGraphArc=d3.svg.arc().outerRadius(.8*responseCodeGraphRadius).innerRadius(.75*responseCodeGraphRadius),responseCodeGraphOuterArc=d3.svg.arc().innerRadius(.9*responseCodeGraphRadius).outerRadius(.9*responseCodeGraphRadius);responseCodeGraphSvg.attr("transform","translate("+responseCodeGraphWidth/2+","+responseCodeGraphHeight/2+")");var responseCodeGraphColor=d3.scale.ordinal().domain(["Success","Rejected","Error"]).range([color123,color4xx,color5xx]),scatterCircleGraphWidth=420,scatterCircleGraphHeight=420,deviceScatterGraph=new Circos({container:"#circleScatterGraph",width:scatterCircleGraphWidth,height:scatterCircleGraphHeight}),scatterCircleGraphInstanceArray=[],deviceScatterData=[],timeLineGraph=new Rickshaw.Graph({element:document.getElementById("timeLine"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"4xx",color:"#ff7b00",renderer:"bar",unstack:!0},{name:"5xx",color:color5xx,renderer:"bar",unstack:!0},{name:"123xx",color:color123,renderer:"bar",unstack:!0}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})}),timeLineGraphLatency=new Rickshaw.Graph({element:document.getElementById("timeLineLatency"),renderer:"multi",series:new Rickshaw.Series.FixedDuration([{name:"Latency",color:"#00adef",renderer:"line",strokeWidth:1},{name:"LatencyArea",color:"rgba(0,133,199,0.2)",renderer:"area"}],void 0,{timeInterval:3e5,maxDataPoints:288,timeBase:timeLineBaseAdjusted.getTime()/1e3})});(axesTime=new Rickshaw.Graph.Axis.Time({graph:timeLineGraph})).render(),(axes=new Rickshaw.Graph.Axis.Y({graph:timeLineGraph,pixelsPerTick:30,ticksTreatment:"inverse"})).render();var hoverDetail=new Rickshaw.Graph.HoverDetail({graph:timeLineGraph,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}}),hoverDetailLatency=new Rickshaw.Graph.HoverDetail({graph:timeLineGraphLatency,yFormatter:function(e){return e},xFormatter:function(e){return formatAMPM(new Date(1e3*e))+" ("+new Date(1e3*e).toUTCString()+")"},formatter:function(e,n,t,a,i,o){return null}});timeLineGraph.update(),timeLineGraphLatency.update();for(var m=0;m<287;m++)timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]={},timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes].Latency=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["4xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["5xx"]=0,timeLineQueue["d:"+timeLineBaseDays+" h:"+timeLineBaseHours+" m:"+timeLineBaseMinutes]["123xx"]=0,55==timeLineBaseMinutes?(timeLineBaseMinutes=0,23==timeLineBaseHours?(timeLineBaseHours=0,timeLineBaseDays++):timeLineBaseHours++):timeLineBaseMinutes+=5;var trafficPointCount=0,apiGatewayCloudWatchLogsPrefix="API-Gateway-Execution-Logs_",apiGatewayObjectTarget=0,apiGatewayObjectActual=0,apiGatewayStagesTarget=0,apiGatewayStagesActual=0,apiGatewayLogGroupTarget=0,apiGatewayLogGroupActual=0,apiGatewayConnectionTarget=0,apiGatewayConnectionActual=0,apiGatewayInventoryQueue={},loginRegion="us-east-1",credentialExpirationDate,lastMetricCall=0,getAWSInventoryInterval=5e3,getAWSMetricsInterval=3e5,getAWSLoggedMetricsInterval=6e4,getAWSBillingInterval=216e5,getAWSEC2TrafficInterval=5e3,initialLoad=!0,baseUrl="https://pqhzr7kno2.execute-api.us-east-1.amazonaws.com/dev/",a,s,t,s3,cloudWatchLogs,cloudWatchObjects,APIGatewayObjects,appAccountS3,appAccountConf,centroids={Andorra:{lat:42.546245,lon:1.601554},"United Arab Emirates":{lat:23.424076,lon:53.847818},Afghanistan:{lat:33.93911,lon:67.709953},"Antigua and Barbuda":{lat:17.060816,lon:-61.796428},Anguilla:{lat:18.220554,lon:-63.068615},Albania:{lat:41.153332,lon:20.168331},Armenia:{lat:40.069099,lon:45.038189},"Netherlands Antilles":{lat:12.226079,lon:-69.060087},Angola:{lat:-11.202692,lon:17.873887},Antarctica:{lat:-75.250973,lon:-.071389},Argentina:{lat:-38.416097,lon:-63.616672},"American Samoa":{lat:-14.270972,lon:-170.132217},Austria:{lat:47.516231,lon:14.550072},Australia:{lat:-25.274398,lon:133.775136},Aruba:{lat:12.52111,lon:-69.968338},Azerbaijan:{lat:40.143105,lon:47.576927},"Bosnia and Herzegovina":{lat:43.915886,lon:17.679076},Barbados:{lat:13.193887,lon:-59.543198},Bangladesh:{lat:23.684994,lon:90.356331},Belgium:{lat:50.503887,lon:4.469936},"Burkina Faso":{lat:12.238333,lon:-1.561593},Bulgaria:{lat:42.733883,lon:25.48583},Bahrain:{lat:25.930414,lon:50.637772},Burundi:{lat:-3.373056,lon:29.918886},Benin:{lat:9.30769,lon:2.315834},Bermuda:{lat:32.321384,lon:-64.75737},Brunei:{lat:4.535277,lon:114.727669},Bolivia:{lat:-16.290154,lon:-63.588653},Brazil:{lat:-14.235004,lon:-51.92528},Bahamas:{lat:25.03428,lon:-77.39628},Bhutan:{lat:27.514162,lon:90.433601},"Bouvet Island":{lat:-54.423199,lon:3.413194},Botswana:{lat:-22.328474,lon:24.684866},Belarus:{lat:53.709807,lon:27.953389},Belize:{lat:17.189877,lon:-88.49765},Canada:{lat:56.130366,lon:-106.346771},"Cocos [Keeling] Islands":{lat:-12.164165,lon:96.870956},"Congo [DRC]":{lat:-4.038333,lon:21.758664},"Central African Republic":{lat:6.611111,lon:20.939444},"Congo [Republic]":{lat:-.228021,lon:15.827659},Switzerland:{lat:46.818188,lon:8.227512},"Côte d'Ivoire":{lat:7.539989,lon:-5.54708},"Cook Islands":{lat:-21.236736,lon:-159.777671},Chile:{lat:-35.675147,lon:-71.542969},Cameroon:{lat:7.369722,lon:12.354722},China:{lat:35.86166,lon:104.195397},Colombia:{lat:4.570868,lon:-74.297333},"Costa Rica":{lat:9.748917,lon:-83.753428},Cuba:{lat:21.521757,lon:-77.781167},"Cape Verde":{lat:16.002082,lon:-24.013197},"Christmas Island":{lat:-10.447525,lon:105.690449},Cyprus:{lat:35.126413,lon:33.429859},"Czech Republic":{lat:49.817492,lon:15.472962},Germany:{lat:51.165691,lon:10.451526},Djibouti:{lat:11.825138,lon:42.590275},Denmark:{lat:56.26392,lon:9.501785},Dominica:{lat:15.414999,lon:-61.370976},"Dominican Republic":{lat:18.735693,lon:-70.162651},Algeria:{lat:28.033886,lon:1.659626},Ecuador:{lat:-1.831239,lon:-78.183406},Estonia:{lat:58.595272,lon:25.013607},Egypt:{lat:26.820553,lon:30.802498},"Western Sahara":{lat:24.215527,lon:-12.885834},Eritrea:{lat:15.179384,lon:39.782334},Spain:{lat:40.463667,lon:-3.74922},Ethiopia:{lat:9.145,lon:40.489673},Finland:{lat:61.92411,lon:25.748151},Fiji:{lat:-16.578193,lon:179.414413},"Falkland Islands [Islas Malvinas]":{lat:-51.796253,lon:-59.523613},Micronesia:{lat:7.425554,lon:150.550812},"Faroe Islands":{lat:61.892635,lon:-6.911806},France:{lat:46.227638,lon:2.213749},Gabon:{lat:-.803689,lon:11.609444},"United Kingdom":{lat:55.378051,lon:-3.435973},Grenada:{lat:12.262776,lon:-61.604171},Georgia:{lat:42.315407,lon:43.356892},"French Guiana":{lat:3.933889,lon:-53.125782},Guernsey:{lat:49.465691,lon:-2.585278},Ghana:{lat:7.946527,lon:-1.023194},Gibraltar:{lat:36.137741,lon:-5.345374},Greenland:{lat:71.706936,lon:-42.604303},Gambia:{lat:13.443182,lon:-15.310139},Guinea:{lat:9.945587,lon:-9.696645},Guadeloupe:{lat:16.995971,lon:-62.067641},"Equatorial Guinea":{lat:1.650801,lon:10.267895},Greece:{lat:39.074208,lon:21.824312},"South Georgia and the South Sandwich Islands":{lat:-54.429579,lon:-36.587909},Guatemala:{lat:15.783471,lon:-90.230759},Guam:{lat:13.444304,lon:144.793731},"Guinea-Bissau":{lat:11.803749,lon:-15.180413},Guyana:{lat:4.860416,lon:-58.93018},"Gaza Strip":{lat:31.354676,lon:34.308825},"Hong Kong":{lat:22.396428,lon:114.109497},"Heard Island and McDonald Islands":{lat:-53.08181,lon:73.504158},Honduras:{lat:15.199999,lon:-86.241905},Croatia:{lat:45.1,lon:15.2},Haiti:{lat:18.971187,lon:-72.285215},Hungary:{lat:47.162494,lon:19.503304},Indonesia:{lat:-.789275,lon:113.921327},Ireland:{lat:53.41291,lon:-8.24389},Israel:{lat:31.046051,lon:34.851612},"Isle of Man":{lat:54.236107,lon:-4.548056},India:{lat:20.593684,lon:78.96288},"British Indian Ocean Territory":{lat:-6.343194,lon:71.876519},Iraq:{lat:33.223191,lon:43.679291},Iran:{lat:32.427908,lon:53.688046},Iceland:{lat:64.963051,lon:-19.020835},Italy:{lat:41.87194,lon:12.56738},Jersey:{lat:49.214439,lon:-2.13125},Jamaica:{lat:18.109581,lon:-77.297508},Jordan:{lat:30.585164,lon:36.238414},Japan:{lat:36.204824,lon:138.252924},Kenya:{lat:-.023559,lon:37.906193},Kyrgyzstan:{lat:41.20438,lon:74.766098},Cambodia:{lat:12.565679,lon:104.990963},Kiribati:{lat:-3.370417,lon:-168.734039},Comoros:{lat:-11.875001,lon:43.872219},"Saint Kitts and Nevis":{lat:17.357822,lon:-62.782998},"North Korea":{lat:40.339852,lon:127.510093},"South Korea":{lat:35.907757,lon:127.766922},Kuwait:{lat:29.31166,lon:47.481766},"Cayman Islands":{lat:19.513469,lon:-80.566956},Kazakhstan:{lat:48.019573,lon:66.923684},Laos:{lat:19.85627,lon:102.495496},Lebanon:{lat:33.854721,lon:35.862285},"Saint Lucia":{lat:13.909444,lon:-60.978893},Liechtenstein:{lat:47.166,lon:9.555373},"Sri Lanka":{lat:7.873054,lon:80.771797},Liberia:{lat:6.428055,lon:-9.429499},Lesotho:{lat:-29.609988,lon:28.233608},Lithuania:{lat:55.169438,lon:23.881275},Luxembourg:{lat:49.815273,lon:6.129583},Latvia:{lat:56.879635,lon:24.603189},Libya:{lat:26.3351,lon:17.228331},Morocco:{lat:31.791702,lon:-7.09262},Monaco:{lat:43.750298,lon:7.412841},Moldova:{lat:47.411631,lon:28.369885},Montenegro:{lat:42.708678,lon:19.37439},Madagascar:{lat:-18.766947,lon:46.869107},"Marshall Islands":{lat:7.131474,lon:171.184478},"Macedonia [FYROM]":{lat:41.608635,lon:21.745275},Mali:{lat:17.570692,lon:-3.996166},"Myanmar [Burma]":{lat:21.913965,lon:95.956223},Mongolia:{lat:46.862496,lon:103.846656},Macau:{lat:22.198745,lon:113.543873},"Northern Mariana Islands":{lat:17.33083,lon:145.38469},Martinique:{lat:14.641528,lon:-61.024174},Mauritania:{lat:21.00789,lon:-10.940835},Montserrat:{lat:16.742498,lon:-62.187366},Malta:{lat:35.937496,lon:14.375416},Mauritius:{lat:-20.348404,lon:57.552152},Maldives:{lat:3.202778,lon:73.22068},Malawi:{lat:-13.254308,lon:34.301525},Mexico:{lat:23.634501,lon:-102.552784},Malaysia:{lat:4.210484,lon:101.975766},Mozambique:{lat:-18.665695,lon:35.529562},Namibia:{lat:-22.95764,lon:18.49041},"New Caledonia":{lat:-20.904305,lon:165.618042},Niger:{lat:17.607789,lon:8.081666},"Norfolk Island":{lat:-29.040835,lon:167.954712},Nigeria:{lat:9.081999,lon:8.675277},Nicaragua:{lat:12.865416,lon:-85.207229},Netherlands:{lat:52.132633,lon:5.291266},Norway:{lat:60.472024,lon:8.468946},Nepal:{lat:28.394857,lon:84.124008},Nauru:{lat:-.522778,lon:166.931503},Niue:{lat:-19.054445,lon:-169.867233},"New Zealand":{lat:-40.900557,lon:174.885971},Oman:{lat:21.512583,lon:55.923255},Panama:{lat:8.537981,lon:-80.782127},Peru:{lat:-9.189967,lon:-75.015152},"French Polynesia":{lat:-17.679742,lon:-149.406843},"Papua New Guinea":{lat:-6.314993,lon:143.95555},Philippines:{lat:12.879721,lon:121.774017},Pakistan:{lat:30.375321,lon:69.345116},Poland:{lat:51.919438,lon:19.145136},"Saint Pierre and Miquelon":{lat:46.941936,lon:-56.27111},"Pitcairn Islands":{lat:-24.703615,lon:-127.439308},"Puerto Rico":{lat:18.220833,lon:-66.590149},"Palestinian Territories":{lat:31.952162,lon:35.233154},Portugal:{lat:39.399872,lon:-8.224454},Palau:{lat:7.51498,lon:134.58252},Paraguay:{lat:-23.442503,lon:-58.443832},Qatar:{lat:25.354826,lon:51.183884},"Réunion":{lat:-21.115141,lon:55.536384},Romania:{lat:45.943161,lon:24.96676},Serbia:{lat:44.016521,lon:21.005859},Russia:{lat:61.52401,lon:105.318756},Rwanda:{lat:-1.940278,lon:29.873888},"Saudi Arabia":{lat:23.885942,lon:45.079162},"Solomon Islands":{lat:-9.64571,lon:160.156194},Seychelles:{lat:-4.679574,lon:55.491977},Sudan:{lat:12.862807,lon:30.217636},Sweden:{lat:60.128161,lon:18.643501},Singapore:{lat:1.352083,lon:103.819836},"Saint Helena":{lat:-24.143474,lon:-10.030696},Slovenia:{lat:46.151241,lon:14.995463},"Svalbard and Jan Mayen":{lat:77.553604,lon:23.670272},Slovakia:{lat:48.669026,lon:19.699024},"Sierra Leone":{lat:8.460555,lon:-11.779889},"San Marino":{lat:43.94236,lon:12.457777},Senegal:{lat:14.497401,lon:-14.452362},Somalia:{lat:5.152149,lon:46.199616},Suriname:{lat:3.919305,lon:-56.027783},"São Tomé and Príncipe":{lat:.18636,lon:6.613081},"El Salvador":{lat:13.794185,lon:-88.89653},Syria:{lat:34.802075,lon:38.996815},Swaziland:{lat:-26.522503,lon:31.465866},"Turks and Caicos Islands":{lat:21.694025,lon:-71.797928},Chad:{lat:15.454166,lon:18.732207},"French Southern Territories":{lat:-49.280366,lon:69.348557},Togo:{lat:8.619543,lon:.824782},Thailand:{lat:15.870032,lon:100.992541},Tajikistan:{lat:38.861034,lon:71.276093},Tokelau:{lat:-8.967363,lon:-171.855881},"Timor-Leste":{lat:-8.874217,lon:125.727539},Turkmenistan:{lat:38.969719,lon:59.556278},Tunisia:{lat:33.886917,lon:9.537499},Tonga:{lat:-21.178986,lon:-175.198242},Turkey:{lat:38.963745,lon:35.243322},"Trinidad and Tobago":{lat:10.691803,lon:-61.222503},Tuvalu:{lat:-7.109535,lon:177.64933},Taiwan:{lat:23.69781,lon:120.960515},Tanzania:{lat:-6.369028,lon:34.888822},Ukraine:{lat:48.379433,lon:31.16558},Uganda:{lat:1.373333,lon:32.290275},"United States":{lat:37.09024,lon:-95.712891},Uruguay:{lat:-32.522779,lon:-55.765835},Uzbekistan:{lat:41.377491,lon:64.585262},"Vatican City":{lat:41.902916,lon:12.453389},"Saint Vincent and the Grenadines":{lat:12.984305,lon:-61.287228},Venezuela:{lat:6.42375,lon:-66.58973},"British Virgin Islands":{lat:18.420695,lon:-64.639968},"U.S. Virgin Islands":{lat:18.335765,lon:-64.896335},Vietnam:{lat:14.058324,lon:108.277199},Vanuatu:{lat:-15.376706,lon:166.959158},"Wallis and Futuna":{lat:-13.768752,lon:-177.156097},Samoa:{lat:-13.759029,lon:-172.104629},Kosovo:{lat:42.602636,lon:20.902977},Yemen:{lat:15.552727,lon:48.516388},Mayotte:{lat:-12.8275,lon:45.166244},"South Africa":{lat:-30.559482,lon:22.937506},Zambia:{lat:-13.133897,lon:27.849332},Zimbabwe:{lat:-19.015438,lon:29.154857}},Shaders={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 1 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = 0;","gl_Position = 0;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = 0;","gl_FragColor = 0;","}"].join("\n")}},ShadersOverlay={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:["varying vec3 vNormal;","varying vec2 vUv;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","vUv = uv;","}"].join("\n"),fragmentShader:["uniform sampler2D texture;","varying vec3 vNormal;","varying vec2 vUv;","void main() {","vec3 diffuse = texture2D( texture, vUv ).xyz;","gl_FragColor = vec4( diffuse, 0.5 );","}"].join("\n")},atmosphere:{uniforms:{},vertexShader:["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.6 );","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","void main() {","float intensity = pow( 0.1 - dot( vNormal, vec3( 0, 2.1, 0.0 ) ), 8.0 );","gl_FragColor = vec4( 0, 0.5, 1, 0.8 ) * intensity;","}"].join("\n")}},Globe=function(){function e(e,n,t,a){var i=(90-e)*Math.PI/180,o=(180-n)*Math.PI/180;N.aws.regions[a].pivot.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var r=new THREE.PlaneGeometry(0,0,1);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E));var s=new THREE.Mesh(r,t);s.position.x=L*Math.sin(i)*Math.cos(o),s.position.y=L*Math.cos(i),s.position.z=L*Math.sin(i)*Math.sin(o),s.scale.z=Math.max(1,.1),s.lookAt(C.position),s.name=a,s.type="region",M.add(s),s.add(N.aws.regions[a].pivot);var l=new THREE.Object3D;l.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,E/2)),N.aws.regions[a].pivot.add(l),r=new THREE.ConeGeometry(3,E,4,1,!0,Math.PI/4,2*Math.PI);var c=new THREE.MeshBasicMaterial({map:K,transparent:!0,depthWrite:!1,depthTest:!1,opacity:.3}),d=new THREE.Mesh(r,c);d.name=a+"Cone",M.add(d),l.add(d),l.rotation.x+=H,(r=new THREE.PlaneGeometry(1,1,1)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-E-2));var u=new THREE.Mesh(r,t);s.add(u)}function n(e){var n=[];for(var a in inventory)for(var i in inventory[a])inventory[a][i].Region==e&&n.push(inventory[a][i]);var o,r,s,l=Math.ceil(Math.sqrt(n.length)),c=Math.round(Math.sqrt(n.length)),d=M.getObjectByName(e),u=4*l,p=4*c,m=0,h=0,g=0,y=0,f=!1,v=0,T=0;for(o=0;o<n.length;o++){for(s=!1,v=1==c?4*m-(4*c-4):4*m-(4*c-4)/2,T=1==l?4*g-(4*l-4):4*g-(4*l-4)/2,r=0;r<d.children[0].children.length;r++)if(d.children[0].children[r].name==n[o].id){d.children[0].children[r].position.x=v,d.children[0].children[r].position.y=T,s=!0;break}s||t(n[o],v,T),m>h&&(h=m),g>y&&(y=g),g>m?f?g==m+1?(f=!1,m++,g=0):m++:(m++,g=0):g<m?g++:g==m&&(f||(g++,m=0,f=!0))}p<4&&(p=4),u<4&&(u=4),d.children[1].scale.set(p+2,u+2,1)}function t(e,n,t){var a,i,o=new THREE.MeshLambertMaterial({map:y(e),transparent:!0,side:THREE.DoubleSide,opacity:.9});if("elb"==e.type){a=1,i=new THREE.Geometry,o.wireframe=!0;var r=new THREE.OctahedronGeometry(1.4,2);r.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-2.5));var s=new THREE.Mesh(r,o),l={left:0,center:0,right:0},c={left:0,center:0,right:0};c.center=-1.4,c.left=c.center,c.right=c.center,l.left=.8,l.right=-.8;var d=new THREE.BoxGeometry(.1,.6,.5);d.applyMatrix((new THREE.Matrix4).makeTranslation(l.center,c.center,-2.5));var u=new THREE.Mesh(d,o),p=new THREE.BoxGeometry(.1,.6,.5);p.applyMatrix((new THREE.Matrix4).makeTranslation(l.left,c.left,-2.5));var m=new THREE.Mesh(p,o),h=new THREE.BoxGeometry(.1,.6,.5);h.applyMatrix((new THREE.Matrix4).makeTranslation(l.right,c.right,-2.5));var g=new THREE.Mesh(h,o),f=new THREE.BoxGeometry(.1,.6,.5);f.applyMatrix((new THREE.Matrix4).makeTranslation(-l.center,-c.center,-2.5));var v=new THREE.Mesh(f,o);i.merge(s.geometry,s.matrix),i.merge(u.geometry,u.matrix),i.merge(m.geometry,m.matrix),i.merge(g.geometry,g.matrix),i.merge(v.geometry,v.matrix)}else"apigateway"==e.type&&(a=3,(i=new THREE.TorusGeometry(1.5,.2,10,28)).applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5)),o.wireframe=!0);var T=new THREE.Mesh(i,o);T.scale.z=Math.max(a,.1),T.lookAt(C.position),T.name=e.id,T.type=e.type,T.position.x=n,T.position.y=t,T.position.z=0,M.add(T),void 0!=e.Region&&N.aws.regions[e.Region].pivot.add(T),inventory[e.type][e.id].mesh=T,M.updateMatrixWorld(!0)}function a(e){var n=document.createElement("canvas");return n.width=256,n.height=256,n.getContext("2d").fillStyle=e,n.getContext("2d").fillRect(0,0,256,256),new THREE.CanvasTexture(n)}function i(){new Audio("sounds/Tick-DeepFrozenApps-397275646.mp3").play(),document.getElementById("enhanceFrame").style.display="block",setTimeout(function(){document.getElementById("enhanceFrame").style.display="none",h((D-210)/1.5)},100)}function o(e){e.preventDefault(),A=!0,G.addEventListener("mousemove",r,!1),G.addEventListener("mouseup",s,!1),G.addEventListener("mouseout",l,!1),x.x=-e.clientX,x.y=e.clientY,B.x=P.x,B.y=P.y}function r(e){I.x=e.clientX/window.innerWidth*2-1,I.y=-e.clientY/window.innerHeight*2+1,A&&(S=O/1e3,P.x=B.x+.005*(-e.clientX-x.x)*S,P.y=B.y+.005*(e.clientY-x.y)*S,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y)}function s(e){A=!1,G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function l(e){G.removeEventListener("mousemove",r,!1),G.removeEventListener("mouseup",s,!1),G.removeEventListener("mouseout",l,!1)}function c(e){return e.preventDefault(),R&&h(.3*e.wheelDeltaY),!1}function d(e){switch(e.keyCode){case 13:"password"==document.activeElement.id&&loginAndLoadInventory(),e.preventDefault();break;case 16:holdingShift=!0,e.preventDefault();break;case 17:toggleRotate(),e.preventDefault();break;case 18:holdingAlt=!0,e.preventDefault();break;case 37:holdingAlt?P.x-=3:P.x-=.1,e.preventDefault();break;case 38:holdingShift?(P.y+=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(20),e.preventDefault();break;case 39:holdingAlt?P.x+=3:P.x+=.1,e.preventDefault();break;case 40:holdingShift?(P.y-=.05,P.y=P.y>H?H:P.y,P.y=P.y<-H?-H:P.y):h(-20),e.preventDefault();break;default:new Audio("sounds/Pen_Clicks-Simon_Craggs-514025171.mp3").play()}}function u(e){void 0==e?e=20:e--,0!=e?setTimeout(function(){P.x+=e/3,u(e)},10):startRotation()}function p(e){switch(e.keyCode){case 16:holdingShift=!1,e.preventDefault();break;case 18:holdingAlt=!1,e.preventDefault()}}function m(e){v.aspect=window.innerWidth/window.innerHeight,v.updateProjectionMatrix(),T.setSize(window.innerWidth,window.innerHeight)}function h(e){e>0?(slidePanes("out"),stopRotation()):slidePanes("in"),D=(D=(D-=e)>1e3?1e3:D)<210?210:D}function g(){w.x+=.1*(P.x-w.x),w.y+=.1*(P.y-w.y),O+=.3*(D-O),v.position.x=O*Math.sin(w.x)*Math.cos(w.y),v.position.y=O*Math.sin(w.y),v.position.z=O*Math.cos(w.x)*Math.cos(w.y),v.lookAt(C.position),rotate&&(P.x-=.001),T.render(M,v),frames++}function y(e){return"fail"==e.health?W:"running"==e.status?void 0!=e.cpu&&void 0!=e.cpu.Average?e.cpu.Average>=0&&e.cpu.Average<75?F:e.cpu.Average>=75&&e.cpu.Average<90?j:V:F:"pending"==e.status||"rebooting"==e.status||"creating"==e.status?K:"stopped"==e.status?Q:"stopping"==e.status||"shutting-down"==e.status?Z:void 0}function f(e,n,t){var a=!0;D=1e3,Math.abs(v.position.x-e)>500||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.03,a=!1):Math.abs(v.position.x-e)>400||t>0&&v.position.z<0||t<0&&v.position.z>0?(P.x-=.01,a=!1):(Math.abs(v.position.x-e)>100||t>0&&v.position.z<0||t<0&&v.position.z>0)&&(P.x-=.001,a=!1),Math.abs(v.position.y-n)>100&&(v.position.y<n?P.y+=.01:P.y-=.01,a=!1),a?stopRotation():setTimeout(function(){f(e,n,t)},10)}var v,M,T,C,R,S,G=document.getElementById("container"),b="images/",L=200,A=!1,E=15,I=(new THREE.Raycaster,new THREE.Vector2),x={x:0,y:0},w={x:0,y:0},P={x:3*Math.PI/2.5,y:Math.PI/7},B={x:0,y:0},O=1e5,D=1e3,H=Math.PI/2,N={},k=document.createElement("canvas");k.width=256,k.height=256;var U=k.getContext("2d").createLinearGradient(256,0,256,256);U.addColorStop(0,"#0080ff"),U.addColorStop(.2,"#0065ff"),U.addColorStop(.5,"#0055ff"),U.addColorStop(.8,"#0065ff"),U.addColorStop(1,"#0080ff"),k.getContext("2d").fillStyle=U,k.getContext("2d").fillRect(0,0,256,256);var F=new THREE.CanvasTexture(k),W=(a("rgb(256,256,256)"),a("rgb(256,0,0)")),j=a("rgb(256,256,0)"),V=a("rgb(179, 71, 0)"),K=a("rgb(256,256,256)"),Q=a("rgb(50,50,50)"),Z=Q,J=a("rgb(0, 173, 239)"),z=null,Y=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.3}),_=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.4}),q=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.45}),X=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.5}),$=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.55}),ee=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.6}),ne=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.65}),te=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.7}),ae=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.75}),ie=new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,transparent:!0,side:THREE.BackSide,depthWrite:!1,depthTest:!1,opacity:.8}),oe=new THREE.CircleGeometry(.5,20),re=new THREE.Mesh(oe,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));return re.scale.set(1.1,1.1,1.1),new THREE.Object3D,function(){var n,t,a;(v=new THREE.PerspectiveCamera(20,window.innerWidth/window.innerHeight,1,1e4)).position.z=O,M=new THREE.Scene;var r=new THREE.PointLight(16777215,.25,1e6);r.position.set(0,1e4,0),M.add(r);var s=new THREE.PointLight(16777215,.25,1e6);s.position.set(0,-1e4,0),M.add(s);var l=new THREE.PointLight(16777215,2,1e6);l.position.set(1e4,0,0),M.add(l);var u=new THREE.PointLight(16777215,2,1e6);u.position.set(-1e4,0,0),M.add(u);var h=new THREE.PointLight(16777215,2,1e6);h.position.set(0,0,1e4),M.add(h);var g=new THREE.PointLight(16777215,2,1e6);g.position.set(0,0,-1e4),M.add(g),M.add(re);var y=new THREE.SphereGeometry(L,100,100);n=Shaders.earth,(t=THREE.UniformsUtils.clone(n.uniforms)).texture.value=THREE.ImageUtils.loadTexture(b+"earth_large-8192x4096.jpg"),a=new THREE.ShaderMaterial({uniforms:t,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,transparent:!0,wireframe:!1,depthWrite:!1,depthTest:!1,opacity:.9}),(C=new THREE.Mesh(y,a)).rotation.y=Math.PI,C.name="globe",M.add(C),a=new THREE.MeshBasicMaterial({map:J,transparent:!0,wireframe:!0,depthWrite:!1,depthTest:!1,opacity:.02});var f=new THREE.SphereGeometry(L-1,100,100),S=new THREE.Mesh(f,a);S.name="meshGlobeUnderlay",M.add(S);var A=ShadersOverlay.earth,E=THREE.UniformsUtils.clone(A.uniforms);E.texture.value=THREE.ImageUtils.loadTexture(b+"stars.jpg"),z=new THREE.ShaderMaterial({uniforms:E,vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,transparent:!0,wireframe:!1,side:THREE.BackSide,opacity:.2});var I=new THREE.SphereGeometry(L+400,20,20),x=new THREE.Mesh(I,z);x.rotation.y=Math.PI,x.name="globeOverlay",M.add(x);var w=new THREE.MeshBasicMaterial({map:K,transparent:!0,side:THREE.DoubleSide,depthWrite:!1,depthTest:!1,opacity:.2});N.aws={},N.aws.regions={},N.aws.regions["us-east-1"]={lat:37,lon:-77,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-east-2"]={lat:40,lon:-83,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-1"]={lat:44,lon:-120,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["us-west-2"]={lat:39,lon:-122,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ca-central-1"]={lat:46,lon:-75,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-1"]={lat:53,lon:-8,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-west-2"]={lat:51.5,lon:0,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["eu-central-1"]={lat:50,lon:8.5,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-1"]={lat:35.7,lon:139.7,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-northeast-2"]={lat:37.5,lon:127,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-1"]={lat:1.3,lon:104,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-southeast-2"]={lat:-33.8,lon:150,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["ap-south-1"]={lat:19,lon:73,pivot:new THREE.Object3D,point:new THREE.Geometry},N.aws.regions["sa-east-1"]={lat:-23.5,lon:-46.5,pivot:new THREE.Object3D,point:new THREE.Geometry};for(var P in N)for(var B in N[P].regions)e(N[P].regions[B].lat,N[P].regions[B].lon,w,B);(T=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),T.domElement.style.position="absolute",G.appendChild(T.domElement),G.addEventListener("mousedown",o,!1),G.addEventListener("dblclick",i,!1),G.addEventListener("mousewheel",c,!1),document.addEventListener("keydown",d,!1),document.addEventListener("keyup",p,!1),window.addEventListener("resize",m,!1),G.addEventListener("mouseover",function(){G.style.cursor="all-scroll",R=!0},!1),G.addEventListener("mouseout",function(){R=!1},!1)}(),setInterval(function(){requestAnimationFrame(g)},1e3/60),window.addEventListener("mousemove",r,!1),window.requestAnimationFrame(g),this.load=function(e,t){if(t.length>0){window.data=t;for(var a=[],i=0;i<t.length;i++)if("billing"==e){var o=new Date,r=month[o.getMonth()];document.getElementById("billingTotal").innerHTML="$"+t[i]+" ("+r+")"}else if("traffic"==e)for(var s=0;s<t[i].connections.length;s++)addTrafficEvent(t[i].id,t[i].connections[s]);else{if("apigateway"==t[i].type)t[i]=translateApiGateway(t[i]);else{if("elb"!=t[i].type)continue;t[i]=translateElb(t[i])}if("terminated"==t[i].status)void 0!=inventory[t[i].type]&&void 0!=inventory[t[i].type][t[i].id]&&delete inventory[t[i].type][t[i].id];else{void 0==inventory[t[i].type]&&(inventory[t[i].type]={}),void 0==inventory[t[i].type][t[i].id]&&(inventory[t[i].type][t[i].id]={},inventory[t[i].type][t[i].id]=t[i],a.push(t[i]));for(var l=0;l<inventoryFields.length;l++)t[i][inventoryFields[l]]instanceof Array?void 0!=t[i][inventoryFields[l]]&&JSON.stringify(t[i][inventoryFields[l]])!=JSON.stringify(inventory[t[i].type][t[i].id][inventoryFields[l]])&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]]):void 0!=t[i][inventoryFields[l]]&&t[i][inventoryFields[l]]!=inventory[t[i].type][t[i].id][inventoryFields[l]]&&(inventory[t[i].type][t[i].id][inventoryFields[l]]=t[i][inventoryFields[l]],inventory[t[i].type][t[i].id].mesh.material.map=y(t[i]))}}if(a.length>0)for(var c in N.aws.regions)n(c),firstInventorySetLoaded||(getInitialTimeLineData(),firstInventorySetLoaded=!0);document.body.style.backgroundImage="none"}},this.elementShadowIntensity=2,this.scene=M,this.setCameraPosition=f,this.clouds=N,this.globeRadius=L,this.regionOffset=E,this.updateHeatMap=function(){void 0!=M.getObjectByName("heatMapMesh")&&M.remove(M.getObjectByName("heatMapMesh"));var e=null,n=null,t=new THREE.Geometry,a=new THREE.Mesh(oe),i=0,o=0;for(var r in heatMapHistory){(o=heatMapHistory[r].count-heatMapAverage)<1&&(o=1),i=Math.floor(scaleBetween(o,1,99,1,heatMapHigh))/100,e=(90-heatMapHistory[r].lat)*Math.PI/180,n=(180-heatMapHistory[r].lon)*Math.PI/180,a.position.x=L*Math.sin(e)*Math.cos(n),a.position.y=L*Math.cos(e),a.position.z=L*Math.sin(e)*Math.sin(n),a.lookAt(C.position),a.updateMatrix();for(var s=0;s<a.geometry.faces.length;s++)a.geometry.faces[s].materialIndex=Math.floor(10*i);t.merge(a.geometry,a.matrix)}var l=new THREE.Mesh(t,new THREE.MultiMaterial([Y,_,q,X,$,ee,ne,te,ae,ie]));l.name="heatMapMesh",M.add(l)},this.globeMesh=C,this.runLoginAnimation=function(){M.getObjectByName("globe").material.depthWrite=!0,M.getObjectByName("globe").material.depthTest=!0,M.getObjectByName("globeOverlay").visible=!1},this.timeWarpSpinMove=u,this.enhance=i,this.zoomReset=function(){setTimeout(function(){D=1e3},100)},this};